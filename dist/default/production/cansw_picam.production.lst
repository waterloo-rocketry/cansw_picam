

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Nov 28 14:28:41 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F26K83
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1
    55                           	psect	text44,global,reloc=2,class=CODE,delta=1
    56                           	psect	text45,global,reloc=2,class=CODE,delta=1
    57                           	psect	text46,global,reloc=2,class=CODE,delta=1
    58                           	psect	text47,global,reloc=2,class=CODE,delta=1
    59                           	psect	text48,global,reloc=2,class=CODE,delta=1
    60                           	psect	text49,global,reloc=2,class=CODE,delta=1
    61                           	psect	text50,global,reloc=2,class=CODE,delta=1
    62                           	psect	text51,global,reloc=2,class=CODE,delta=1
    63                           	psect	text52,global,reloc=2,class=CODE,delta=1
    64                           	psect	text53,global,reloc=2,class=CODE,delta=1
    65                           	psect	text54,global,reloc=2,class=CODE,delta=1
    66                           	psect	text55,global,reloc=2,class=CODE,delta=1
    67                           	psect	text56,global,reloc=2,class=CODE,delta=1
    68                           	psect	text57,global,reloc=2,class=CODE,delta=1
    69                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    70                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1
    72                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    73                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    74                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    75  0000                     
    76                           ; Version 2.20
    77                           ; Generated 05/05/2020 GMT
    78                           ; 
    79                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    80                           ; All rights reserved.
    81                           ; 
    82                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    83                           ; 
    84                           ; Redistribution and use in source and binary forms, with or without modification, are
    85                           ; permitted provided that the following conditions are met:
    86                           ; 
    87                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    88                           ;        conditions and the following disclaimer.
    89                           ; 
    90                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    91                           ;        of conditions and the following disclaimer in the documentation and/or other
    92                           ;        materials provided with the distribution.
    93                           ; 
    94                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    95                           ;        software without specific prior written permission.
    96                           ; 
    97                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    98                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    99                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   100                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   101                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   102                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   103                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   104                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   105                           ; 
   106                           ; 
   107                           ; Code-generator required, PIC18F26K83 Definitions
   108                           ; 
   109                           ; SFR Addresses
   110  0000                     _RXB1CONbits	set	14320
   111  0000                     _RXB1DLCbits	set	14325
   112  0000                     _RXB1SIDL	set	14322
   113  0000                     _RXB1SIDH	set	14321
   114  0000                     _TXB0DLCbits	set	14309
   115  0000                     _TXB0SIDL	set	14306
   116  0000                     _TXB0SIDH	set	14305
   117  0000                     _TXB0CONbits	set	14304
   118  0000                     _RXM1SIDL	set	14269
   119  0000                     _RXM1SIDH	set	14268
   120  0000                     _RXM0SIDL	set	14265
   121  0000                     _RXM0SIDH	set	14264
   122  0000                     _BRGCON3bits	set	14085
   123  0000                     _BRGCON2bits	set	14084
   124  0000                     _BRGCON1bits	set	14083
   125  0000                     _CIOCONbits	set	14080
   126  0000                     _RXB1D0	set	14326
   127  0000                     _TXB0D0	set	14310
   128  0000                     _PIR5bits	set	14757
   129  0000                     _PIE5bits	set	14741
   130  0000                     _PIR3bits	set	14755
   131  0000                     _PIE3bits	set	14739
   132  0000                     _PIR5	set	14757
   133  0000                     _PMD7	set	14791
   134  0000                     _PMD6	set	14790
   135  0000                     _PMD5	set	14789
   136  0000                     _PMD4	set	14788
   137  0000                     _PMD3	set	14787
   138  0000                     _PMD2	set	14786
   139  0000                     _PMD1	set	14785
   140  0000                     _PMD0	set	14784
   141  0000                     _OSCCON2	set	14810
   142  0000                     _OSCCON3bits	set	14811
   143  0000                     _OSCCON1	set	14809
   144  0000                     _CANRXPPS	set	15085
   145  0000                     _RC1PPS	set	14865
   146  0000                     _ODCONC	set	14946
   147  0000                     _ODCONB	set	14930
   148  0000                     _ODCONA	set	14914
   149  0000                     _WPUC	set	14945
   150  0000                     _WPUA	set	14913
   151  0000                     _WPUB	set	14929
   152  0000                     _WPUE	set	14977
   153  0000                     _ANSELA	set	14912
   154  0000                     _ANSELB	set	14928
   155  0000                     _ANSELC	set	14944
   156  0000                     _ANSELB3	set	119427
   157  0000                     _ANSELB4	set	119428
   158  0000                     _ANSELC0	set	119552
   159  0000                     _FVRCONbits	set	16065
   160  0000                     _FVRCON	set	16065
   161  0000                     _ADCON1bits	set	16121
   162  0000                     _ADERRL	set	16098
   163  0000                     _ADERRH	set	16099
   164  0000                     _ADPREVL	set	16109
   165  0000                     _ADPREVH	set	16110
   166  0000                     _ADFLTRL	set	16102
   167  0000                     _ADFLTRH	set	16103
   168  0000                     _ADSTATbits	set	16124
   169  0000                     _ADACCL	set	16104
   170  0000                     _ADACCH	set	16105
   171  0000                     _ADCON2bits	set	16122
   172  0000                     _ADCNT	set	16107
   173  0000                     _ADCON3bits	set	16123
   174  0000                     _ADRESL	set	16111
   175  0000                     _ADRESH	set	16112
   176  0000                     _ADCON0bits	set	16120
   177  0000                     _ADCON0	set	16120
   178  0000                     _ADCLK	set	16127
   179  0000                     _ADACT	set	16126
   180  0000                     _ADREF	set	16125
   181  0000                     _ADSTAT	set	16124
   182  0000                     _ADCON3	set	16123
   183  0000                     _ADCON2	set	16122
   184  0000                     _ADCON1	set	16121
   185  0000                     _ADPREH	set	16119
   186  0000                     _ADPREL	set	16118
   187  0000                     _ADCAP	set	16117
   188  0000                     _ADACQH	set	16116
   189  0000                     _ADACQL	set	16115
   190  0000                     _ADPCH	set	16113
   191  0000                     _ADRPT	set	16108
   192  0000                     _ADACCU	set	16106
   193  0000                     _ADSTPTH	set	16101
   194  0000                     _ADSTPTL	set	16100
   195  0000                     _ADUTHH	set	16097
   196  0000                     _ADUTHL	set	16096
   197  0000                     _ADLTHH	set	16095
   198  0000                     _ADLTHL	set	16094
   199  0000                     _PORTBbits	set	16331
   200  0000                     _RXB0DLCbits	set	16261
   201  0000                     _RXB0SIDL	set	16258
   202  0000                     _RXB0SIDH	set	16257
   203  0000                     _COMSTATbits	set	16272
   204  0000                     _RXB0CONbits	set	16256
   205  0000                     _ECANCONbits	set	16273
   206  0000                     _CANSTATbits	set	16270
   207  0000                     _CANCONbits	set	16271
   208  0000                     _T0CON1bits	set	16313
   209  0000                     _T0CON0bits	set	16312
   210  0000                     _INTCON0bits	set	16338
   211  0000                     _TRISC	set	16324
   212  0000                     _TRISB	set	16323
   213  0000                     _TRISA	set	16322
   214  0000                     _LATC	set	16316
   215  0000                     _LATB	set	16315
   216  0000                     _LATA	set	16314
   217  0000                     _RXB0D0	set	16262
   218  0000                     _TRISB3	set	130587
   219  0000                     _TRISB4	set	130588
   220  0000                     _LATB5	set	130525
   221  0000                     _TRISB5	set	130589
   222  0000                     _LATC4	set	130532
   223  0000                     _TRISC4	set	130596
   224  0000                     _TRISC3	set	130595
   225  0000                     _TRISC2	set	130594
   226  0000                     _LATC3	set	130531
   227  0000                     _LATC2	set	130530
   228  0000                     _TRISC0	set	130592
   229  0000                     _TRISC1	set	130593
   230                           
   231                           ; #config settings
   232                           
   233                           	psect	cinit
   234  001B74                     __pcinit:
   235                           	callstack 0
   236  001B74                     start_initialization:
   237                           	callstack 0
   238  001B74                     __initialization:
   239                           	callstack 0
   240                           
   241                           ; Clear objects allocated to BANK1 (100 bytes)
   242  001B74  EE00  F100         	lfsr	0,__pbssBANK1
   243  001B78  0E64               	movlw	100
   244  001B7A                     clear_0:
   245  001B7A  6AEE               	clrf	postinc0,c
   246  001B7C  06E8               	decf	wreg,f,c
   247  001B7E  E1FD               	bnz	clear_0
   248                           
   249                           ; Clear objects allocated to BANK0 (24 bytes)
   250  001B80  EE00  F0CD         	lfsr	0,__pbssBANK0
   251  001B84  0E18               	movlw	24
   252  001B86                     clear_1:
   253  001B86  6AEE               	clrf	postinc0,c
   254  001B88  06E8               	decf	wreg,f,c
   255  001B8A  E1FD               	bnz	clear_1
   256                           
   257                           ; Clear objects allocated to COMRAM (7 bytes)
   258  001B8C  EE00  F02D         	lfsr	0,__pbssCOMRAM
   259  001B90  0E07               	movlw	7
   260  001B92                     clear_2:
   261  001B92  6AEE               	clrf	postinc0,c
   262  001B94  06E8               	decf	wreg,f,c
   263  001B96  E1FD               	bnz	clear_2
   264                           
   265                           ;
   266                           ; Setup IVTBASE
   267                           ;
   268  001B98  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   269  001B9A  6ED5               	movwf	213,c
   270  001B9C  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   271  001B9E  6ED6               	movwf	214,c
   272  001BA0  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   273  001BA2  6ED7               	movwf	215,c
   274  001BA4                     end_of_initialization:
   275                           	callstack 0
   276  001BA4                     __end_of__initialization:
   277                           	callstack 0
   278  001BA4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   279  001BA6  6EF8               	movwf	tblptru,c
   280  001BA8  0100               	movlb	0
   281  001BAA  EF63  F001         	goto	_main	;jump to C main() function
   282                           
   283                           	psect	bssCOMRAM
   284  00002D                     __pbssCOMRAM:
   285                           	callstack 0
   286  00002D                     _millis_counter:
   287                           	callstack 0
   288  00002D                     	ds	4
   289  000031                     _can_rcv_cb:
   290                           	callstack 0
   291  000031                     	ds	2
   292  000033                     timer0_handle_interrupt@internal_count:
   293                           	callstack 0
   294  000033                     	ds	1
   295                           
   296                           	psect	bssBANK0
   297  0000CD                     __pbssBANK0:
   298                           	callstack 0
   299  0000CD                     _ctx:
   300                           	callstack 0
   301  0000CD                     	ds	4
   302  0000D1                     _last_can_traffic_timestamp_ms:
   303                           	callstack 0
   304  0000D1                     	ds	4
   305  0000D5                     	ds	2
   306  0000D7                     	ds	2
   307  0000D9                     _battery_voltage_critical:
   308                           	callstack 0
   309  0000D9                     	ds	1
   310  0000DA                     _requested_valve_state:
   311                           	callstack 0
   312  0000DA                     	ds	1
   313  0000DB                     _buf:
   314                           	callstack 0
   315  0000DB                     	ds	10
   316                           
   317                           	psect	bssBANK1
   318  000100                     __pbssBANK1:
   319                           	callstack 0
   320  000100                     _tx_pool:
   321                           	callstack 0
   322  000100                     	ds	100
   323                           
   324                           	psect	cstackBANK0
   325  000060                     __pcstackBANK0:
   326                           	callstack 0
   327  000060                     ?_ADCC_GetSingleConversion:
   328                           	callstack 0
   329  000060                     ?___wmul:
   330                           	callstack 0
   331  000060                     ?___lwdiv:
   332                           	callstack 0
   333  000060                     ?___ftpack:
   334                           	callstack 0
   335  000060                     ?_millis:
   336                           	callstack 0
   337  000060                     write_timestamp_2bytes@timestamp:
   338                           	callstack 0
   339  000060                     can_init@timing:
   340                           	callstack 0
   341  000060                     srb_is_full@ctx:
   342                           	callstack 0
   343  000060                     srb_is_empty@ctx:
   344                           	callstack 0
   345  000060                     ___wmul@multiplier:
   346                           	callstack 0
   347  000060                     ___lwdiv@dividend:
   348                           	callstack 0
   349  000060                     memcpy@d1:
   350                           	callstack 0
   351  000060                     ___ftpack@arg:
   352                           	callstack 0
   353  000060                     write_timestamp_3bytes@timestamp:
   354                           	callstack 0
   355  000060                     can_generate_timing_params@can_frequency:
   356                           	callstack 0
   357                           
   358                           ; 4 bytes @ 0x0
   359  000060                     	ds	2
   360  000062                     ??_srb_is_full:
   361  000062                     ??_ADCC_GetSingleConversion:
   362  000062                     write_timestamp_2bytes@output:
   363                           	callstack 0
   364  000062                     can_init@receive_callback:
   365                           	callstack 0
   366  000062                     ___wmul@multiplicand:
   367                           	callstack 0
   368  000062                     ___lwdiv@divisor:
   369                           	callstack 0
   370  000062                     memcpy@s1:
   371                           	callstack 0
   372                           
   373                           ; 2 bytes @ 0x2
   374  000062                     	ds	1
   375  000063                     ___ftpack@exp:
   376                           	callstack 0
   377                           
   378                           ; 1 bytes @ 0x3
   379  000063                     	ds	1
   380  000064                     ??_can_init:
   381  000064                     ADCC_GetSingleConversion@channel:
   382                           	callstack 0
   383  000064                     ___ftpack@sign:
   384                           	callstack 0
   385  000064                     ___lwdiv@counter:
   386                           	callstack 0
   387  000064                     write_timestamp_3bytes@output:
   388                           	callstack 0
   389  000064                     can_generate_timing_params@timing:
   390                           	callstack 0
   391  000064                     ___wmul@product:
   392                           	callstack 0
   393  000064                     memcpy@n:
   394                           	callstack 0
   395  000064                     build_analog_data_msg@timestamp:
   396                           	callstack 0
   397                           
   398                           ; 4 bytes @ 0x4
   399  000064                     	ds	1
   400  000065                     ??___ftpack:
   401  000065                     ___lwdiv@quotient:
   402                           	callstack 0
   403                           
   404                           ; 2 bytes @ 0x5
   405  000065                     	ds	1
   406  000066                     ??_can_generate_timing_params:
   407  000066                     ?_get_offset_bytes:
   408                           	callstack 0
   409  000066                     memcpy@tmp:
   410                           	callstack 0
   411  000066                     get_offset_bytes@ctx:
   412                           	callstack 0
   413  000066                     build_valve_stat_msg@timestamp:
   414                           	callstack 0
   415  000066                     build_board_stat_msg@timestamp:
   416                           	callstack 0
   417                           
   418                           ; 4 bytes @ 0x6
   419  000066                     	ds	1
   420  000067                     srb_init@ctx:
   421                           	callstack 0
   422  000067                     memcpy@d:
   423                           	callstack 0
   424                           
   425                           ; 2 bytes @ 0x7
   426  000067                     	ds	1
   427  000068                     ?___lwtoft:
   428                           	callstack 0
   429  000068                     build_analog_data_msg@sensor_id:
   430                           	callstack 0
   431  000068                     get_offset_bytes@index:
   432                           	callstack 0
   433  000068                     ___lwtoft@c:
   434                           	callstack 0
   435                           
   436                           ; 2 bytes @ 0x8
   437  000068                     	ds	1
   438  000069                     build_analog_data_msg@sensor_data:
   439                           	callstack 0
   440  000069                     srb_init@pool:
   441                           	callstack 0
   442  000069                     memcpy@s:
   443                           	callstack 0
   444                           
   445                           ; 2 bytes @ 0x9
   446  000069                     	ds	1
   447  00006A                     build_valve_stat_msg@valve_state:
   448                           	callstack 0
   449  00006A                     build_board_stat_msg@error_code:
   450                           	callstack 0
   451                           
   452                           ; 1 bytes @ 0xA
   453  00006A                     	ds	1
   454  00006B                     ?___ftmul:
   455                           	callstack 0
   456  00006B                     build_valve_stat_msg@req_valve_state:
   457                           	callstack 0
   458  00006B                     build_board_stat_msg@error_data:
   459                           	callstack 0
   460  00006B                     build_analog_data_msg@output:
   461                           	callstack 0
   462  00006B                     can_send@message:
   463                           	callstack 0
   464  00006B                     srb_init@pool_size:
   465                           	callstack 0
   466  00006B                     ___ftmul@f1:
   467                           	callstack 0
   468                           
   469                           ; 3 bytes @ 0xB
   470  00006B                     	ds	1
   471  00006C                     build_valve_stat_msg@message_type:
   472                           	callstack 0
   473  00006C                     srb_push@ctx:
   474                           	callstack 0
   475  00006C                     srb_pop@ctx:
   476                           	callstack 0
   477                           
   478                           ; 2 bytes @ 0xC
   479  00006C                     	ds	1
   480  00006D                     ??_can_send:
   481  00006D                     build_board_stat_msg@error_data_len:
   482                           	callstack 0
   483  00006D                     srb_init@element_size:
   484                           	callstack 0
   485                           
   486                           ; 2 bytes @ 0xD
   487  00006D                     	ds	1
   488  00006E                     build_valve_stat_msg@output:
   489                           	callstack 0
   490  00006E                     build_board_stat_msg@output:
   491                           	callstack 0
   492  00006E                     srb_push@element:
   493                           	callstack 0
   494  00006E                     srb_pop@element:
   495                           	callstack 0
   496  00006E                     ___ftmul@f2:
   497                           	callstack 0
   498                           
   499                           ; 3 bytes @ 0xE
   500  00006E                     	ds	1
   501  00006F                     txb_init@pool:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0xF
   505  00006F                     	ds	1
   506  000070                     ??_build_board_stat_msg:
   507  000070                     ??_srb_push:
   508  000070                     ??_srb_pop:
   509  000070                     ??_build_valve_stat_msg:
   510                           
   511                           ; 1 bytes @ 0x10
   512  000070                     	ds	1
   513  000071                     ??___ftmul:
   514  000071                     txb_init@pool_size:
   515                           	callstack 0
   516                           
   517                           ; 2 bytes @ 0x11
   518  000071                     	ds	2
   519  000073                     build_board_stat_msg@i:
   520                           	callstack 0
   521  000073                     txb_init@can_send_fp:
   522                           	callstack 0
   523                           
   524                           ; 2 bytes @ 0x13
   525  000073                     	ds	1
   526  000074                     ___ftmul@exp:
   527                           	callstack 0
   528  000074                     srb_push@offset:
   529                           	callstack 0
   530  000074                     srb_pop@offset:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0x14
   534  000074                     	ds	1
   535  000075                     txb_init@can_tx_ready:
   536                           	callstack 0
   537  000075                     ___ftmul@f3_as_product:
   538                           	callstack 0
   539                           
   540                           ; 3 bytes @ 0x15
   541  000075                     	ds	1
   542  000076                     txb_enqueue@msg:
   543                           	callstack 0
   544  000076                     txb_heartbeat@msg_sent:
   545                           	callstack 0
   546                           
   547                           ; 11 bytes @ 0x16
   548  000076                     	ds	2
   549  000078                     vent_send_status@req_state:
   550                           	callstack 0
   551  000078                     ___ftmul@cntr:
   552                           	callstack 0
   553  000078                     check_bus_current_error@timestamp:
   554                           	callstack 0
   555  000078                     send_status_ok@board_stat_msg:
   556                           	callstack 0
   557                           
   558                           ; 11 bytes @ 0x18
   559  000078                     	ds	1
   560  000079                     vent_send_status@curr_state:
   561                           	callstack 0
   562  000079                     ___ftmul@sign:
   563                           	callstack 0
   564                           
   565                           ; 1 bytes @ 0x19
   566  000079                     	ds	1
   567  00007A                     ?___fttol:
   568                           	callstack 0
   569  00007A                     vent_send_status@valve_open:
   570                           	callstack 0
   571  00007A                     ___fttol@f1:
   572                           	callstack 0
   573                           
   574                           ; 3 bytes @ 0x1A
   575  00007A                     	ds	1
   576  00007B                     vent_send_status@valve_closed:
   577                           	callstack 0
   578                           
   579                           ; 1 bytes @ 0x1B
   580  00007B                     	ds	1
   581  00007C                     check_bus_current_error@sense_raw_mV:
   582                           	callstack 0
   583  00007C                     vent_send_status@stat_msg:
   584                           	callstack 0
   585                           
   586                           ; 11 bytes @ 0x1C
   587  00007C                     	ds	2
   588  00007E                     ??___fttol:
   589  00007E                     check_bus_current_error@curr_data:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x1E
   593  00007E                     	ds	2
   594  000080                     check_bus_current_error@curr_draw_mA:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x20
   598  000080                     	ds	2
   599  000082                     check_bus_current_error@error_msg:
   600                           	callstack 0
   601                           
   602                           ; 11 bytes @ 0x22
   603  000082                     	ds	1
   604  000083                     ___fttol@sign1:
   605                           	callstack 0
   606                           
   607                           ; 1 bytes @ 0x23
   608  000083                     	ds	1
   609  000084                     ___fttol@lval:
   610                           	callstack 0
   611                           
   612                           ; 4 bytes @ 0x24
   613  000084                     	ds	4
   614  000088                     ___fttol@exp1:
   615                           	callstack 0
   616                           
   617                           ; 1 bytes @ 0x28
   618  000088                     	ds	1
   619  000089                     check_battery_voltage_error@timestamp:
   620                           	callstack 0
   621                           
   622                           ; 4 bytes @ 0x29
   623  000089                     	ds	4
   624  00008D                     check_battery_voltage_error@batt_raw:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0x2D
   628  00008D                     	ds	2
   629  00008F                     check_battery_voltage_error@error_code:
   630                           	callstack 0
   631                           
   632                           ; 1 bytes @ 0x2F
   633  00008F                     	ds	1
   634  000090                     _check_battery_voltage_error$2273:
   635                           	callstack 0
   636                           
   637                           ; 2 bytes @ 0x30
   638  000090                     	ds	2
   639  000092                     check_battery_voltage_error@batt_data:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0x32
   643  000092                     	ds	2
   644  000094                     check_battery_voltage_error@error_msg:
   645                           	callstack 0
   646                           
   647                           ; 11 bytes @ 0x34
   648  000094                     	ds	11
   649  00009F                     check_battery_voltage_error@batt_msg:
   650                           	callstack 0
   651                           
   652                           ; 11 bytes @ 0x3F
   653  00009F                     	ds	11
   654  0000AA                     check_battery_voltage_error@batt_voltage_mV:
   655                           	callstack 0
   656                           
   657                           ; 2 bytes @ 0x4A
   658  0000AA                     	ds	2
   659  0000AC                     
   660                           ; 2 bytes @ 0x4C
   661  0000AC                     	ds	2
   662  0000AE                     
   663                           ; 3 bytes @ 0x4E
   664  0000AE                     	ds	3
   665  0000B1                     ??_main:
   666                           
   667                           ; 1 bytes @ 0x51
   668  0000B1                     	ds	4
   669  0000B5                     main@last_millis:
   670                           	callstack 0
   671                           
   672                           ; 4 bytes @ 0x55
   673  0000B5                     	ds	4
   674  0000B9                     main@blue_led_on:
   675                           	callstack 0
   676                           
   677                           ; 1 bytes @ 0x59
   678  0000B9                     	ds	1
   679  0000BA                     main@status_ok:
   680                           	callstack 0
   681                           
   682                           ; 1 bytes @ 0x5A
   683  0000BA                     	ds	1
   684  0000BB                     main@error_msg:
   685                           	callstack 0
   686                           
   687                           ; 11 bytes @ 0x5B
   688  0000BB                     	ds	11
   689  0000C6                     main@can_setup:
   690                           	callstack 0
   691                           
   692                           ; 7 bytes @ 0x66
   693  0000C6                     	ds	7
   694                           
   695                           	psect	cstackCOMRAM
   696  000001                     __pcstackCOMRAM:
   697                           	callstack 0
   698  000001                     ?_get_message_type:
   699                           	callstack 0
   700  000001                     ?i2_millis:
   701                           	callstack 0
   702  000001                     get_message_type@msg:
   703                           	callstack 0
   704  000001                     get_board_unique_id@msg:
   705                           	callstack 0
   706  000001                     i2memcpy@d1:
   707                           	callstack 0
   708                           
   709                           ; 2 bytes @ 0x0
   710  000001                     	ds	2
   711  000003                     ??_get_message_type:
   712  000003                     i2memcpy@s1:
   713                           	callstack 0
   714                           
   715                           ; 2 bytes @ 0x2
   716  000003                     	ds	2
   717  000005                     ?_get_general_cmd_type:
   718                           	callstack 0
   719  000005                     ?_get_req_valve_state:
   720                           	callstack 0
   721  000005                     get_general_cmd_type@msg:
   722                           	callstack 0
   723  000005                     get_req_valve_state@msg:
   724                           	callstack 0
   725  000005                     i2memcpy@n:
   726                           	callstack 0
   727                           
   728                           ; 2 bytes @ 0x4
   729  000005                     	ds	2
   730  000007                     ??_get_general_cmd_type:
   731  000007                     ??_get_req_valve_state:
   732  000007                     i2memcpy@d:
   733                           	callstack 0
   734                           
   735                           ; 2 bytes @ 0x6
   736  000007                     	ds	1
   737  000008                     get_general_cmd_type@msg_type:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0x7
   741  000008                     	ds	1
   742  000009                     get_req_valve_state@msg_type:
   743                           	callstack 0
   744  000009                     i2memcpy@s:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0x8
   748  000009                     	ds	2
   749  00000B                     i2memcpy@tmp:
   750                           	callstack 0
   751  00000B                     can_msg_handler@msg:
   752                           	callstack 0
   753                           
   754                           ; 2 bytes @ 0xA
   755  00000B                     	ds	2
   756  00000D                     ??_can_msg_handler:
   757                           
   758                           ; 1 bytes @ 0xC
   759  00000D                     	ds	2
   760  00000F                     can_msg_handler@msg_type:
   761                           	callstack 0
   762                           
   763                           ; 2 bytes @ 0xE
   764  00000F                     	ds	2
   765  000011                     can_msg_handler@cmd_type:
   766                           	callstack 0
   767                           
   768                           ; 2 bytes @ 0x10
   769  000011                     	ds	2
   770  000013                     ??_can_handle_interrupt:
   771                           
   772                           ; 1 bytes @ 0x12
   773  000013                     	ds	4
   774  000017                     can_handle_interrupt@rcvd_msg:
   775                           	callstack 0
   776                           
   777                           ; 11 bytes @ 0x16
   778  000017                     	ds	11
   779  000022                     can_handle_interrupt@rcvd_msg_2164:
   780                           	callstack 0
   781                           
   782                           ; 11 bytes @ 0x21
   783  000022                     	ds	11
   784  00002D                     
   785                           ; 1 bytes @ 0x2C
   786 ;;
   787 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   788 ;;
   789 ;; *************** function _main *****************
   790 ;; Defined at:
   791 ;;		line 33 in file "main.c"
   792 ;; Parameters:    Size  Location     Type
   793 ;;  argc            2   76[BANK0 ] int 
   794 ;;  argv            3   78[BANK0 ] PTR PTR unsigned char 
   795 ;; Auto vars:     Size  Location     Type
   796 ;;  error_msg      11   91[BANK0 ] struct .
   797 ;;  status_ok       1   90[BANK0 ] unsigned char 
   798 ;;  can_setup       7  102[BANK0 ] struct .
   799 ;;  last_millis     4   85[BANK0 ] unsigned long 
   800 ;;  blue_led_on     1   89[BANK0 ] unsigned char 
   801 ;; Return value:  Size  Location     Type
   802 ;;                  2   76[BANK0 ] int 
   803 ;; Registers used:
   804 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
   805 ;; Tracked objects:
   806 ;;		On entry : 0/0
   807 ;;		On exit  : 0/0
   808 ;;		Unchanged: 0/0
   809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   810 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   811 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   812 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   813 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   814 ;;Total ram usage:       33 bytes
   815 ;; Hardware stack levels required when called: 10
   816 ;; This function calls:
   817 ;;		_ADCC_DisableContinuousConversion
   818 ;;		_ADCC_Initialize
   819 ;;		_FVR_Initialize
   820 ;;		_LED_init
   821 ;;		_OSCILLATOR_Initialize
   822 ;;		_SYSTEM_Initialize
   823 ;;		_build_board_stat_msg
   824 ;;		_can_generate_timing_params
   825 ;;		_can_init
   826 ;;		_check_battery_voltage_error
   827 ;;		_check_bus_current_error
   828 ;;		_check_valve_pin_error
   829 ;;		_is_batt_voltage_critical
   830 ;;		_millis
   831 ;;		_send_status_ok
   832 ;;		_timer0_init
   833 ;;		_txb_enqueue
   834 ;;		_txb_heartbeat
   835 ;;		_txb_init
   836 ;;		_valve_init
   837 ;;		_vent_close
   838 ;;		_vent_open
   839 ;;		_vent_send_status
   840 ;; This function is called by:
   841 ;;		Startup code after reset
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845                           	psect	text0
   846  0002C6                     __ptext0:
   847                           	callstack 0
   848  0002C6                     _main:
   849                           	callstack 21
   850  0002C6                     
   851                           ;main.c: 35: SYSTEM_Initialize();
   852  0002C6  ECD3  F00E         	call	_SYSTEM_Initialize	;wreg free
   853                           
   854                           ;main.c: 36: OSCILLATOR_Initialize();
   855  0002CA  EC43  F00E         	call	_OSCILLATOR_Initialize	;wreg free
   856  0002CE                     
   857                           ;main.c: 38: FVR_Initialize();
   858  0002CE  EC13  F00F         	call	_FVR_Initialize	;wreg free
   859  0002D2                     
   860                           ;main.c: 39: ADCC_Initialize();
   861  0002D2  EC75  F00C         	call	_ADCC_Initialize	;wreg free
   862  0002D6                     
   863                           ;main.c: 40: ADCC_DisableContinuousConversion();
   864  0002D6  EC20  F00F         	call	_ADCC_DisableContinuousConversion	;wreg free
   865  0002DA                     
   866                           ;main.c: 42: LED_init();
   867  0002DA  EC0C  F00F         	call	_LED_init	;wreg free
   868  0002DE                     
   869                           ;main.c: 45: timer0_init();
   870  0002DE  ECB9  F00E         	call	_timer0_init	;wreg free
   871  0002E2                     
   872                           ;main.c: 48: INTCON0bits.GIE = 1;
   873  0002E2  8ED2               	bsf	210,7,c	;volatile
   874  0002E4                     
   875                           ;main.c: 51: TRISC1 = 0;
   876  0002E4  92C4               	bcf	16324,1,c	;volatile
   877  0002E6                     
   878                           ;main.c: 52: RC1PPS = 0x33;
   879  0002E6  0E33               	movlw	51
   880  0002E8  013A               	movlb	58	; () banked
   881  0002EA  6F11               	movwf	17,b	;volatile
   882  0002EC                     
   883                           ; BSR set to: 58
   884                           ;main.c: 55: TRISC0 = 1;
   885  0002EC  80C4               	bsf	16324,0,c	;volatile
   886  0002EE                     
   887                           ; BSR set to: 58
   888                           ;main.c: 56: ANSELC0 = 0;
   889  0002EE  9160               	bcf	96,0,b	;volatile
   890  0002F0                     
   891                           ; BSR set to: 58
   892                           ;main.c: 57: CANRXPPS = 0x10;
   893  0002F0  0E10               	movlw	16
   894  0002F2  6FED               	movwf	237,b	;volatile
   895  0002F4                     
   896                           ; BSR set to: 58
   897                           ;main.c: 60: can_timing_t can_setup;;main.c: 61: can_generate_timing_params(12000000, &c
      +                          an_setup);
   898  0002F4  0E00               	movlw	0
   899  0002F6  0100               	movlb	0	; () banked
   900  0002F8  6F60               	movwf	can_generate_timing_params@can_frequency& (0+255),b
   901  0002FA  0E1B               	movlw	27
   902  0002FC  6F61               	movwf	(can_generate_timing_params@can_frequency+1)& (0+255),b
   903  0002FE  0EB7               	movlw	183
   904  000300  6F62               	movwf	(can_generate_timing_params@can_frequency+2)& (0+255),b
   905  000302  0E00               	movlw	0
   906  000304  6F63               	movwf	(can_generate_timing_params@can_frequency+3)& (0+255),b
   907  000306  0EC6               	movlw	low main@can_setup
   908  000308  6F64               	movwf	can_generate_timing_params@timing& (0+255),b
   909  00030A  0E00               	movlw	high main@can_setup
   910  00030C  6F65               	movwf	(can_generate_timing_params@timing+1)& (0+255),b
   911  00030E  EC0F  F000         	call	_can_generate_timing_params	;wreg free
   912  000312                     
   913                           ;main.c: 62: can_init(&can_setup, can_msg_handler);
   914  000312  0EC6               	movlw	low main@can_setup
   915  000314  0100               	movlb	0	; () banked
   916  000316  6F60               	movwf	can_init@timing& (0+255),b
   917  000318  0E00               	movlw	high main@can_setup
   918  00031A  6F61               	movwf	(can_init@timing+1)& (0+255),b
   919  00031C  0EB6               	movlw	low _can_msg_handler
   920  00031E  6F62               	movwf	can_init@receive_callback& (0+255),b
   921  000320  0E09               	movlw	high _can_msg_handler
   922  000322  6F63               	movwf	(can_init@receive_callback+1)& (0+255),b
   923  000324  EC1E  F004         	call	_can_init	;wreg free
   924  000328                     
   925                           ;main.c: 64: txb_init(tx_pool, sizeof(tx_pool), can_send, can_send_rdy);
   926  000328  0E00               	movlw	low _tx_pool
   927  00032A  0100               	movlb	0	; () banked
   928  00032C  6F6F               	movwf	txb_init@pool& (0+255),b
   929  00032E  0E01               	movlw	high _tx_pool
   930  000330  6F70               	movwf	(txb_init@pool+1)& (0+255),b
   931  000332  0E00               	movlw	0
   932  000334  6F72               	movwf	(txb_init@pool_size+1)& (0+255),b
   933  000336  0E64               	movlw	100
   934  000338  6F71               	movwf	txb_init@pool_size& (0+255),b
   935  00033A  0E78               	movlw	low _can_send
   936  00033C  6F73               	movwf	txb_init@can_send_fp& (0+255),b
   937  00033E  0E0D               	movlw	high _can_send
   938  000340  6F74               	movwf	(txb_init@can_send_fp+1)& (0+255),b
   939  000342  0E90               	movlw	low _can_send_rdy
   940  000344  6F75               	movwf	txb_init@can_tx_ready& (0+255),b
   941  000346  0E1D               	movlw	high _can_send_rdy
   942  000348  6F76               	movwf	(txb_init@can_tx_ready+1)& (0+255),b
   943  00034A  EC11  F00E         	call	_txb_init	;wreg free
   944  00034E                     
   945                           ;main.c: 67: uint32_t last_millis = millis();
   946  00034E  ECF2  F00E         	call	_millis	;wreg free
   947  000352  C060  F0B5         	movff	?_millis,main@last_millis
   948  000356  C061  F0B6         	movff	?_millis+1,main@last_millis+1
   949  00035A  C062  F0B7         	movff	?_millis+2,main@last_millis+2
   950  00035E  C063  F0B8         	movff	?_millis+3,main@last_millis+3
   951  000362                     
   952                           ;main.c: 70: valve_init();
   953  000362  EC04  F00F         	call	_valve_init	;wreg free
   954  000366                     
   955                           ;main.c: 72: vent_open();
   956  000366  EC17  F00F         	call	_vent_open	;wreg free
   957  00036A                     
   958                           ;main.c: 74: bool blue_led_on = 0;
   959  00036A  0E00               	movlw	0
   960  00036C  0100               	movlb	0	; () banked
   961  00036E  6FB9               	movwf	main@blue_led_on& (0+255),b
   962  000370                     l6361:
   963                           
   964                           ;main.c: 76: if (millis() - last_millis > 250) {
   965  000370  ECF2  F00E         	call	_millis	;wreg free
   966  000374  0100               	movlb	0	; () banked
   967  000376  51B5               	movf	main@last_millis& (0+255),w,b
   968  000378  5D60               	subwf	?_millis& (0+255),w,b
   969  00037A  6FB1               	movwf	??_main& (0+255),b
   970  00037C  51B6               	movf	(main@last_millis+1)& (0+255),w,b
   971  00037E  5961               	subwfb	(?_millis+1)& (0+255),w,b
   972  000380  6FB2               	movwf	(??_main+1)& (0+255),b
   973  000382  51B7               	movf	(main@last_millis+2)& (0+255),w,b
   974  000384  5962               	subwfb	(?_millis+2)& (0+255),w,b
   975  000386  6FB3               	movwf	(??_main+2)& (0+255),b
   976  000388  51B8               	movf	(main@last_millis+3)& (0+255),w,b
   977  00038A  5963               	subwfb	(?_millis+3)& (0+255),w,b
   978  00038C  6FB4               	movwf	(??_main+3)& (0+255),b
   979  00038E  51B4               	movf	(??_main+3)& (0+255),w,b
   980  000390  11B3               	iorwf	(??_main+2)& (0+255),w,b
   981  000392  11B2               	iorwf	(??_main+1)& (0+255),w,b
   982  000394  E109               	bnz	u4320
   983  000396  0EFB               	movlw	251
   984  000398  5DB1               	subwf	??_main& (0+255),w,b
   985  00039A  A0D8               	btfss	status,0,c
   986  00039C  EFD2  F001         	goto	u4321
   987  0003A0  EFD4  F001         	goto	u4320
   988  0003A4                     u4321:
   989  0003A4  EF6C  F002         	goto	l6401
   990  0003A8                     u4320:
   991  0003A8                     
   992                           ; BSR set to: 0
   993                           ;main.c: 79: bool status_ok = 1;
   994  0003A8  0E01               	movlw	1
   995  0003AA  6FBA               	movwf	main@status_ok& (0+255),b
   996  0003AC                     
   997                           ; BSR set to: 0
   998                           ;main.c: 80: status_ok &= check_battery_voltage_error();
   999  0003AC  EC5C  F003         	call	_check_battery_voltage_error	;wreg free
  1000  0003B0  0100               	movlb	0	; () banked
  1001  0003B2  17BA               	andwf	main@status_ok& (0+255),f,b
  1002  0003B4                     
  1003                           ; BSR set to: 0
  1004                           ;main.c: 81: status_ok &= check_bus_current_error();
  1005  0003B4  EC5D  F00A         	call	_check_bus_current_error	;wreg free
  1006  0003B8  0100               	movlb	0	; () banked
  1007  0003BA  17BA               	andwf	main@status_ok& (0+255),f,b
  1008  0003BC                     
  1009                           ; BSR set to: 0
  1010                           ;main.c: 82: status_ok &= check_valve_pin_error(requested_valve_state);
  1011  0003BC  51DA               	movf	_requested_valve_state& (0+255),w,b
  1012  0003BE  EC23  F00F         	call	_check_valve_pin_error
  1013  0003C2  0100               	movlb	0	; () banked
  1014  0003C4  17BA               	andwf	main@status_ok& (0+255),f,b
  1015  0003C6                     
  1016                           ; BSR set to: 0
  1017                           ;main.c: 85: if (status_ok) { send_status_ok(); }
  1018  0003C6  51BA               	movf	main@status_ok& (0+255),w,b
  1019  0003C8  B4D8               	btfsc	status,2,c
  1020  0003CA  EFE9  F001         	goto	u4331
  1021  0003CE  EFEB  F001         	goto	u4330
  1022  0003D2                     u4331:
  1023  0003D2  EFED  F001         	goto	l355
  1024  0003D6                     u4330:
  1025  0003D6                     
  1026                           ; BSR set to: 0
  1027  0003D6  EC1F  F00D         	call	_send_status_ok	;wreg free
  1028  0003DA                     l355:
  1029                           
  1030                           ;main.c: 88: vent_send_status(requested_valve_state);
  1031  0003DA  0100               	movlb	0	; () banked
  1032  0003DC  51DA               	movf	_requested_valve_state& (0+255),w,b
  1033  0003DE  EC32  F009         	call	_vent_send_status
  1034  0003E2                     
  1035                           ;main.c: 95: if ((millis() - last_can_traffic_timestamp_ms > 1000);main.c: 96: || is_bat
      +                          t_voltage_critical();main.c: 97: || (requested_valve_state == VALVE_OPEN)) {
  1036  0003E2  ECF2  F00E         	call	_millis	;wreg free
  1037  0003E6  0100               	movlb	0	; () banked
  1038  0003E8  51D1               	movf	_last_can_traffic_timestamp_ms& (0+255),w,b
  1039  0003EA  5D60               	subwf	?_millis& (0+255),w,b
  1040  0003EC  6FB1               	movwf	??_main& (0+255),b
  1041  0003EE  51D2               	movf	(_last_can_traffic_timestamp_ms+1)& (0+255),w,b
  1042  0003F0  5961               	subwfb	(?_millis+1)& (0+255),w,b
  1043  0003F2  6FB2               	movwf	(??_main+1)& (0+255),b
  1044  0003F4  51D3               	movf	(_last_can_traffic_timestamp_ms+2)& (0+255),w,b
  1045  0003F6  5962               	subwfb	(?_millis+2)& (0+255),w,b
  1046  0003F8  6FB3               	movwf	(??_main+2)& (0+255),b
  1047  0003FA  51D4               	movf	(_last_can_traffic_timestamp_ms+3)& (0+255),w,b
  1048  0003FC  5963               	subwfb	(?_millis+3)& (0+255),w,b
  1049  0003FE  6FB4               	movwf	(??_main+3)& (0+255),b
  1050  000400  51B4               	movf	(??_main+3)& (0+255),w,b
  1051  000402  11B3               	iorwf	(??_main+2)& (0+255),w,b
  1052  000404  E109               	bnz	u4341
  1053  000406  0EE9               	movlw	233
  1054  000408  5DB1               	subwf	??_main& (0+255),w,b
  1055  00040A  0E03               	movlw	3
  1056  00040C  59B2               	subwfb	(??_main+1)& (0+255),w,b
  1057  00040E  B0D8               	btfsc	status,0,c
  1058  000410  EF0C  F002         	goto	u4341
  1059  000414  EF0E  F002         	goto	u4340
  1060  000418                     u4341:
  1061  000418  EF21  F002         	goto	l6381
  1062  00041C                     u4340:
  1063  00041C                     
  1064                           ; BSR set to: 0
  1065  00041C  EC1D  F00F         	call	_is_batt_voltage_critical	;wreg free
  1066  000420  0900               	iorlw	0
  1067  000422  A4D8               	btfss	status,2,c
  1068  000424  EF16  F002         	goto	u4351
  1069  000428  EF18  F002         	goto	u4350
  1070  00042C                     u4351:
  1071  00042C  EF21  F002         	goto	l6381
  1072  000430                     u4350:
  1073  000430  0100               	movlb	0	; () banked
  1074  000432  51DA               	movf	_requested_valve_state& (0+255),w,b
  1075  000434  A4D8               	btfss	status,2,c
  1076  000436  EF1F  F002         	goto	u4361
  1077  00043A  EF21  F002         	goto	u4360
  1078  00043E                     u4361:
  1079  00043E  EF25  F002         	goto	l6383
  1080  000442                     u4360:
  1081  000442                     l6381:
  1082                           
  1083                           ;main.c: 98: vent_open();
  1084  000442  EC17  F00F         	call	_vent_open	;wreg free
  1085                           
  1086                           ;main.c: 99: } else if (requested_valve_state == VALVE_CLOSED) {
  1087  000446  EF51  F002         	goto	l6391
  1088  00044A                     l6383:
  1089                           
  1090                           ; BSR set to: 0
  1091  00044A  05DA               	decf	_requested_valve_state& (0+255),w,b
  1092  00044C  A4D8               	btfss	status,2,c
  1093  00044E  EF2B  F002         	goto	u4371
  1094  000452  EF2D  F002         	goto	u4370
  1095  000456                     u4371:
  1096  000456  EF31  F002         	goto	l6387
  1097  00045A                     u4370:
  1098  00045A                     
  1099                           ; BSR set to: 0
  1100                           ;main.c: 100: vent_close();
  1101  00045A  EC1A  F00F         	call	_vent_close	;wreg free
  1102                           
  1103                           ;main.c: 101: } else {
  1104  00045E  EF51  F002         	goto	l6391
  1105  000462                     l6387:
  1106                           
  1107                           ; BSR set to: 0
  1108                           ;main.c: 103: can_msg_t error_msg;;main.c: 104: build_board_stat_msg(millis(), E_CODING_
      +                          SCREWUP, (0), 0, &error_msg);
  1109  000462  ECF2  F00E         	call	_millis	;wreg free
  1110  000466  C060  F066         	movff	?_millis,build_board_stat_msg@timestamp
  1111  00046A  C061  F067         	movff	?_millis+1,build_board_stat_msg@timestamp+1
  1112  00046E  C062  F068         	movff	?_millis+2,build_board_stat_msg@timestamp+2
  1113  000472  C063  F069         	movff	?_millis+3,build_board_stat_msg@timestamp+3
  1114  000476  0E13               	movlw	19
  1115  000478  0100               	movlb	0	; () banked
  1116  00047A  6F6A               	movwf	build_board_stat_msg@error_code& (0+255),b
  1117  00047C  0E00               	movlw	0
  1118  00047E  6F6B               	movwf	build_board_stat_msg@error_data& (0+255),b
  1119  000480  0E00               	movlw	0
  1120  000482  6F6C               	movwf	(build_board_stat_msg@error_data+1)& (0+255),b
  1121  000484  0E00               	movlw	0
  1122  000486  6F6D               	movwf	build_board_stat_msg@error_data_len& (0+255),b
  1123  000488  0EBB               	movlw	low main@error_msg
  1124  00048A  6F6E               	movwf	build_board_stat_msg@output& (0+255),b
  1125  00048C  0E00               	movlw	high main@error_msg
  1126  00048E  6F6F               	movwf	(build_board_stat_msg@output+1)& (0+255),b
  1127  000490  ECCA  F007         	call	_build_board_stat_msg	;wreg free
  1128  000494                     
  1129                           ;main.c: 105: txb_enqueue(&error_msg);
  1130  000494  0EBB               	movlw	low main@error_msg
  1131  000496  0100               	movlb	0	; () banked
  1132  000498  6F76               	movwf	txb_enqueue@msg& (0+255),b
  1133  00049A  0E00               	movlw	high main@error_msg
  1134  00049C  6F77               	movwf	(txb_enqueue@msg+1)& (0+255),b
  1135  00049E  ECD7  F00D         	call	_txb_enqueue	;wreg free
  1136  0004A2                     l6391:
  1137                           
  1138                           ;main.c: 106: };main.c: 109: if (blue_led_on) {
  1139  0004A2  0100               	movlb	0	; () banked
  1140  0004A4  51B9               	movf	main@blue_led_on& (0+255),w,b
  1141  0004A6  B4D8               	btfsc	status,2,c
  1142  0004A8  EF58  F002         	goto	u4381
  1143  0004AC  EF5A  F002         	goto	u4380
  1144  0004B0                     u4381:
  1145  0004B0  EF5F  F002         	goto	l362
  1146  0004B4                     u4380:
  1147  0004B4                     
  1148                           ; BSR set to: 0
  1149                           ;main.c: 110: (LATC2 = 1);
  1150  0004B4  84BC               	bsf	16316,2,c	;volatile
  1151  0004B6                     
  1152                           ; BSR set to: 0
  1153                           ;main.c: 111: blue_led_on = 0;
  1154  0004B6  0E00               	movlw	0
  1155  0004B8  6FB9               	movwf	main@blue_led_on& (0+255),b
  1156                           
  1157                           ;main.c: 112: } else {
  1158  0004BA  EF62  F002         	goto	l6399
  1159  0004BE                     l362:
  1160                           
  1161                           ; BSR set to: 0
  1162                           ;main.c: 113: (LATC2 = 0);
  1163  0004BE  94BC               	bcf	16316,2,c	;volatile
  1164  0004C0                     
  1165                           ; BSR set to: 0
  1166                           ;main.c: 114: blue_led_on = 1;
  1167  0004C0  0E01               	movlw	1
  1168  0004C2  6FB9               	movwf	main@blue_led_on& (0+255),b
  1169  0004C4                     l6399:
  1170                           
  1171                           ; BSR set to: 0
  1172                           ;main.c: 115: };main.c: 118: last_millis = millis();
  1173  0004C4  ECF2  F00E         	call	_millis	;wreg free
  1174  0004C8  C060  F0B5         	movff	?_millis,main@last_millis
  1175  0004CC  C061  F0B6         	movff	?_millis+1,main@last_millis+1
  1176  0004D0  C062  F0B7         	movff	?_millis+2,main@last_millis+2
  1177  0004D4  C063  F0B8         	movff	?_millis+3,main@last_millis+3
  1178  0004D8                     l6401:
  1179                           
  1180                           ;main.c: 119: };main.c: 121: txb_heartbeat();
  1181  0004D8  EC55  F00B         	call	_txb_heartbeat	;wreg free
  1182  0004DC  EFB8  F001         	goto	l6361
  1183  0004E0  EF0D  F000         	goto	start
  1184  0004E4                     __end_of_main:
  1185                           	callstack 0
  1186                           
  1187 ;; *************** function _vent_send_status *****************
  1188 ;; Defined at:
  1189 ;;		line 46 in file "valve.c"
  1190 ;; Parameters:    Size  Location     Type
  1191 ;;  req_state       1    wreg     enum E22472
  1192 ;; Auto vars:     Size  Location     Type
  1193 ;;  req_state       1   24[BANK0 ] enum E22472
  1194 ;;  stat_msg       11   28[BANK0 ] struct .
  1195 ;;  valve_closed    1   27[BANK0 ] unsigned char 
  1196 ;;  valve_open      1   26[BANK0 ] unsigned char 
  1197 ;;  curr_state      1   25[BANK0 ] enum E22472
  1198 ;; Return value:  Size  Location     Type
  1199 ;;                  1    wreg      void 
  1200 ;; Registers used:
  1201 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1202 ;; Tracked objects:
  1203 ;;		On entry : 0/0
  1204 ;;		On exit  : 0/0
  1205 ;;		Unchanged: 0/0
  1206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1208 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1210 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1211 ;;Total ram usage:       15 bytes
  1212 ;; Hardware stack levels used: 1
  1213 ;; Hardware stack levels required when called: 9
  1214 ;; This function calls:
  1215 ;;		_build_valve_stat_msg
  1216 ;;		_get_valve_closed_state
  1217 ;;		_get_valve_open_state
  1218 ;;		_millis
  1219 ;;		_txb_enqueue
  1220 ;; This function is called by:
  1221 ;;		_main
  1222 ;; This function uses a non-reentrant model
  1223 ;;
  1224                           
  1225                           	psect	text1
  1226  001264                     __ptext1:
  1227                           	callstack 0
  1228  001264                     _vent_send_status:
  1229                           	callstack 21
  1230                           
  1231                           ;incstack = 0
  1232                           ;vent_send_status@req_state stored from wreg
  1233  001264  0100               	movlb	0	; () banked
  1234  001266  6F78               	movwf	vent_send_status@req_state& (0+255),b
  1235  001268                     
  1236                           ;valve.c: 48: enum VALVE_STATE curr_state;;valve.c: 50: bool valve_open = get_valve_open
      +                          _state();
  1237  001268  ECDE  F00E         	call	_get_valve_open_state	;wreg free
  1238  00126C  0100               	movlb	0	; () banked
  1239  00126E  6F7A               	movwf	vent_send_status@valve_open& (0+255),b
  1240                           
  1241                           ;valve.c: 51: bool valve_closed = get_valve_closed_state();
  1242  001270  ECE8  F00E         	call	_get_valve_closed_state	;wreg free
  1243  001274  0100               	movlb	0	; () banked
  1244  001276  6F7B               	movwf	vent_send_status@valve_closed& (0+255),b
  1245  001278                     
  1246                           ; BSR set to: 0
  1247                           ;valve.c: 54: if (valve_open && !valve_closed){
  1248  001278  517A               	movf	vent_send_status@valve_open& (0+255),w,b
  1249  00127A  B4D8               	btfsc	status,2,c
  1250  00127C  EF42  F009         	goto	u4221
  1251  001280  EF44  F009         	goto	u4220
  1252  001284                     u4221:
  1253  001284  EF50  F009         	goto	l6297
  1254  001288                     u4220:
  1255  001288                     
  1256                           ; BSR set to: 0
  1257  001288  517B               	movf	vent_send_status@valve_closed& (0+255),w,b
  1258  00128A  A4D8               	btfss	status,2,c
  1259  00128C  EF4A  F009         	goto	u4231
  1260  001290  EF4C  F009         	goto	u4230
  1261  001294                     u4231:
  1262  001294  EF50  F009         	goto	l6297
  1263  001298                     u4230:
  1264  001298                     
  1265                           ; BSR set to: 0
  1266                           ;valve.c: 55: curr_state = VALVE_OPEN;
  1267  001298  0E00               	movlw	0
  1268  00129A  6F79               	movwf	vent_send_status@curr_state& (0+255),b
  1269                           
  1270                           ;valve.c: 56: }
  1271  00129C  EF7A  F009         	goto	l6311
  1272  0012A0                     l6297:
  1273                           
  1274                           ; BSR set to: 0
  1275                           ;valve.c: 59: else if (!valve_open && valve_closed){
  1276  0012A0  517A               	movf	vent_send_status@valve_open& (0+255),w,b
  1277  0012A2  A4D8               	btfss	status,2,c
  1278  0012A4  EF56  F009         	goto	u4241
  1279  0012A8  EF58  F009         	goto	u4240
  1280  0012AC                     u4241:
  1281  0012AC  EF64  F009         	goto	l6303
  1282  0012B0                     u4240:
  1283  0012B0                     
  1284                           ; BSR set to: 0
  1285  0012B0  517B               	movf	vent_send_status@valve_closed& (0+255),w,b
  1286  0012B2  B4D8               	btfsc	status,2,c
  1287  0012B4  EF5E  F009         	goto	u4251
  1288  0012B8  EF60  F009         	goto	u4250
  1289  0012BC                     u4251:
  1290  0012BC  EF64  F009         	goto	l6303
  1291  0012C0                     u4250:
  1292  0012C0                     
  1293                           ; BSR set to: 0
  1294                           ;valve.c: 60: curr_state = VALVE_CLOSED;
  1295  0012C0  0E01               	movlw	1
  1296  0012C2  6F79               	movwf	vent_send_status@curr_state& (0+255),b
  1297                           
  1298                           ;valve.c: 61: }
  1299  0012C4  EF7A  F009         	goto	l6311
  1300  0012C8                     l6303:
  1301                           
  1302                           ; BSR set to: 0
  1303                           ;valve.c: 64: else if (!valve_open && !valve_closed){
  1304  0012C8  517A               	movf	vent_send_status@valve_open& (0+255),w,b
  1305  0012CA  A4D8               	btfss	status,2,c
  1306  0012CC  EF6A  F009         	goto	u4261
  1307  0012D0  EF6C  F009         	goto	u4260
  1308  0012D4                     u4261:
  1309  0012D4  EF78  F009         	goto	l6309
  1310  0012D8                     u4260:
  1311  0012D8                     
  1312                           ; BSR set to: 0
  1313  0012D8  517B               	movf	vent_send_status@valve_closed& (0+255),w,b
  1314  0012DA  A4D8               	btfss	status,2,c
  1315  0012DC  EF72  F009         	goto	u4271
  1316  0012E0  EF74  F009         	goto	u4270
  1317  0012E4                     u4271:
  1318  0012E4  EF78  F009         	goto	l6309
  1319  0012E8                     u4270:
  1320  0012E8                     
  1321                           ; BSR set to: 0
  1322                           ;valve.c: 65: curr_state = VALVE_UNK;
  1323  0012E8  0E02               	movlw	2
  1324  0012EA  6F79               	movwf	vent_send_status@curr_state& (0+255),b
  1325                           
  1326                           ;valve.c: 66: }
  1327  0012EC  EF7A  F009         	goto	l6311
  1328  0012F0                     l6309:
  1329                           
  1330                           ; BSR set to: 0
  1331                           ;valve.c: 69: else {;valve.c: 70: curr_state = VALVE_ILLEGAL;
  1332  0012F0  0E03               	movlw	3
  1333  0012F2  6F79               	movwf	vent_send_status@curr_state& (0+255),b
  1334  0012F4                     l6311:
  1335                           
  1336                           ; BSR set to: 0
  1337                           ;valve.c: 71: };valve.c: 73: can_msg_t stat_msg;;valve.c: 74: build_valve_stat_msg(milli
      +                          s(), curr_state, req_state,;valve.c: 75: 0x460, &stat_msg);
  1338  0012F4  ECF2  F00E         	call	_millis	;wreg free
  1339  0012F8  C060  F066         	movff	?_millis,build_valve_stat_msg@timestamp
  1340  0012FC  C061  F067         	movff	?_millis+1,build_valve_stat_msg@timestamp+1
  1341  001300  C062  F068         	movff	?_millis+2,build_valve_stat_msg@timestamp+2
  1342  001304  C063  F069         	movff	?_millis+3,build_valve_stat_msg@timestamp+3
  1343  001308  C079  F06A         	movff	vent_send_status@curr_state,build_valve_stat_msg@valve_state
  1344  00130C  C078  F06B         	movff	vent_send_status@req_state,build_valve_stat_msg@req_valve_state
  1345  001310  0E04               	movlw	4
  1346  001312  0100               	movlb	0	; () banked
  1347  001314  6F6D               	movwf	(build_valve_stat_msg@message_type+1)& (0+255),b
  1348  001316  0E60               	movlw	96
  1349  001318  6F6C               	movwf	build_valve_stat_msg@message_type& (0+255),b
  1350  00131A  0E7C               	movlw	low vent_send_status@stat_msg
  1351  00131C  6F6E               	movwf	build_valve_stat_msg@output& (0+255),b
  1352  00131E  0E00               	movlw	high vent_send_status@stat_msg
  1353  001320  6F6F               	movwf	(build_valve_stat_msg@output+1)& (0+255),b
  1354  001322  EC9B  F009         	call	_build_valve_stat_msg	;wreg free
  1355  001326                     
  1356                           ;valve.c: 76: txb_enqueue(&stat_msg);
  1357  001326  0E7C               	movlw	low vent_send_status@stat_msg
  1358  001328  0100               	movlb	0	; () banked
  1359  00132A  6F76               	movwf	txb_enqueue@msg& (0+255),b
  1360  00132C  0E00               	movlw	high vent_send_status@stat_msg
  1361  00132E  6F77               	movwf	(txb_enqueue@msg+1)& (0+255),b
  1362  001330  ECD7  F00D         	call	_txb_enqueue	;wreg free
  1363  001334  0012               	return		;funcret
  1364  001336                     __end_of_vent_send_status:
  1365                           	callstack 0
  1366                           
  1367 ;; *************** function _get_valve_open_state *****************
  1368 ;; Defined at:
  1369 ;;		line 38 in file "valve.c"
  1370 ;; Parameters:    Size  Location     Type
  1371 ;;		None
  1372 ;; Auto vars:     Size  Location     Type
  1373 ;;		None
  1374 ;; Return value:  Size  Location     Type
  1375 ;;                  1    wreg      unsigned char 
  1376 ;; Registers used:
  1377 ;;		wreg
  1378 ;; Tracked objects:
  1379 ;;		On entry : 0/0
  1380 ;;		On exit  : 0/0
  1381 ;;		Unchanged: 0/0
  1382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1387 ;;Total ram usage:        0 bytes
  1388 ;; Hardware stack levels used: 1
  1389 ;; Hardware stack levels required when called: 5
  1390 ;; This function calls:
  1391 ;;		Nothing
  1392 ;; This function is called by:
  1393 ;;		_vent_send_status
  1394 ;; This function uses a non-reentrant model
  1395 ;;
  1396                           
  1397                           	psect	text2
  1398  001DBC                     __ptext2:
  1399                           	callstack 0
  1400  001DBC                     _get_valve_open_state:
  1401                           	callstack 24
  1402  001DBC                     
  1403                           ;valve.c: 39: return PORTBbits.RB4;
  1404  001DBC  B8CB               	btfsc	203,4,c	;volatile
  1405  001DBE  EFE3  F00E         	goto	u2371
  1406  001DC2  EFE6  F00E         	goto	u2370
  1407  001DC6                     u2371:
  1408  001DC6  0E01               	movlw	1
  1409  001DC8  EFE7  F00E         	goto	u2376
  1410  001DCC                     u2370:
  1411  001DCC  0E00               	movlw	0
  1412  001DCE                     u2376:
  1413  001DCE  0012               	return		;funcret
  1414  001DD0                     __end_of_get_valve_open_state:
  1415                           	callstack 0
  1416                           
  1417 ;; *************** function _get_valve_closed_state *****************
  1418 ;; Defined at:
  1419 ;;		line 42 in file "valve.c"
  1420 ;; Parameters:    Size  Location     Type
  1421 ;;		None
  1422 ;; Auto vars:     Size  Location     Type
  1423 ;;		None
  1424 ;; Return value:  Size  Location     Type
  1425 ;;                  1    wreg      unsigned char 
  1426 ;; Registers used:
  1427 ;;		wreg
  1428 ;; Tracked objects:
  1429 ;;		On entry : 0/0
  1430 ;;		On exit  : 0/0
  1431 ;;		Unchanged: 0/0
  1432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1437 ;;Total ram usage:        0 bytes
  1438 ;; Hardware stack levels used: 1
  1439 ;; Hardware stack levels required when called: 5
  1440 ;; This function calls:
  1441 ;;		Nothing
  1442 ;; This function is called by:
  1443 ;;		_vent_send_status
  1444 ;; This function uses a non-reentrant model
  1445 ;;
  1446                           
  1447                           	psect	text3
  1448  001DD0                     __ptext3:
  1449                           	callstack 0
  1450  001DD0                     _get_valve_closed_state:
  1451                           	callstack 24
  1452  001DD0                     
  1453                           ;valve.c: 43: return PORTBbits.RB3;
  1454  001DD0  B6CB               	btfsc	203,3,c	;volatile
  1455  001DD2  EFED  F00E         	goto	u2381
  1456  001DD6  EFF0  F00E         	goto	u2380
  1457  001DDA                     u2381:
  1458  001DDA  0E01               	movlw	1
  1459  001DDC  EFF1  F00E         	goto	u2386
  1460  001DE0                     u2380:
  1461  001DE0  0E00               	movlw	0
  1462  001DE2                     u2386:
  1463  001DE2  0012               	return		;funcret
  1464  001DE4                     __end_of_get_valve_closed_state:
  1465                           	callstack 0
  1466                           
  1467 ;; *************** function _build_valve_stat_msg *****************
  1468 ;; Defined at:
  1469 ;;		line 108 in file "canlib/can_common.c"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;  timestamp       4    6[BANK0 ] unsigned long 
  1472 ;;  valve_state     1   10[BANK0 ] enum E46
  1473 ;;  req_valve_st    1   11[BANK0 ] enum E46
  1474 ;;  message_type    2   12[BANK0 ] unsigned int 
  1475 ;;  output          2   14[BANK0 ] PTR struct .
  1476 ;;		 -> vent_send_status@stat_msg(11), 
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;		None
  1479 ;; Return value:  Size  Location     Type
  1480 ;;                  1    wreg      unsigned char 
  1481 ;; Registers used:
  1482 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1483 ;; Tracked objects:
  1484 ;;		On entry : 0/0
  1485 ;;		On exit  : 0/0
  1486 ;;		Unchanged: 0/0
  1487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1488 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1490 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1491 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1492 ;;Total ram usage:       12 bytes
  1493 ;; Hardware stack levels used: 1
  1494 ;; Hardware stack levels required when called: 6
  1495 ;; This function calls:
  1496 ;;		_write_timestamp_3bytes
  1497 ;; This function is called by:
  1498 ;;		_vent_send_status
  1499 ;; This function uses a non-reentrant model
  1500 ;;
  1501                           
  1502                           	psect	text4
  1503  001336                     __ptext4:
  1504                           	callstack 0
  1505  001336                     _build_valve_stat_msg:
  1506                           	callstack 23
  1507  001336                     
  1508                           ;can_common.c: 114: if (!output) { return 0; }
  1509  001336  0100               	movlb	0	; () banked
  1510  001338  516E               	movf	build_valve_stat_msg@output& (0+255),w,b
  1511  00133A  116F               	iorwf	(build_valve_stat_msg@output+1)& (0+255),w,b
  1512  00133C  A4D8               	btfss	status,2,c
  1513  00133E  EFA3  F009         	goto	u3991
  1514  001342  EFA5  F009         	goto	u3990
  1515  001346                     u3991:
  1516  001346  EFA7  F009         	goto	l5877
  1517  00134A                     u3990:
  1518  00134A  EFFC  F009         	goto	l453
  1519  00134E                     l5877:
  1520                           
  1521                           ; BSR set to: 0
  1522                           ;can_common.c: 115: if (!(message_type == 0x460;can_common.c: 116: || message_type == 0x
      +                          4C0)) {
  1523  00134E  0E60               	movlw	96
  1524  001350  196C               	xorwf	build_valve_stat_msg@message_type& (0+255),w,b
  1525  001352  E109               	bnz	u4000
  1526  001354  0E04               	movlw	4
  1527  001356  196D               	xorwf	(build_valve_stat_msg@message_type+1)& (0+255),w,b
  1528  001358  B4D8               	btfsc	status,2,c
  1529  00135A  EFB1  F009         	goto	u4001
  1530  00135E  EFB3  F009         	goto	u4000
  1531  001362                     u4001:
  1532  001362  EFC1  F009         	goto	l5883
  1533  001366                     u4000:
  1534  001366                     
  1535                           ; BSR set to: 0
  1536  001366  0EC0               	movlw	192
  1537  001368  196C               	xorwf	build_valve_stat_msg@message_type& (0+255),w,b
  1538  00136A  E109               	bnz	u4010
  1539  00136C  0E04               	movlw	4
  1540  00136E  196D               	xorwf	(build_valve_stat_msg@message_type+1)& (0+255),w,b
  1541  001370  B4D8               	btfsc	status,2,c
  1542  001372  EFBD  F009         	goto	u4011
  1543  001376  EFBF  F009         	goto	u4010
  1544  00137A                     u4011:
  1545  00137A  EFC1  F009         	goto	l5883
  1546  00137E                     u4010:
  1547  00137E  EFFC  F009         	goto	l453
  1548  001382                     l5883:
  1549                           
  1550                           ; BSR set to: 0
  1551                           ;can_common.c: 118: };can_common.c: 120: output->sid = message_type | 0x0B;
  1552  001382  0E0B               	movlw	11
  1553  001384  116C               	iorwf	build_valve_stat_msg@message_type& (0+255),w,b
  1554  001386  6F70               	movwf	??_build_valve_stat_msg& (0+255),b
  1555  001388  0E00               	movlw	0
  1556  00138A  116D               	iorwf	(build_valve_stat_msg@message_type+1)& (0+255),w,b
  1557  00138C  6F71               	movwf	(??_build_valve_stat_msg+1)& (0+255),b
  1558  00138E  0060  F1BB  FFD9   	movff	build_valve_stat_msg@output,fsr2l
  1559  001394  0060  F1BF  FFDA   	movff	build_valve_stat_msg@output+1,fsr2h
  1560  00139A  0060  F1C3  FFDE   	movff	??_build_valve_stat_msg,postinc2
  1561  0013A0  0060  F1C7  FFDD   	movff	??_build_valve_stat_msg+1,postdec2
  1562  0013A6                     
  1563                           ; BSR set to: 0
  1564                           ;can_common.c: 121: write_timestamp_3bytes(timestamp, output);
  1565  0013A6  C066  F060         	movff	build_valve_stat_msg@timestamp,write_timestamp_3bytes@timestamp
  1566  0013AA  C067  F061         	movff	build_valve_stat_msg@timestamp+1,write_timestamp_3bytes@timestamp+1
  1567  0013AE  C068  F062         	movff	build_valve_stat_msg@timestamp+2,write_timestamp_3bytes@timestamp+2
  1568  0013B2  C069  F063         	movff	build_valve_stat_msg@timestamp+3,write_timestamp_3bytes@timestamp+3
  1569  0013B6  C06E  F064         	movff	build_valve_stat_msg@output,write_timestamp_3bytes@output
  1570  0013BA  C06F  F065         	movff	build_valve_stat_msg@output+1,write_timestamp_3bytes@output+1
  1571  0013BE  ECF4  F00D         	call	_write_timestamp_3bytes	;wreg free
  1572  0013C2                     
  1573                           ;can_common.c: 123: output->data[3] = (uint8_t) valve_state;
  1574  0013C2  0100               	movlb	0	; () banked
  1575  0013C4  EE20 F006          	lfsr	2,6
  1576  0013C8  516E               	movf	build_valve_stat_msg@output& (0+255),w,b
  1577  0013CA  26D9               	addwf	fsr2l,f,c
  1578  0013CC  516F               	movf	(build_valve_stat_msg@output+1)& (0+255),w,b
  1579  0013CE  22DA               	addwfc	fsr2h,f,c
  1580  0013D0  0060  F1AB  FFDF   	movff	build_valve_stat_msg@valve_state,indf2
  1581  0013D6                     
  1582                           ; BSR set to: 0
  1583                           ;can_common.c: 124: output->data[4] = (uint8_t) req_valve_state;
  1584  0013D6  EE20 F007          	lfsr	2,7
  1585  0013DA  516E               	movf	build_valve_stat_msg@output& (0+255),w,b
  1586  0013DC  26D9               	addwf	fsr2l,f,c
  1587  0013DE  516F               	movf	(build_valve_stat_msg@output+1)& (0+255),w,b
  1588  0013E0  22DA               	addwfc	fsr2h,f,c
  1589  0013E2  0060  F1AF  FFDF   	movff	build_valve_stat_msg@req_valve_state,indf2
  1590  0013E8                     
  1591                           ; BSR set to: 0
  1592                           ;can_common.c: 125: output->data_len = 5;
  1593  0013E8  EE20 F002          	lfsr	2,2
  1594  0013EC  516E               	movf	build_valve_stat_msg@output& (0+255),w,b
  1595  0013EE  26D9               	addwf	fsr2l,f,c
  1596  0013F0  516F               	movf	(build_valve_stat_msg@output+1)& (0+255),w,b
  1597  0013F2  22DA               	addwfc	fsr2h,f,c
  1598  0013F4  0E05               	movlw	5
  1599  0013F6  6EDF               	movwf	indf2,c
  1600  0013F8                     l453:
  1601                           
  1602                           ; BSR set to: 0
  1603  0013F8  0012               	return		;funcret
  1604  0013FA                     __end_of_build_valve_stat_msg:
  1605                           	callstack 0
  1606                           
  1607 ;; *************** function _vent_open *****************
  1608 ;; Defined at:
  1609 ;;		line 28 in file "valve.c"
  1610 ;; Parameters:    Size  Location     Type
  1611 ;;		None
  1612 ;; Auto vars:     Size  Location     Type
  1613 ;;		None
  1614 ;; Return value:  Size  Location     Type
  1615 ;;                  1    wreg      void 
  1616 ;; Registers used:
  1617 ;;		None
  1618 ;; Tracked objects:
  1619 ;;		On entry : 0/0
  1620 ;;		On exit  : 0/0
  1621 ;;		Unchanged: 0/0
  1622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1627 ;;Total ram usage:        0 bytes
  1628 ;; Hardware stack levels used: 1
  1629 ;; Hardware stack levels required when called: 5
  1630 ;; This function calls:
  1631 ;;		Nothing
  1632 ;; This function is called by:
  1633 ;;		_main
  1634 ;; This function uses a non-reentrant model
  1635 ;;
  1636                           
  1637                           	psect	text5
  1638  001E2E                     __ptext5:
  1639                           	callstack 0
  1640  001E2E                     _vent_open:
  1641                           	callstack 25
  1642  001E2E                     
  1643                           ;valve.c: 29: (LATC3 = 0);
  1644  001E2E  96BC               	bcf	16316,3,c	;volatile
  1645                           
  1646                           ;valve.c: 30: LATB5 = 0;
  1647  001E30  9ABB               	bcf	16315,5,c	;volatile
  1648  001E32  0012               	return		;funcret
  1649  001E34                     __end_of_vent_open:
  1650                           	callstack 0
  1651                           
  1652 ;; *************** function _vent_close *****************
  1653 ;; Defined at:
  1654 ;;		line 33 in file "valve.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;		None
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;		None
  1659 ;; Return value:  Size  Location     Type
  1660 ;;                  1    wreg      void 
  1661 ;; Registers used:
  1662 ;;		None
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1672 ;;Total ram usage:        0 bytes
  1673 ;; Hardware stack levels used: 1
  1674 ;; Hardware stack levels required when called: 5
  1675 ;; This function calls:
  1676 ;;		Nothing
  1677 ;; This function is called by:
  1678 ;;		_main
  1679 ;; This function uses a non-reentrant model
  1680 ;;
  1681                           
  1682                           	psect	text6
  1683  001E34                     __ptext6:
  1684                           	callstack 0
  1685  001E34                     _vent_close:
  1686                           	callstack 25
  1687  001E34                     
  1688                           ;valve.c: 34: (LATC3 = 1);
  1689  001E34  86BC               	bsf	16316,3,c	;volatile
  1690                           
  1691                           ;valve.c: 35: LATB5 = 1;
  1692  001E36  8ABB               	bsf	16315,5,c	;volatile
  1693  001E38  0012               	return		;funcret
  1694  001E3A                     __end_of_vent_close:
  1695                           	callstack 0
  1696                           
  1697 ;; *************** function _valve_init *****************
  1698 ;; Defined at:
  1699 ;;		line 17 in file "valve.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;		None
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;		None
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  1    wreg      void 
  1706 ;; Registers used:
  1707 ;;		None
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1717 ;;Total ram usage:        0 bytes
  1718 ;; Hardware stack levels used: 1
  1719 ;; Hardware stack levels required when called: 5
  1720 ;; This function calls:
  1721 ;;		Nothing
  1722 ;; This function is called by:
  1723 ;;		_main
  1724 ;; This function uses a non-reentrant model
  1725 ;;
  1726                           
  1727                           	psect	text7
  1728  001E08                     __ptext7:
  1729                           	callstack 0
  1730  001E08                     _valve_init:
  1731                           	callstack 25
  1732  001E08                     
  1733                           ;valve.c: 18: TRISB5 = 0;
  1734  001E08  9AC3               	bcf	16323,5,c	;volatile
  1735                           
  1736                           ;valve.c: 19: LATB5 = 0;
  1737  001E0A  9ABB               	bcf	16315,5,c	;volatile
  1738                           
  1739                           ;valve.c: 21: TRISB4 = 1;
  1740  001E0C  88C3               	bsf	16323,4,c	;volatile
  1741                           
  1742                           ;valve.c: 22: ANSELB4 = 0;
  1743  001E0E  013A               	movlb	58	; () banked
  1744  001E10  9950               	bcf	80,4,b	;volatile
  1745                           
  1746                           ;valve.c: 24: TRISB3 = 1;
  1747  001E12  86C3               	bsf	16323,3,c	;volatile
  1748                           
  1749                           ;valve.c: 25: ANSELB3 = 0;
  1750  001E14  9750               	bcf	80,3,b	;volatile
  1751  001E16                     
  1752                           ; BSR set to: 58
  1753  001E16  0012               	return		;funcret
  1754  001E18                     __end_of_valve_init:
  1755                           	callstack 0
  1756                           
  1757 ;; *************** function _txb_init *****************
  1758 ;; Defined at:
  1759 ;;		line 15 in file "canlib/util/can_tx_buffer.c"
  1760 ;; Parameters:    Size  Location     Type
  1761 ;;  pool            2   15[BANK0 ] PTR void 
  1762 ;;		 -> tx_pool(100), 
  1763 ;;  pool_size       2   17[BANK0 ] unsigned int 
  1764 ;;  can_send_fp     2   19[BANK0 ] PTR FTN(PTR const struct
  1765 ;;		 -> can_send(1), 
  1766 ;;  can_tx_ready    2   21[BANK0 ] PTR FTN()unsigned char 
  1767 ;;		 -> can_send_rdy(1), 
  1768 ;; Auto vars:     Size  Location     Type
  1769 ;;		None
  1770 ;; Return value:  Size  Location     Type
  1771 ;;                  1    wreg      void 
  1772 ;; Registers used:
  1773 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1774 ;; Tracked objects:
  1775 ;;		On entry : 0/0
  1776 ;;		On exit  : 0/0
  1777 ;;		Unchanged: 0/0
  1778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1779 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1782 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1783 ;;Total ram usage:        8 bytes
  1784 ;; Hardware stack levels used: 1
  1785 ;; Hardware stack levels required when called: 7
  1786 ;; This function calls:
  1787 ;;		_srb_init
  1788 ;; This function is called by:
  1789 ;;		_main
  1790 ;; This function uses a non-reentrant model
  1791 ;;
  1792                           
  1793                           	psect	text8
  1794  001C22                     __ptext8:
  1795                           	callstack 0
  1796  001C22                     _txb_init:
  1797                           	callstack 23
  1798  001C22                     
  1799                           ;can_tx_buffer.c: 18: ctx.can_send_fp = can_send_fp;
  1800  001C22  C073  F0CD         	movff	txb_init@can_send_fp,_ctx
  1801  001C26  C074  F0CE         	movff	txb_init@can_send_fp+1,_ctx+1
  1802                           
  1803                           ;can_tx_buffer.c: 19: ctx.can_tx_ready = can_tx_ready;
  1804  001C2A  C075  F0CF         	movff	txb_init@can_tx_ready,_ctx+2
  1805  001C2E  C076  F0D0         	movff	txb_init@can_tx_ready+1,_ctx+3
  1806  001C32                     
  1807                           ;can_tx_buffer.c: 20: srb_init(&buf, pool, pool_size, sizeof(can_msg_t));
  1808  001C32  0EDB               	movlw	low _buf
  1809  001C34  0100               	movlb	0	; () banked
  1810  001C36  6F67               	movwf	srb_init@ctx& (0+255),b
  1811  001C38  0E00               	movlw	high _buf
  1812  001C3A  6F68               	movwf	(srb_init@ctx+1)& (0+255),b
  1813  001C3C  C06F  F069         	movff	txb_init@pool,srb_init@pool
  1814  001C40  C070  F06A         	movff	txb_init@pool+1,srb_init@pool+1
  1815  001C44  C071  F06B         	movff	txb_init@pool_size,srb_init@pool_size
  1816  001C48  C072  F06C         	movff	txb_init@pool_size+1,srb_init@pool_size+1
  1817  001C4C  0E00               	movlw	0
  1818  001C4E  6F6E               	movwf	(srb_init@element_size+1)& (0+255),b
  1819  001C50  0E0B               	movlw	11
  1820  001C52  6F6D               	movwf	srb_init@element_size& (0+255),b
  1821  001C54  EC10  F00B         	call	_srb_init	;wreg free
  1822  001C58  0012               	return		;funcret
  1823  001C5A                     __end_of_txb_init:
  1824                           	callstack 0
  1825                           
  1826 ;; *************** function _srb_init *****************
  1827 ;; Defined at:
  1828 ;;		line 14 in file "canlib/util/safe_ring_buffer.c"
  1829 ;; Parameters:    Size  Location     Type
  1830 ;;  ctx             2    7[BANK0 ] PTR struct .
  1831 ;;		 -> buf(10), 
  1832 ;;  pool            2    9[BANK0 ] PTR void 
  1833 ;;		 -> tx_pool(100), 
  1834 ;;  pool_size       2   11[BANK0 ] unsigned int 
  1835 ;;  element_size    2   13[BANK0 ] unsigned int 
  1836 ;; Auto vars:     Size  Location     Type
  1837 ;;		None
  1838 ;; Return value:  Size  Location     Type
  1839 ;;                  1    wreg      void 
  1840 ;; Registers used:
  1841 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1842 ;; Tracked objects:
  1843 ;;		On entry : 0/0
  1844 ;;		On exit  : 0/0
  1845 ;;		Unchanged: 0/0
  1846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1847 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1850 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1851 ;;Total ram usage:        8 bytes
  1852 ;; Hardware stack levels used: 1
  1853 ;; Hardware stack levels required when called: 6
  1854 ;; This function calls:
  1855 ;;		___lwdiv
  1856 ;; This function is called by:
  1857 ;;		_txb_init
  1858 ;; This function uses a non-reentrant model
  1859 ;;
  1860                           
  1861                           	psect	text9
  1862  001620                     __ptext9:
  1863                           	callstack 0
  1864  001620                     _srb_init:
  1865                           	callstack 23
  1866  001620                     
  1867                           ;safe_ring_buffer.c: 19: ctx->memory_pool = pool;
  1868  001620  0060  F19F  FFD9   	movff	srb_init@ctx,fsr2l
  1869  001626  0060  F1A3  FFDA   	movff	srb_init@ctx+1,fsr2h
  1870  00162C  0060  F1A7  FFDE   	movff	srb_init@pool,postinc2
  1871  001632  0060  F1AB  FFDD   	movff	srb_init@pool+1,postdec2
  1872  001638                     
  1873                           ;safe_ring_buffer.c: 20: ctx->element_size = element_size;
  1874  001638  0100               	movlb	0	; () banked
  1875  00163A  EE20 F002          	lfsr	2,2
  1876  00163E  5167               	movf	srb_init@ctx& (0+255),w,b
  1877  001640  26D9               	addwf	fsr2l,f,c
  1878  001642  5168               	movf	(srb_init@ctx+1)& (0+255),w,b
  1879  001644  22DA               	addwfc	fsr2h,f,c
  1880  001646  0060  F1B7  FFDE   	movff	srb_init@element_size,postinc2
  1881  00164C  0060  F1BB  FFDD   	movff	srb_init@element_size+1,postdec2
  1882  001652                     
  1883                           ; BSR set to: 0
  1884                           ;safe_ring_buffer.c: 21: ctx->max_elements = (pool_size / (element_size));
  1885  001652  C06B  F060         	movff	srb_init@pool_size,___lwdiv@dividend
  1886  001656  C06C  F061         	movff	srb_init@pool_size+1,___lwdiv@dividend+1
  1887  00165A  C06D  F062         	movff	srb_init@element_size,___lwdiv@divisor
  1888  00165E  C06E  F063         	movff	srb_init@element_size+1,___lwdiv@divisor+1
  1889  001662  ECDD  F00B         	call	___lwdiv	;wreg free
  1890  001666  0100               	movlb	0	; () banked
  1891  001668  EE20 F004          	lfsr	2,4
  1892  00166C  5167               	movf	srb_init@ctx& (0+255),w,b
  1893  00166E  26D9               	addwf	fsr2l,f,c
  1894  001670  5168               	movf	(srb_init@ctx+1)& (0+255),w,b
  1895  001672  22DA               	addwfc	fsr2h,f,c
  1896  001674  0060  F183  FFDE   	movff	?___lwdiv,postinc2
  1897  00167A  0060  F187  FFDD   	movff	?___lwdiv+1,postdec2
  1898  001680                     
  1899                           ; BSR set to: 0
  1900                           ;safe_ring_buffer.c: 22: ctx->rd_idx = 0;
  1901  001680  EE20 F006          	lfsr	2,6
  1902  001684  5167               	movf	srb_init@ctx& (0+255),w,b
  1903  001686  26D9               	addwf	fsr2l,f,c
  1904  001688  5168               	movf	(srb_init@ctx+1)& (0+255),w,b
  1905  00168A  22DA               	addwfc	fsr2h,f,c
  1906  00168C  0E00               	movlw	0
  1907  00168E  6EDE               	movwf	postinc2,c
  1908  001690  0E00               	movlw	0
  1909  001692  6EDD               	movwf	postdec2,c
  1910  001694                     
  1911                           ; BSR set to: 0
  1912                           ;safe_ring_buffer.c: 23: ctx->wr_idx = 0;
  1913  001694  EE20 F008          	lfsr	2,8
  1914  001698  5167               	movf	srb_init@ctx& (0+255),w,b
  1915  00169A  26D9               	addwf	fsr2l,f,c
  1916  00169C  5168               	movf	(srb_init@ctx+1)& (0+255),w,b
  1917  00169E  22DA               	addwfc	fsr2h,f,c
  1918  0016A0  0E00               	movlw	0
  1919  0016A2  6EDE               	movwf	postinc2,c
  1920  0016A4  0E00               	movlw	0
  1921  0016A6  6EDD               	movwf	postdec2,c
  1922  0016A8                     
  1923                           ; BSR set to: 0
  1924  0016A8  0012               	return		;funcret
  1925  0016AA                     __end_of_srb_init:
  1926                           	callstack 0
  1927                           
  1928 ;; *************** function _txb_heartbeat *****************
  1929 ;; Defined at:
  1930 ;;		line 31 in file "canlib/util/can_tx_buffer.c"
  1931 ;; Parameters:    Size  Location     Type
  1932 ;;		None
  1933 ;; Auto vars:     Size  Location     Type
  1934 ;;  msg_sent       11   22[BANK0 ] struct .
  1935 ;; Return value:  Size  Location     Type
  1936 ;;                  1    wreg      void 
  1937 ;; Registers used:
  1938 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1939 ;; Tracked objects:
  1940 ;;		On entry : 0/0
  1941 ;;		On exit  : 0/0
  1942 ;;		Unchanged: 0/0
  1943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1945 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1947 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1948 ;;Total ram usage:       11 bytes
  1949 ;; Hardware stack levels used: 1
  1950 ;; Hardware stack levels required when called: 8
  1951 ;; This function calls:
  1952 ;;		_can_send
  1953 ;;		_can_send_rdy
  1954 ;;		_srb_is_empty
  1955 ;;		_srb_pop
  1956 ;; This function is called by:
  1957 ;;		_main
  1958 ;; This function uses a non-reentrant model
  1959 ;;
  1960                           
  1961                           	psect	text10
  1962  0016AA                     __ptext10:
  1963                           	callstack 0
  1964  0016AA                     _txb_heartbeat:
  1965                           	callstack 22
  1966  0016AA                     
  1967                           ;can_tx_buffer.c: 32: if (!srb_is_empty(&buf)) {
  1968  0016AA  0EDB               	movlw	low _buf
  1969  0016AC  0100               	movlb	0	; () banked
  1970  0016AE  6F60               	movwf	srb_is_empty@ctx& (0+255),b
  1971  0016B0  0E00               	movlw	high _buf
  1972  0016B2  6F61               	movwf	(srb_is_empty@ctx+1)& (0+255),b
  1973  0016B4  EC7E  F00D         	call	_srb_is_empty	;wreg free
  1974  0016B8  0900               	iorlw	0
  1975  0016BA  A4D8               	btfss	status,2,c
  1976  0016BC  EF62  F00B         	goto	u4281
  1977  0016C0  EF64  F00B         	goto	u4280
  1978  0016C4                     u4281:
  1979  0016C4  EF98  F00B         	goto	l896
  1980  0016C8                     u4280:
  1981  0016C8                     
  1982                           ;can_tx_buffer.c: 33: if ((*(ctx.can_tx_ready))()) {
  1983  0016C8  EE20  F0CF         	lfsr	2,_ctx+2
  1984  0016CC  D802               	call	u4298
  1985  0016CE  EF73  F00B         	goto	u4299
  1986  0016D2                     u4298:
  1987  0016D2  0005               	push	
  1988  0016D4  6EFA               	movwf	pclath,c
  1989  0016D6  50DE               	movf	postinc2,w,c
  1990  0016D8  6EFD               	movwf	tosl,c
  1991  0016DA  50DE               	movf	postinc2,w,c
  1992  0016DC  6EFE               	movwf	tosh,c
  1993  0016DE  50F8               	movf	tblptru,w,c
  1994  0016E0  6EFF               	movwf	tosu,c
  1995  0016E2  50FA               	movf	pclath,w,c
  1996  0016E4  0012               	return		;indir
  1997  0016E6                     u4299:
  1998  0016E6  0900               	iorlw	0
  1999  0016E8  B4D8               	btfsc	status,2,c
  2000  0016EA  EF79  F00B         	goto	u4301
  2001  0016EE  EF7B  F00B         	goto	u4300
  2002  0016F2                     u4301:
  2003  0016F2  EF98  F00B         	goto	l896
  2004  0016F6                     u4300:
  2005  0016F6                     
  2006                           ;can_tx_buffer.c: 34: can_msg_t msg_sent;;can_tx_buffer.c: 35: srb_pop(&buf, &msg_sent);
  2007  0016F6  0EDB               	movlw	low _buf
  2008  0016F8  0100               	movlb	0	; () banked
  2009  0016FA  6F6C               	movwf	srb_pop@ctx& (0+255),b
  2010  0016FC  0E00               	movlw	high _buf
  2011  0016FE  6F6D               	movwf	(srb_pop@ctx+1)& (0+255),b
  2012  001700  0E76               	movlw	low txb_heartbeat@msg_sent
  2013  001702  6F6E               	movwf	srb_pop@element& (0+255),b
  2014  001704  0E00               	movlw	high txb_heartbeat@msg_sent
  2015  001706  6F6F               	movwf	(srb_pop@element+1)& (0+255),b
  2016  001708  EC4E  F008         	call	_srb_pop	;wreg free
  2017  00170C                     
  2018                           ;can_tx_buffer.c: 36: (*(ctx.can_send_fp))(&msg_sent);
  2019  00170C  0E76               	movlw	low txb_heartbeat@msg_sent
  2020  00170E  0100               	movlb	0	; () banked
  2021  001710  6F6B               	movwf	can_send@message& (0+255),b
  2022  001712  0E00               	movlw	high txb_heartbeat@msg_sent
  2023  001714  6F6C               	movwf	(can_send@message+1)& (0+255),b
  2024  001716  D802               	call	u4318
  2025  001718  EF98  F00B         	goto	u4319
  2026  00171C                     u4318:
  2027  00171C  0005               	push	
  2028  00171E  6EFA               	movwf	pclath,c
  2029  001720  51CD               	movf	_ctx& (0+255),w,b
  2030  001722  6EFD               	movwf	tosl,c
  2031  001724  51CE               	movf	(_ctx+1)& (0+255),w,b
  2032  001726  6EFE               	movwf	tosh,c
  2033  001728  50F8               	movf	tblptru,w,c
  2034  00172A  6EFF               	movwf	tosu,c
  2035  00172C  50FA               	movf	pclath,w,c
  2036  00172E  0012               	return		;indir
  2037  001730                     u4319:
  2038  001730                     l896:
  2039  001730  0012               	return		;funcret
  2040  001732                     __end_of_txb_heartbeat:
  2041                           	callstack 0
  2042                           
  2043 ;; *************** function _srb_pop *****************
  2044 ;; Defined at:
  2045 ;;		line 58 in file "canlib/util/safe_ring_buffer.c"
  2046 ;; Parameters:    Size  Location     Type
  2047 ;;  ctx             2   12[BANK0 ] PTR struct .
  2048 ;;		 -> buf(10), 
  2049 ;;  element         2   14[BANK0 ] PTR void 
  2050 ;;		 -> txb_heartbeat@msg_sent(11), 
  2051 ;; Auto vars:     Size  Location     Type
  2052 ;;  offset          2   20[BANK0 ] unsigned int 
  2053 ;; Return value:  Size  Location     Type
  2054 ;;                  1    wreg      unsigned char 
  2055 ;; Registers used:
  2056 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2057 ;; Tracked objects:
  2058 ;;		On entry : 0/0
  2059 ;;		On exit  : 0/0
  2060 ;;		Unchanged: 0/0
  2061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2062 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2063 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2064 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2065 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2066 ;;Total ram usage:       10 bytes
  2067 ;; Hardware stack levels used: 1
  2068 ;; Hardware stack levels required when called: 7
  2069 ;; This function calls:
  2070 ;;		_get_offset_bytes
  2071 ;;		_memcpy
  2072 ;;		_srb_is_empty
  2073 ;; This function is called by:
  2074 ;;		_txb_heartbeat
  2075 ;; This function uses a non-reentrant model
  2076 ;;
  2077                           
  2078                           	psect	text11
  2079  00109C                     __ptext11:
  2080                           	callstack 0
  2081  00109C                     _srb_pop:
  2082                           	callstack 22
  2083  00109C                     
  2084                           ;safe_ring_buffer.c: 61: if (srb_is_empty(ctx)) {
  2085  00109C  C06C  F060         	movff	srb_pop@ctx,srb_is_empty@ctx
  2086  0010A0  C06D  F061         	movff	srb_pop@ctx+1,srb_is_empty@ctx+1
  2087  0010A4  EC7E  F00D         	call	_srb_is_empty	;wreg free
  2088  0010A8  0900               	iorlw	0
  2089  0010AA  B4D8               	btfsc	status,2,c
  2090  0010AC  EF5A  F008         	goto	u4071
  2091  0010B0  EF5C  F008         	goto	u4070
  2092  0010B4                     u4071:
  2093  0010B4  EF5E  F008         	goto	l5949
  2094  0010B8                     u4070:
  2095  0010B8  EFBF  F008         	goto	l928
  2096  0010BC                     l5949:
  2097                           
  2098                           ;safe_ring_buffer.c: 63: };safe_ring_buffer.c: 64: size_t offset = get_offset_bytes(ctx,
      +                           ctx->rd_idx);
  2099  0010BC  C06C  F066         	movff	srb_pop@ctx,get_offset_bytes@ctx
  2100  0010C0  C06D  F067         	movff	srb_pop@ctx+1,get_offset_bytes@ctx+1
  2101  0010C4  0100               	movlb	0	; () banked
  2102  0010C6  EE20 F006          	lfsr	2,6
  2103  0010CA  516C               	movf	srb_pop@ctx& (0+255),w,b
  2104  0010CC  26D9               	addwf	fsr2l,f,c
  2105  0010CE  516D               	movf	(srb_pop@ctx+1)& (0+255),w,b
  2106  0010D0  22DA               	addwfc	fsr2h,f,c
  2107  0010D2  006F FF78  F068    	movff	postinc2,get_offset_bytes@index
  2108  0010D8  006F FF74  F069    	movff	postdec2,get_offset_bytes@index+1
  2109  0010DE  EC18  F00C         	call	_get_offset_bytes	;wreg free
  2110  0010E2  C066  F074         	movff	?_get_offset_bytes,srb_pop@offset
  2111  0010E6  C067  F075         	movff	?_get_offset_bytes+1,srb_pop@offset+1
  2112  0010EA                     
  2113                           ;safe_ring_buffer.c: 65: memcpy(element, ((uint8_t *)ctx->memory_pool) + offset, ctx->el
      +                          ement_size);
  2114  0010EA  C06E  F060         	movff	srb_pop@element,memcpy@d1
  2115  0010EE  C06F  F061         	movff	srb_pop@element+1,memcpy@d1+1
  2116  0010F2  0060  F1B3  FFD9   	movff	srb_pop@ctx,fsr2l
  2117  0010F8  0060  F1B7  FFDA   	movff	srb_pop@ctx+1,fsr2h
  2118  0010FE  006F FF78  F070    	movff	postinc2,??_srb_pop
  2119  001104  006F FF74  F071    	movff	postdec2,??_srb_pop+1
  2120  00110A  0100               	movlb	0	; () banked
  2121  00110C  5174               	movf	srb_pop@offset& (0+255),w,b
  2122  00110E  2570               	addwf	??_srb_pop& (0+255),w,b
  2123  001110  6F62               	movwf	memcpy@s1& (0+255),b
  2124  001112  5175               	movf	(srb_pop@offset+1)& (0+255),w,b
  2125  001114  2171               	addwfc	(??_srb_pop+1)& (0+255),w,b
  2126  001116  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  2127  001118  EE20 F002          	lfsr	2,2
  2128  00111C  516C               	movf	srb_pop@ctx& (0+255),w,b
  2129  00111E  26D9               	addwf	fsr2l,f,c
  2130  001120  516D               	movf	(srb_pop@ctx+1)& (0+255),w,b
  2131  001122  22DA               	addwfc	fsr2h,f,c
  2132  001124  006F FF78  F064    	movff	postinc2,memcpy@n
  2133  00112A  006F FF74  F065    	movff	postdec2,memcpy@n+1
  2134  001130  EC47  F00C         	call	_memcpy	;wreg free
  2135  001134                     
  2136                           ;safe_ring_buffer.c: 66: if ( ++(ctx->rd_idx) >= ctx->max_elements) {
  2137  001134  0100               	movlb	0	; () banked
  2138  001136  EE20 F004          	lfsr	2,4
  2139  00113A  516C               	movf	srb_pop@ctx& (0+255),w,b
  2140  00113C  26D9               	addwf	fsr2l,f,c
  2141  00113E  516D               	movf	(srb_pop@ctx+1)& (0+255),w,b
  2142  001140  22DA               	addwfc	fsr2h,f,c
  2143  001142  EE10 F006          	lfsr	1,6
  2144  001146  516C               	movf	srb_pop@ctx& (0+255),w,b
  2145  001148  26E1               	addwf	fsr1l,f,c
  2146  00114A  516D               	movf	(srb_pop@ctx+1)& (0+255),w,b
  2147  00114C  22E2               	addwfc	fsr1h,f,c
  2148  00114E  2AE6               	incf	postinc1,f,c
  2149  001150  0E00               	movlw	0
  2150  001152  22E5               	addwfc	postdec1,f,c
  2151  001154  50DE               	movf	postinc2,w,c
  2152  001156  5CE6               	subwf	postinc1,w,c
  2153  001158  50DE               	movf	postinc2,w,c
  2154  00115A  58E6               	subwfb	postinc1,w,c
  2155  00115C  A0D8               	btfss	status,0,c
  2156  00115E  EFB3  F008         	goto	u4081
  2157  001162  EFB5  F008         	goto	u4080
  2158  001166                     u4081:
  2159  001166  EFBF  F008         	goto	l928
  2160  00116A                     u4080:
  2161  00116A                     
  2162                           ; BSR set to: 0
  2163                           ;safe_ring_buffer.c: 67: ctx->rd_idx = 0;
  2164  00116A  EE20 F006          	lfsr	2,6
  2165  00116E  516C               	movf	srb_pop@ctx& (0+255),w,b
  2166  001170  26D9               	addwf	fsr2l,f,c
  2167  001172  516D               	movf	(srb_pop@ctx+1)& (0+255),w,b
  2168  001174  22DA               	addwfc	fsr2h,f,c
  2169  001176  0E00               	movlw	0
  2170  001178  6EDE               	movwf	postinc2,c
  2171  00117A  0E00               	movlw	0
  2172  00117C  6EDD               	movwf	postdec2,c
  2173  00117E                     l928:
  2174  00117E  0012               	return		;funcret
  2175  001180                     __end_of_srb_pop:
  2176                           	callstack 0
  2177                           
  2178 ;; *************** function _srb_is_empty *****************
  2179 ;; Defined at:
  2180 ;;		line 49 in file "canlib/util/safe_ring_buffer.c"
  2181 ;; Parameters:    Size  Location     Type
  2182 ;;  ctx             2    0[BANK0 ] PTR const struct .
  2183 ;;		 -> buf(10), 
  2184 ;; Auto vars:     Size  Location     Type
  2185 ;;		None
  2186 ;; Return value:  Size  Location     Type
  2187 ;;                  1    wreg      unsigned char 
  2188 ;; Registers used:
  2189 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2190 ;; Tracked objects:
  2191 ;;		On entry : 0/0
  2192 ;;		On exit  : 0/0
  2193 ;;		Unchanged: 0/0
  2194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2195 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2197 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2198 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2199 ;;Total ram usage:        6 bytes
  2200 ;; Hardware stack levels used: 1
  2201 ;; Hardware stack levels required when called: 5
  2202 ;; This function calls:
  2203 ;;		Nothing
  2204 ;; This function is called by:
  2205 ;;		_txb_heartbeat
  2206 ;;		_srb_pop
  2207 ;;		_srb_peek
  2208 ;; This function uses a non-reentrant model
  2209 ;;
  2210                           
  2211                           	psect	text12
  2212  001AFC                     __ptext12:
  2213                           	callstack 0
  2214  001AFC                     _srb_is_empty:
  2215                           	callstack 23
  2216  001AFC                     
  2217                           ;safe_ring_buffer.c: 51: if (ctx->wr_idx == ctx->rd_idx) {
  2218  001AFC  0100               	movlb	0	; () banked
  2219  001AFE  EE20 F006          	lfsr	2,6
  2220  001B02  5160               	movf	srb_is_empty@ctx& (0+255),w,b
  2221  001B04  26D9               	addwf	fsr2l,f,c
  2222  001B06  5161               	movf	(srb_is_empty@ctx+1)& (0+255),w,b
  2223  001B08  22DA               	addwfc	fsr2h,f,c
  2224  001B0A  EE10 F008          	lfsr	1,8
  2225  001B0E  5160               	movf	srb_is_empty@ctx& (0+255),w,b
  2226  001B10  26E1               	addwf	fsr1l,f,c
  2227  001B12  5161               	movf	(srb_is_empty@ctx+1)& (0+255),w,b
  2228  001B14  22E2               	addwfc	fsr1h,f,c
  2229  001B16  50DE               	movf	postinc2,w,c
  2230  001B18  18E6               	xorwf	postinc1,w,c
  2231  001B1A  E107               	bnz	u3801
  2232  001B1C  50DE               	movf	postinc2,w,c
  2233  001B1E  18E6               	xorwf	postinc1,w,c
  2234  001B20  A4D8               	btfss	status,2,c
  2235  001B22  EF95  F00D         	goto	u3801
  2236  001B26  EF97  F00D         	goto	u3800
  2237  001B2A                     u3801:
  2238  001B2A  EF9A  F00D         	goto	l5757
  2239  001B2E                     u3800:
  2240  001B2E                     
  2241                           ; BSR set to: 0
  2242                           ;safe_ring_buffer.c: 52: return 1;
  2243  001B2E  0E01               	movlw	1
  2244  001B30  EF9B  F00D         	goto	l923
  2245  001B34                     l5757:
  2246                           
  2247                           ; BSR set to: 0
  2248                           ;safe_ring_buffer.c: 54: return 0;
  2249  001B34  0E00               	movlw	0
  2250  001B36                     l923:
  2251                           
  2252                           ; BSR set to: 0
  2253  001B36  0012               	return		;funcret
  2254  001B38                     __end_of_srb_is_empty:
  2255                           	callstack 0
  2256                           
  2257 ;; *************** function _can_send_rdy *****************
  2258 ;; Defined at:
  2259 ;;		line 114 in file "canlib/pic18f26k83/pic18f26k83_can.c"
  2260 ;; Parameters:    Size  Location     Type
  2261 ;;		None
  2262 ;; Auto vars:     Size  Location     Type
  2263 ;;		None
  2264 ;; Return value:  Size  Location     Type
  2265 ;;                  1    wreg      unsigned char 
  2266 ;; Registers used:
  2267 ;;		wreg
  2268 ;; Tracked objects:
  2269 ;;		On entry : 0/0
  2270 ;;		On exit  : 0/0
  2271 ;;		Unchanged: 0/0
  2272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2277 ;;Total ram usage:        0 bytes
  2278 ;; Hardware stack levels used: 1
  2279 ;; Hardware stack levels required when called: 5
  2280 ;; This function calls:
  2281 ;;		Nothing
  2282 ;; This function is called by:
  2283 ;;		_main
  2284 ;;		_txb_heartbeat
  2285 ;; This function uses a non-reentrant model
  2286 ;;
  2287                           
  2288                           	psect	text13
  2289  001D90                     __ptext13:
  2290                           	callstack 0
  2291  001D90                     _can_send_rdy:
  2292                           	callstack 24
  2293  001D90                     
  2294                           ;pic18f26k83_can.c: 115: return TXB0CONbits.TXREQ == 0;
  2295  001D90  0137               	movlb	55	; () banked
  2296  001D92  A7E0               	btfss	224,3,b	;volatile
  2297  001D94  EFCE  F00E         	goto	u2331
  2298  001D98  EFD1  F00E         	goto	u2330
  2299  001D9C                     u2331:
  2300  001D9C  0E01               	movlw	1
  2301  001D9E  EFD2  F00E         	goto	u2340
  2302  001DA2                     u2330:
  2303  001DA2  0E00               	movlw	0
  2304  001DA4                     u2340:
  2305  001DA4                     
  2306                           ; BSR set to: 55
  2307  001DA4  0012               	return		;funcret
  2308  001DA6                     __end_of_can_send_rdy:
  2309                           	callstack 0
  2310                           
  2311 ;; *************** function _can_send *****************
  2312 ;; Defined at:
  2313 ;;		line 85 in file "canlib/pic18f26k83/pic18f26k83_can.c"
  2314 ;; Parameters:    Size  Location     Type
  2315 ;;  message         2   11[BANK0 ] PTR const struct .
  2316 ;;		 -> txb_heartbeat@msg_sent(11), 
  2317 ;; Auto vars:     Size  Location     Type
  2318 ;;		None
  2319 ;; Return value:  Size  Location     Type
  2320 ;;                  1    wreg      void 
  2321 ;; Registers used:
  2322 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2323 ;; Tracked objects:
  2324 ;;		On entry : 0/0
  2325 ;;		On exit  : 0/0
  2326 ;;		Unchanged: 0/0
  2327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2328 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2330 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2331 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2332 ;;Total ram usage:        4 bytes
  2333 ;; Hardware stack levels used: 1
  2334 ;; Hardware stack levels required when called: 6
  2335 ;; This function calls:
  2336 ;;		_memcpy
  2337 ;; This function is called by:
  2338 ;;		_main
  2339 ;;		_txb_heartbeat
  2340 ;; This function uses a non-reentrant model
  2341 ;;
  2342                           
  2343                           	psect	text14
  2344  000D78                     __ptext14:
  2345                           	callstack 0
  2346  000D78                     _can_send:
  2347                           	callstack 23
  2348  000D78                     
  2349                           ;pic18f26k83_can.c: 87: if (TXB0CONbits.TXREQ != 0) {
  2350  000D78  0137               	movlb	55	; () banked
  2351  000D7A  A7E0               	btfss	224,3,b	;volatile
  2352  000D7C  EFC2  F006         	goto	u4031
  2353  000D80  EFC4  F006         	goto	u4030
  2354  000D84                     u4031:
  2355  000D84  EFC6  F006         	goto	l5917
  2356  000D88                     u4030:
  2357  000D88  EF44  F007         	goto	l780
  2358  000D8C                     l5917:
  2359                           
  2360                           ; BSR set to: 55
  2361                           ;pic18f26k83_can.c: 89: };pic18f26k83_can.c: 92: if(message->data_len > 8 || message->si
      +                          d > 0x7FF) {
  2362  000D8C  0100               	movlb	0	; () banked
  2363  000D8E  EE20 F002          	lfsr	2,2
  2364  000D92  516B               	movf	can_send@message& (0+255),w,b
  2365  000D94  26D9               	addwf	fsr2l,f,c
  2366  000D96  516C               	movf	(can_send@message+1)& (0+255),w,b
  2367  000D98  22DA               	addwfc	fsr2h,f,c
  2368  000D9A  0E09               	movlw	9
  2369  000D9C  60DF               	cpfslt	indf2,c
  2370  000D9E  EFD3  F006         	goto	u4041
  2371  000DA2  EFD5  F006         	goto	u4040
  2372  000DA6                     u4041:
  2373  000DA6  EF44  F007         	goto	l780
  2374  000DAA                     u4040:
  2375  000DAA                     
  2376                           ; BSR set to: 0
  2377  000DAA  0060  F1AF  FFD9   	movff	can_send@message,fsr2l
  2378  000DB0  0060  F1B3  FFDA   	movff	can_send@message+1,fsr2h
  2379  000DB6  52DE               	movf	postinc2,f,c
  2380  000DB8  0E08               	movlw	8
  2381  000DBA  5CDE               	subwf	postinc2,w,c
  2382  000DBC  A0D8               	btfss	status,0,c
  2383  000DBE  EFE3  F006         	goto	u4051
  2384  000DC2  EFE5  F006         	goto	u4050
  2385  000DC6                     u4051:
  2386  000DC6  EFE7  F006         	goto	l5921
  2387  000DCA                     u4050:
  2388  000DCA  EF44  F007         	goto	l780
  2389  000DCE                     l5921:
  2390                           
  2391                           ; BSR set to: 0
  2392                           ;pic18f26k83_can.c: 94: };pic18f26k83_can.c: 97: TXB0CONbits.TXPRI = 0;
  2393  000DCE  0EFC               	movlw	-4
  2394  000DD0  0137               	movlb	55	; () banked
  2395  000DD2  17E0               	andwf	224,f,b	;volatile
  2396  000DD4                     
  2397                           ; BSR set to: 55
  2398                           ;pic18f26k83_can.c: 98: TXB0SIDH = ((message->sid) >> 3);
  2399  000DD4  0060  F1AF  FFD9   	movff	can_send@message,fsr2l
  2400  000DDA  0060  F1B3  FFDA   	movff	can_send@message+1,fsr2h
  2401  000DE0  006F FF78  F06D    	movff	postinc2,??_can_send
  2402  000DE6  006F FF74  F06E    	movff	postdec2,??_can_send+1
  2403  000DEC  0100               	movlb	0	; () banked
  2404  000DEE  90D8               	bcf	status,0,c
  2405  000DF0  336E               	rrcf	(??_can_send+1)& (0+255),f,b
  2406  000DF2  336D               	rrcf	??_can_send& (0+255),f,b
  2407  000DF4  90D8               	bcf	status,0,c
  2408  000DF6  336E               	rrcf	(??_can_send+1)& (0+255),f,b
  2409  000DF8  336D               	rrcf	??_can_send& (0+255),f,b
  2410  000DFA  90D8               	bcf	status,0,c
  2411  000DFC  336E               	rrcf	(??_can_send+1)& (0+255),f,b
  2412  000DFE  336D               	rrcf	??_can_send& (0+255),f,b
  2413  000E00  516D               	movf	??_can_send& (0+255),w,b
  2414  000E02  0137               	movlb	55	; () banked
  2415  000E04  6FE1               	movwf	225,b	;volatile
  2416  000E06                     
  2417                           ; BSR set to: 55
  2418                           ;pic18f26k83_can.c: 99: TXB0SIDL = (((message->sid) & 0x7) << 5);
  2419  000E06  0060  F1AF  FFD9   	movff	can_send@message,fsr2l
  2420  000E0C  0060  F1B3  FFDA   	movff	can_send@message+1,fsr2h
  2421  000E12  50DF               	movf	indf2,w,c
  2422  000E14  0100               	movlb	0	; () banked
  2423  000E16  6F6D               	movwf	??_can_send& (0+255),b
  2424  000E18  0E07               	movlw	7
  2425  000E1A  176D               	andwf	??_can_send& (0+255),f,b
  2426  000E1C  0E05               	movlw	5
  2427  000E1E  6F6E               	movwf	(??_can_send+1)& (0+255),b
  2428  000E20                     u4065:
  2429  000E20  90D8               	bcf	status,0,c
  2430  000E22  376D               	rlcf	??_can_send& (0+255),f,b
  2431  000E24  2F6E               	decfsz	(??_can_send+1)& (0+255),f,b
  2432  000E26  EF10  F007         	goto	u4065
  2433  000E2A  516D               	movf	??_can_send& (0+255),w,b
  2434  000E2C  0137               	movlb	55	; () banked
  2435  000E2E  6FE2               	movwf	226,b	;volatile
  2436  000E30                     
  2437                           ; BSR set to: 55
  2438                           ;pic18f26k83_can.c: 102: TXB0DLCbits.TXRTR = 0;
  2439  000E30  9DE5               	bcf	229,6,b	;volatile
  2440  000E32                     
  2441                           ; BSR set to: 55
  2442                           ;pic18f26k83_can.c: 104: TXB0DLCbits.DLC = message->data_len;
  2443  000E32  0100               	movlb	0	; () banked
  2444  000E34  EE20 F002          	lfsr	2,2
  2445  000E38  516B               	movf	can_send@message& (0+255),w,b
  2446  000E3A  26D9               	addwf	fsr2l,f,c
  2447  000E3C  516C               	movf	(can_send@message+1)& (0+255),w,b
  2448  000E3E  22DA               	addwfc	fsr2h,f,c
  2449  000E40  50DF               	movf	indf2,w,c
  2450  000E42  6F6D               	movwf	??_can_send& (0+255),b
  2451  000E44  0137               	movlb	55	; () banked
  2452  000E46  51E5               	movf	229,w,b	;volatile
  2453  000E48  0100               	movlb	0	; () banked
  2454  000E4A  196D               	xorwf	??_can_send& (0+255),w,b
  2455  000E4C  0BF0               	andlw	-16
  2456  000E4E  196D               	xorwf	??_can_send& (0+255),w,b
  2457  000E50  0137               	movlb	55	; () banked
  2458  000E52  6FE5               	movwf	229,b	;volatile
  2459  000E54                     
  2460                           ; BSR set to: 55
  2461                           ;pic18f26k83_can.c: 108: memcpy((void*) &TXB0D0, message->data, message->data_len);
  2462  000E54  0EE6               	movlw	230
  2463  000E56  0100               	movlb	0	; () banked
  2464  000E58  6F60               	movwf	memcpy@d1& (0+255),b
  2465  000E5A  0E37               	movlw	55
  2466  000E5C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  2467  000E5E  0E03               	movlw	3
  2468  000E60  256B               	addwf	can_send@message& (0+255),w,b
  2469  000E62  6F62               	movwf	memcpy@s1& (0+255),b
  2470  000E64  0E00               	movlw	0
  2471  000E66  216C               	addwfc	(can_send@message+1)& (0+255),w,b
  2472  000E68  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  2473  000E6A  EE20 F002          	lfsr	2,2
  2474  000E6E  516B               	movf	can_send@message& (0+255),w,b
  2475  000E70  26D9               	addwf	fsr2l,f,c
  2476  000E72  516C               	movf	(can_send@message+1)& (0+255),w,b
  2477  000E74  22DA               	addwfc	fsr2h,f,c
  2478  000E76  50DF               	movf	indf2,w,c
  2479  000E78  6F6D               	movwf	??_can_send& (0+255),b
  2480  000E7A  516D               	movf	??_can_send& (0+255),w,b
  2481  000E7C  6F64               	movwf	memcpy@n& (0+255),b
  2482  000E7E  6B65               	clrf	(memcpy@n+1)& (0+255),b
  2483  000E80  EC47  F00C         	call	_memcpy	;wreg free
  2484  000E84                     
  2485                           ;pic18f26k83_can.c: 111: TXB0CONbits.TXREQ = 1;
  2486  000E84  0137               	movlb	55	; () banked
  2487  000E86  87E0               	bsf	224,3,b	;volatile
  2488  000E88                     l780:
  2489  000E88  0012               	return		;funcret
  2490  000E8A                     __end_of_can_send:
  2491                           	callstack 0
  2492                           
  2493 ;; *************** function _timer0_init *****************
  2494 ;; Defined at:
  2495 ;;		line 28 in file "timer.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;		None
  2498 ;; Auto vars:     Size  Location     Type
  2499 ;;		None
  2500 ;; Return value:  Size  Location     Type
  2501 ;;                  1    wreg      void 
  2502 ;; Registers used:
  2503 ;;		wreg, status,2
  2504 ;; Tracked objects:
  2505 ;;		On entry : 0/0
  2506 ;;		On exit  : 0/0
  2507 ;;		Unchanged: 0/0
  2508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2513 ;;Total ram usage:        0 bytes
  2514 ;; Hardware stack levels used: 1
  2515 ;; Hardware stack levels required when called: 5
  2516 ;; This function calls:
  2517 ;;		Nothing
  2518 ;; This function is called by:
  2519 ;;		_main
  2520 ;; This function uses a non-reentrant model
  2521 ;;
  2522                           
  2523                           	psect	text15
  2524  001D72                     __ptext15:
  2525                           	callstack 0
  2526  001D72                     _timer0_init:
  2527                           	callstack 25
  2528  001D72                     
  2529                           ;timer.c: 29: PIE3bits.TMR0IE = 1;
  2530  001D72  0139               	movlb	57	; () banked
  2531  001D74  8F93               	bsf	147,7,b	;volatile
  2532                           
  2533                           ;timer.c: 31: T0CON0bits.EN = 0;
  2534  001D76  9EB8               	bcf	184,7,c	;volatile
  2535                           
  2536                           ;timer.c: 32: T0CON0bits.MD16 = 0;
  2537  001D78  98B8               	bcf	184,4,c	;volatile
  2538  001D7A                     
  2539                           ; BSR set to: 57
  2540                           ;timer.c: 34: T0CON0bits.OUTPS = 0;
  2541  001D7A  0EF0               	movlw	-16
  2542  001D7C  16B8               	andwf	184,f,c	;volatile
  2543                           
  2544                           ;timer.c: 35: T0CON1bits.CKPS = 0;
  2545  001D7E  0EF0               	movlw	-16
  2546  001D80  16B9               	andwf	185,f,c	;volatile
  2547                           
  2548                           ;timer.c: 37: T0CON1bits.CS = 0x5;
  2549  001D82  50B9               	movf	185,w,c	;volatile
  2550  001D84  0B1F               	andlw	-225
  2551  001D86  09A0               	iorlw	160
  2552  001D88  6EB9               	movwf	185,c	;volatile
  2553  001D8A                     
  2554                           ; BSR set to: 57
  2555                           ;timer.c: 38: T0CON1bits.ASYNC = 0;
  2556  001D8A  98B9               	bcf	185,4,c	;volatile
  2557  001D8C                     
  2558                           ; BSR set to: 57
  2559                           ;timer.c: 41: T0CON0bits.EN = 1;
  2560  001D8C  8EB8               	bsf	184,7,c	;volatile
  2561  001D8E                     
  2562                           ; BSR set to: 57
  2563  001D8E  0012               	return		;funcret
  2564  001D90                     __end_of_timer0_init:
  2565                           	callstack 0
  2566                           
  2567 ;; *************** function _send_status_ok *****************
  2568 ;; Defined at:
  2569 ;;		line 203 in file "main.c"
  2570 ;; Parameters:    Size  Location     Type
  2571 ;;		None
  2572 ;; Auto vars:     Size  Location     Type
  2573 ;;  board_stat_m   11   24[BANK0 ] struct .
  2574 ;; Return value:  Size  Location     Type
  2575 ;;                  1    wreg      void 
  2576 ;; Registers used:
  2577 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2578 ;; Tracked objects:
  2579 ;;		On entry : 0/0
  2580 ;;		On exit  : 0/0
  2581 ;;		Unchanged: 0/0
  2582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2584 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2586 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2587 ;;Total ram usage:       11 bytes
  2588 ;; Hardware stack levels used: 1
  2589 ;; Hardware stack levels required when called: 9
  2590 ;; This function calls:
  2591 ;;		_build_board_stat_msg
  2592 ;;		_millis
  2593 ;;		_txb_enqueue
  2594 ;; This function is called by:
  2595 ;;		_main
  2596 ;; This function uses a non-reentrant model
  2597 ;;
  2598                           
  2599                           	psect	text16
  2600  001A3E                     __ptext16:
  2601                           	callstack 0
  2602  001A3E                     _send_status_ok:
  2603                           	callstack 21
  2604  001A3E                     
  2605                           ;main.c: 204: can_msg_t board_stat_msg;;main.c: 205: build_board_stat_msg(millis(), E_NO
      +                          MINAL, (0), 0, &board_stat_msg);
  2606  001A3E  ECF2  F00E         	call	_millis	;wreg free
  2607  001A42  C060  F066         	movff	?_millis,build_board_stat_msg@timestamp
  2608  001A46  C061  F067         	movff	?_millis+1,build_board_stat_msg@timestamp+1
  2609  001A4A  C062  F068         	movff	?_millis+2,build_board_stat_msg@timestamp+2
  2610  001A4E  C063  F069         	movff	?_millis+3,build_board_stat_msg@timestamp+3
  2611  001A52  0E00               	movlw	0
  2612  001A54  0100               	movlb	0	; () banked
  2613  001A56  6F6A               	movwf	build_board_stat_msg@error_code& (0+255),b
  2614  001A58  0E00               	movlw	0
  2615  001A5A  6F6B               	movwf	build_board_stat_msg@error_data& (0+255),b
  2616  001A5C  0E00               	movlw	0
  2617  001A5E  6F6C               	movwf	(build_board_stat_msg@error_data+1)& (0+255),b
  2618  001A60  0E00               	movlw	0
  2619  001A62  6F6D               	movwf	build_board_stat_msg@error_data_len& (0+255),b
  2620  001A64  0E78               	movlw	low send_status_ok@board_stat_msg
  2621  001A66  6F6E               	movwf	build_board_stat_msg@output& (0+255),b
  2622  001A68  0E00               	movlw	high send_status_ok@board_stat_msg
  2623  001A6A  6F6F               	movwf	(build_board_stat_msg@output+1)& (0+255),b
  2624  001A6C  ECCA  F007         	call	_build_board_stat_msg	;wreg free
  2625  001A70                     
  2626                           ;main.c: 208: txb_enqueue(&board_stat_msg);
  2627  001A70  0E78               	movlw	low send_status_ok@board_stat_msg
  2628  001A72  0100               	movlb	0	; () banked
  2629  001A74  6F76               	movwf	txb_enqueue@msg& (0+255),b
  2630  001A76  0E00               	movlw	high send_status_ok@board_stat_msg
  2631  001A78  6F77               	movwf	(txb_enqueue@msg+1)& (0+255),b
  2632  001A7A  ECD7  F00D         	call	_txb_enqueue	;wreg free
  2633  001A7E  0012               	return		;funcret
  2634  001A80                     __end_of_send_status_ok:
  2635                           	callstack 0
  2636                           
  2637 ;; *************** function _is_batt_voltage_critical *****************
  2638 ;; Defined at:
  2639 ;;		line 73 in file "error_checks.c"
  2640 ;; Parameters:    Size  Location     Type
  2641 ;;		None
  2642 ;; Auto vars:     Size  Location     Type
  2643 ;;		None
  2644 ;; Return value:  Size  Location     Type
  2645 ;;                  1    wreg      unsigned char 
  2646 ;; Registers used:
  2647 ;;		wreg, status,2
  2648 ;; Tracked objects:
  2649 ;;		On entry : 0/0
  2650 ;;		On exit  : 0/0
  2651 ;;		Unchanged: 0/0
  2652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2657 ;;Total ram usage:        0 bytes
  2658 ;; Hardware stack levels used: 1
  2659 ;; Hardware stack levels required when called: 5
  2660 ;; This function calls:
  2661 ;;		Nothing
  2662 ;; This function is called by:
  2663 ;;		_main
  2664 ;; This function uses a non-reentrant model
  2665 ;;
  2666                           
  2667                           	psect	text17
  2668  001E3A                     __ptext17:
  2669                           	callstack 0
  2670  001E3A                     _is_batt_voltage_critical:
  2671                           	callstack 25
  2672  001E3A                     
  2673                           ;error_checks.c: 74: return battery_voltage_critical;
  2674  001E3A  0100               	movlb	0	; () banked
  2675  001E3C  51D9               	movf	_battery_voltage_critical& (0+255),w,b
  2676  001E3E                     
  2677                           ; BSR set to: 0
  2678  001E3E  0012               	return		;funcret
  2679  001E40                     __end_of_is_batt_voltage_critical:
  2680                           	callstack 0
  2681                           
  2682 ;; *************** function _check_valve_pin_error *****************
  2683 ;; Defined at:
  2684 ;;		line 97 in file "error_checks.c"
  2685 ;; Parameters:    Size  Location     Type
  2686 ;;  req_state       1    wreg     enum E46
  2687 ;; Auto vars:     Size  Location     Type
  2688 ;;  req_state       1    0[COMRAM] enum E46
  2689 ;; Return value:  Size  Location     Type
  2690 ;;                  1    wreg      unsigned char 
  2691 ;; Registers used:
  2692 ;;		wreg
  2693 ;; Tracked objects:
  2694 ;;		On entry : 0/0
  2695 ;;		On exit  : 0/0
  2696 ;;		Unchanged: 0/0
  2697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2702 ;;Total ram usage:        0 bytes
  2703 ;; Hardware stack levels used: 1
  2704 ;; Hardware stack levels required when called: 5
  2705 ;; This function calls:
  2706 ;;		Nothing
  2707 ;; This function is called by:
  2708 ;;		_main
  2709 ;; This function uses a non-reentrant model
  2710 ;;
  2711                           
  2712                           	psect	text18
  2713  001E46                     __ptext18:
  2714                           	callstack 0
  2715  001E46                     _check_valve_pin_error:
  2716                           	callstack 25
  2717  001E46                     
  2718                           ;error_checks.c: 98: return 1;
  2719  001E46  0E01               	movlw	1
  2720  001E48  0012               	return		;funcret
  2721  001E4A                     __end_of_check_valve_pin_error:
  2722                           	callstack 0
  2723                           
  2724 ;; *************** function _check_bus_current_error *****************
  2725 ;; Defined at:
  2726 ;;		line 77 in file "error_checks.c"
  2727 ;; Parameters:    Size  Location     Type
  2728 ;;		None
  2729 ;; Auto vars:     Size  Location     Type
  2730 ;;  error_msg      11   34[BANK0 ] struct .
  2731 ;;  timestamp       4   24[BANK0 ] unsigned long 
  2732 ;;  curr_data       2   30[BANK0 ] unsigned char [2]
  2733 ;;  curr_draw_mA    2   32[BANK0 ] int 
  2734 ;;  sense_raw_mV    2   28[BANK0 ] unsigned int 
  2735 ;; Return value:  Size  Location     Type
  2736 ;;                  1    wreg      unsigned char 
  2737 ;; Registers used:
  2738 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2739 ;; Tracked objects:
  2740 ;;		On entry : 0/0
  2741 ;;		On exit  : 0/0
  2742 ;;		Unchanged: 0/0
  2743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2745 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2747 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2748 ;;Total ram usage:       21 bytes
  2749 ;; Hardware stack levels used: 1
  2750 ;; Hardware stack levels required when called: 9
  2751 ;; This function calls:
  2752 ;;		_ADCC_GetSingleConversion
  2753 ;;		___lwdiv
  2754 ;;		_build_board_stat_msg
  2755 ;;		_millis
  2756 ;;		_txb_enqueue
  2757 ;; This function is called by:
  2758 ;;		_main
  2759 ;; This function uses a non-reentrant model
  2760 ;;
  2761                           
  2762                           	psect	text19
  2763  0014BA                     __ptext19:
  2764                           	callstack 0
  2765  0014BA                     _check_bus_current_error:
  2766                           	callstack 21
  2767  0014BA                     
  2768                           ;error_checks.c: 78: adc_result_t sense_raw_mV = ADCC_GetSingleConversion(channel_VSENSE
      +                          );
  2769  0014BA  0E01               	movlw	1
  2770  0014BC  EC40  F00D         	call	_ADCC_GetSingleConversion
  2771  0014C0  C060  F07C         	movff	?_ADCC_GetSingleConversion,check_bus_current_error@sense_raw_mV
  2772  0014C4  C061  F07D         	movff	?_ADCC_GetSingleConversion+1,check_bus_current_error@sense_raw_mV+1
  2773                           
  2774                           ;error_checks.c: 79: int curr_draw_mA = (sense_raw_mV) / 20;
  2775  0014C8  C07C  F060         	movff	check_bus_current_error@sense_raw_mV,___lwdiv@dividend
  2776  0014CC  C07D  F061         	movff	check_bus_current_error@sense_raw_mV+1,___lwdiv@dividend+1
  2777  0014D0  0E00               	movlw	0
  2778  0014D2  0100               	movlb	0	; () banked
  2779  0014D4  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2780  0014D6  0E14               	movlw	20
  2781  0014D8  6F62               	movwf	___lwdiv@divisor& (0+255),b
  2782  0014DA  ECDD  F00B         	call	___lwdiv	;wreg free
  2783  0014DE  C060  F080         	movff	?___lwdiv,check_bus_current_error@curr_draw_mA
  2784  0014E2  C061  F081         	movff	?___lwdiv+1,check_bus_current_error@curr_draw_mA+1
  2785  0014E6                     
  2786                           ;error_checks.c: 81: if (curr_draw_mA > 300) {
  2787  0014E6  0100               	movlb	0	; () banked
  2788  0014E8  BF81               	btfsc	(check_bus_current_error@curr_draw_mA+1)& (0+255),7,b
  2789  0014EA  EF80  F00A         	goto	u4211
  2790  0014EE  0E2D               	movlw	45
  2791  0014F0  5D80               	subwf	check_bus_current_error@curr_draw_mA& (0+255),w,b
  2792  0014F2  0E01               	movlw	1
  2793  0014F4  5981               	subwfb	(check_bus_current_error@curr_draw_mA+1)& (0+255),w,b
  2794  0014F6  A0D8               	btfss	status,0,c
  2795  0014F8  EF80  F00A         	goto	u4211
  2796  0014FC  EF82  F00A         	goto	u4210
  2797  001500                     u4211:
  2798  001500  EFB5  F00A         	goto	l6281
  2799  001504                     u4210:
  2800  001504                     
  2801                           ; BSR set to: 0
  2802                           ;error_checks.c: 82: uint32_t timestamp = millis();
  2803  001504  ECF2  F00E         	call	_millis	;wreg free
  2804  001508  C060  F078         	movff	?_millis,check_bus_current_error@timestamp
  2805  00150C  C061  F079         	movff	?_millis+1,check_bus_current_error@timestamp+1
  2806  001510  C062  F07A         	movff	?_millis+2,check_bus_current_error@timestamp+2
  2807  001514  C063  F07B         	movff	?_millis+3,check_bus_current_error@timestamp+3
  2808  001518                     
  2809                           ;error_checks.c: 83: uint8_t curr_data[2] = {0};
  2810  001518  0E00               	movlw	0
  2811  00151A  0100               	movlb	0	; () banked
  2812  00151C  6F7F               	movwf	(check_bus_current_error@curr_data+1)& (0+255),b
  2813  00151E  0E00               	movlw	0
  2814  001520  6F7E               	movwf	check_bus_current_error@curr_data& (0+255),b
  2815  001522                     
  2816                           ; BSR set to: 0
  2817                           ;error_checks.c: 84: curr_data[0] = (curr_draw_mA >> 8) & 0xff;
  2818  001522  5181               	movf	(check_bus_current_error@curr_draw_mA+1)& (0+255),w,b
  2819  001524  6F7E               	movwf	check_bus_current_error@curr_data& (0+255),b
  2820  001526                     
  2821                           ; BSR set to: 0
  2822                           ;error_checks.c: 85: curr_data[1] = (curr_draw_mA >> 0) & 0xff;
  2823  001526  C080  F07F         	movff	check_bus_current_error@curr_draw_mA,check_bus_current_error@curr_data+1
  2824  00152A                     
  2825                           ; BSR set to: 0
  2826                           ;error_checks.c: 87: can_msg_t error_msg;;error_checks.c: 88: build_board_stat_msg(times
      +                          tamp, E_BUS_OVER_CURRENT, curr_data, 2, &error_msg);
  2827  00152A  C078  F066         	movff	check_bus_current_error@timestamp,build_board_stat_msg@timestamp
  2828  00152E  C079  F067         	movff	check_bus_current_error@timestamp+1,build_board_stat_msg@timestamp+1
  2829  001532  C07A  F068         	movff	check_bus_current_error@timestamp+2,build_board_stat_msg@timestamp+2
  2830  001536  C07B  F069         	movff	check_bus_current_error@timestamp+3,build_board_stat_msg@timestamp+3
  2831  00153A  0E01               	movlw	1
  2832  00153C  6F6A               	movwf	build_board_stat_msg@error_code& (0+255),b
  2833  00153E  0E7E               	movlw	low check_bus_current_error@curr_data
  2834  001540  6F6B               	movwf	build_board_stat_msg@error_data& (0+255),b
  2835  001542  0E00               	movlw	high check_bus_current_error@curr_data
  2836  001544  6F6C               	movwf	(build_board_stat_msg@error_data+1)& (0+255),b
  2837  001546  0E02               	movlw	2
  2838  001548  6F6D               	movwf	build_board_stat_msg@error_data_len& (0+255),b
  2839  00154A  0E82               	movlw	low check_bus_current_error@error_msg
  2840  00154C  6F6E               	movwf	build_board_stat_msg@output& (0+255),b
  2841  00154E  0E00               	movlw	high check_bus_current_error@error_msg
  2842  001550  6F6F               	movwf	(build_board_stat_msg@output+1)& (0+255),b
  2843  001552  ECCA  F007         	call	_build_board_stat_msg	;wreg free
  2844  001556                     
  2845                           ;error_checks.c: 89: txb_enqueue(&error_msg);
  2846  001556  0E82               	movlw	low check_bus_current_error@error_msg
  2847  001558  0100               	movlb	0	; () banked
  2848  00155A  6F76               	movwf	txb_enqueue@msg& (0+255),b
  2849  00155C  0E00               	movlw	high check_bus_current_error@error_msg
  2850  00155E  6F77               	movwf	(txb_enqueue@msg+1)& (0+255),b
  2851  001560  ECD7  F00D         	call	_txb_enqueue	;wreg free
  2852  001564                     
  2853                           ;error_checks.c: 90: return 0;
  2854  001564  0E00               	movlw	0
  2855  001566  EFB6  F00A         	goto	l867
  2856  00156A                     l6281:
  2857                           
  2858                           ; BSR set to: 0
  2859                           ;error_checks.c: 91: };error_checks.c: 94: return 1;
  2860  00156A  0E01               	movlw	1
  2861  00156C                     l867:
  2862  00156C  0012               	return		;funcret
  2863  00156E                     __end_of_check_bus_current_error:
  2864                           	callstack 0
  2865                           
  2866 ;; *************** function ___lwdiv *****************
  2867 ;; Defined at:
  2868 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  2869 ;; Parameters:    Size  Location     Type
  2870 ;;  dividend        2    0[BANK0 ] unsigned int 
  2871 ;;  divisor         2    2[BANK0 ] unsigned int 
  2872 ;; Auto vars:     Size  Location     Type
  2873 ;;  quotient        2    5[BANK0 ] unsigned int 
  2874 ;;  counter         1    4[BANK0 ] unsigned char 
  2875 ;; Return value:  Size  Location     Type
  2876 ;;                  2    0[BANK0 ] unsigned int 
  2877 ;; Registers used:
  2878 ;;		wreg, status,2, status,0
  2879 ;; Tracked objects:
  2880 ;;		On entry : 0/0
  2881 ;;		On exit  : 0/0
  2882 ;;		Unchanged: 0/0
  2883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2884 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2885 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2887 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2888 ;;Total ram usage:        7 bytes
  2889 ;; Hardware stack levels used: 1
  2890 ;; Hardware stack levels required when called: 5
  2891 ;; This function calls:
  2892 ;;		Nothing
  2893 ;; This function is called by:
  2894 ;;		_check_bus_current_error
  2895 ;;		_srb_init
  2896 ;; This function uses a non-reentrant model
  2897 ;;
  2898                           
  2899                           	psect	text20
  2900  0017BA                     __ptext20:
  2901                           	callstack 0
  2902  0017BA                     ___lwdiv:
  2903                           	callstack 23
  2904  0017BA  0E00               	movlw	0
  2905  0017BC  0100               	movlb	0	; () banked
  2906  0017BE  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
  2907  0017C0  0E00               	movlw	0
  2908  0017C2  6F65               	movwf	___lwdiv@quotient& (0+255),b
  2909  0017C4                     
  2910                           ; BSR set to: 0
  2911  0017C4  5162               	movf	___lwdiv@divisor& (0+255),w,b
  2912  0017C6  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  2913  0017C8  B4D8               	btfsc	status,2,c
  2914  0017CA  EFE9  F00B         	goto	u3891
  2915  0017CE  EFEB  F00B         	goto	u3890
  2916  0017D2                     u3891:
  2917  0017D2  EF13  F00C         	goto	l1461
  2918  0017D6                     u3890:
  2919  0017D6                     
  2920                           ; BSR set to: 0
  2921  0017D6  0E01               	movlw	1
  2922  0017D8  6F64               	movwf	___lwdiv@counter& (0+255),b
  2923  0017DA  EFF3  F00B         	goto	l5805
  2924  0017DE                     l5803:
  2925                           
  2926                           ; BSR set to: 0
  2927  0017DE  90D8               	bcf	status,0,c
  2928  0017E0  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
  2929  0017E2  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  2930  0017E4  2B64               	incf	___lwdiv@counter& (0+255),f,b
  2931  0017E6                     l5805:
  2932                           
  2933                           ; BSR set to: 0
  2934  0017E6  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  2935  0017E8  EFF8  F00B         	goto	u3901
  2936  0017EC  EFFA  F00B         	goto	u3900
  2937  0017F0                     u3901:
  2938  0017F0  EFEF  F00B         	goto	l5803
  2939  0017F4                     u3900:
  2940  0017F4                     l5807:
  2941                           
  2942                           ; BSR set to: 0
  2943  0017F4  90D8               	bcf	status,0,c
  2944  0017F6  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
  2945  0017F8  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  2946  0017FA                     
  2947                           ; BSR set to: 0
  2948  0017FA  5162               	movf	___lwdiv@divisor& (0+255),w,b
  2949  0017FC  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
  2950  0017FE  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  2951  001800  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  2952  001802  A0D8               	btfss	status,0,c
  2953  001804  EF06  F00C         	goto	u3911
  2954  001808  EF08  F00C         	goto	u3910
  2955  00180C                     u3911:
  2956  00180C  EF0D  F00C         	goto	l5815
  2957  001810                     u3910:
  2958  001810                     
  2959                           ; BSR set to: 0
  2960  001810  5162               	movf	___lwdiv@divisor& (0+255),w,b
  2961  001812  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
  2962  001814  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  2963  001816  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  2964  001818                     
  2965                           ; BSR set to: 0
  2966  001818  8165               	bsf	___lwdiv@quotient& (0+255),0,b
  2967  00181A                     l5815:
  2968                           
  2969                           ; BSR set to: 0
  2970  00181A  90D8               	bcf	status,0,c
  2971  00181C  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  2972  00181E  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
  2973  001820                     
  2974                           ; BSR set to: 0
  2975  001820  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
  2976  001822  EFFA  F00B         	goto	l5807
  2977  001826                     l1461:
  2978                           
  2979                           ; BSR set to: 0
  2980  001826  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
  2981  00182A  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2982  00182E                     
  2983                           ; BSR set to: 0
  2984  00182E  0012               	return		;funcret
  2985  001830                     __end_of___lwdiv:
  2986                           	callstack 0
  2987                           
  2988 ;; *************** function _check_battery_voltage_error *****************
  2989 ;; Defined at:
  2990 ;;		line 24 in file "error_checks.c"
  2991 ;; Parameters:    Size  Location     Type
  2992 ;;		None
  2993 ;; Auto vars:     Size  Location     Type
  2994 ;;  error_msg      11   52[BANK0 ] struct .
  2995 ;;  timestamp       4   41[BANK0 ] unsigned long 
  2996 ;;  batt_data       2   50[BANK0 ] unsigned char [2]
  2997 ;;  error_code      1   47[BANK0 ] enum E54
  2998 ;;  batt_msg       11   63[BANK0 ] struct .
  2999 ;;  batt_voltage    2   74[BANK0 ] unsigned int 
  3000 ;;  batt_raw        2   45[BANK0 ] unsigned int 
  3001 ;; Return value:  Size  Location     Type
  3002 ;;                  1    wreg      unsigned char 
  3003 ;; Registers used:
  3004 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3005 ;; Tracked objects:
  3006 ;;		On entry : 0/0
  3007 ;;		On exit  : 0/0
  3008 ;;		Unchanged: 0/0
  3009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3011 ;;      Locals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3013 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3014 ;;Total ram usage:       35 bytes
  3015 ;; Hardware stack levels used: 1
  3016 ;; Hardware stack levels required when called: 9
  3017 ;; This function calls:
  3018 ;;		_ADCC_GetSingleConversion
  3019 ;;		___ftmul
  3020 ;;		___fttol
  3021 ;;		___lwtoft
  3022 ;;		_build_analog_data_msg
  3023 ;;		_build_board_stat_msg
  3024 ;;		_millis
  3025 ;;		_txb_enqueue
  3026 ;; This function is called by:
  3027 ;;		_main
  3028 ;; This function uses a non-reentrant model
  3029 ;;
  3030                           
  3031                           	psect	text21
  3032  0006B8                     __ptext21:
  3033                           	callstack 0
  3034  0006B8                     _check_battery_voltage_error:
  3035                           	callstack 21
  3036  0006B8                     
  3037                           ;error_checks.c: 25: adc_result_t batt_raw = ADCC_GetSingleConversion(channel_VBAT);
  3038  0006B8  0E00               	movlw	0
  3039  0006BA  EC40  F00D         	call	_ADCC_GetSingleConversion
  3040  0006BE  C060  F08D         	movff	?_ADCC_GetSingleConversion,check_battery_voltage_error@batt_raw
  3041  0006C2  C061  F08E         	movff	?_ADCC_GetSingleConversion+1,check_battery_voltage_error@batt_raw+1
  3042  0006C6                     
  3043                           ;error_checks.c: 28: uint16_t batt_voltage_mV = (uint16_t)batt_raw;
  3044  0006C6  C08D  F0AA         	movff	check_battery_voltage_error@batt_raw,check_battery_voltage_error@batt_voltage_mV
  3045  0006CA  C08E  F0AB         	movff	check_battery_voltage_error@batt_raw+1,check_battery_voltage_error@batt_voltage_m
      +                          V+1
  3046                           
  3047                           ;error_checks.c: 32: batt_voltage_mV = batt_voltage_mV * 3.95;
  3048  0006CE  0ECD               	movlw	205
  3049  0006D0  0100               	movlb	0	; () banked
  3050  0006D2  6F6E               	movwf	___ftmul@f2& (0+255),b
  3051  0006D4  0E7C               	movlw	124
  3052  0006D6  6F6F               	movwf	(___ftmul@f2+1)& (0+255),b
  3053  0006D8  0E40               	movlw	64
  3054  0006DA  6F70               	movwf	(___ftmul@f2+2)& (0+255),b
  3055  0006DC  C0AA  F068         	movff	check_battery_voltage_error@batt_voltage_mV,___lwtoft@c
  3056  0006E0  C0AB  F069         	movff	check_battery_voltage_error@batt_voltage_mV+1,___lwtoft@c+1
  3057  0006E4  EC81  F00E         	call	___lwtoft	;wreg free
  3058  0006E8  C068  F06B         	movff	?___lwtoft,___ftmul@f1
  3059  0006EC  C069  F06C         	movff	?___lwtoft+1,___ftmul@f1+1
  3060  0006F0  C06A  F06D         	movff	?___lwtoft+2,___ftmul@f1+2
  3061  0006F4  EC98  F005         	call	___ftmul	;wreg free
  3062  0006F8  C06B  F07A         	movff	?___ftmul,___fttol@f1
  3063  0006FC  C06C  F07B         	movff	?___ftmul+1,___fttol@f1+1
  3064  000700  C06D  F07C         	movff	?___ftmul+2,___fttol@f1+2
  3065  000704  EC2B  F006         	call	___fttol	;wreg free
  3066  000708  C07A  F0AA         	movff	?___fttol,check_battery_voltage_error@batt_voltage_mV
  3067  00070C  C07B  F0AB         	movff	?___fttol+1,check_battery_voltage_error@batt_voltage_mV+1
  3068  000710                     
  3069                           ;error_checks.c: 34: if (batt_voltage_mV < 8000;error_checks.c: 35: || batt_voltage_mV >
      +                           9500) {
  3070  000710  0E40               	movlw	64
  3071  000712  0100               	movlb	0	; () banked
  3072  000714  5DAA               	subwf	check_battery_voltage_error@batt_voltage_mV& (0+255),w,b
  3073  000716  0E1F               	movlw	31
  3074  000718  59AB               	subwfb	(check_battery_voltage_error@batt_voltage_mV+1)& (0+255),w,b
  3075  00071A  A0D8               	btfss	status,0,c
  3076  00071C  EF92  F003         	goto	u4171
  3077  000720  EF94  F003         	goto	u4170
  3078  000724                     u4171:
  3079  000724  EF9F  F003         	goto	l6221
  3080  000728                     u4170:
  3081  000728                     
  3082                           ; BSR set to: 0
  3083  000728  0E1D               	movlw	29
  3084  00072A  5DAA               	subwf	check_battery_voltage_error@batt_voltage_mV& (0+255),w,b
  3085  00072C  0E25               	movlw	37
  3086  00072E  59AB               	subwfb	(check_battery_voltage_error@batt_voltage_mV+1)& (0+255),w,b
  3087  000730  A0D8               	btfss	status,0,c
  3088  000732  EF9D  F003         	goto	u4181
  3089  000736  EF9F  F003         	goto	u4180
  3090  00073A                     u4181:
  3091  00073A  EFFB  F003         	goto	l6251
  3092  00073E                     u4180:
  3093  00073E                     l6221:
  3094                           
  3095                           ; BSR set to: 0
  3096                           ;error_checks.c: 37: uint32_t timestamp = millis();
  3097  00073E  ECF2  F00E         	call	_millis	;wreg free
  3098  000742  C060  F089         	movff	?_millis,check_battery_voltage_error@timestamp
  3099  000746  C061  F08A         	movff	?_millis+1,check_battery_voltage_error@timestamp+1
  3100  00074A  C062  F08B         	movff	?_millis+2,check_battery_voltage_error@timestamp+2
  3101  00074E  C063  F08C         	movff	?_millis+3,check_battery_voltage_error@timestamp+3
  3102  000752                     
  3103                           ;error_checks.c: 38: uint8_t batt_data[2] = {0};
  3104  000752  0E00               	movlw	0
  3105  000754  0100               	movlb	0	; () banked
  3106  000756  6F93               	movwf	(check_battery_voltage_error@batt_data+1)& (0+255),b
  3107  000758  0E00               	movlw	0
  3108  00075A  6F92               	movwf	check_battery_voltage_error@batt_data& (0+255),b
  3109  00075C                     
  3110                           ; BSR set to: 0
  3111                           ;error_checks.c: 39: batt_data[0] = (batt_voltage_mV >> 8) & 0xff;
  3112  00075C  51AB               	movf	(check_battery_voltage_error@batt_voltage_mV+1)& (0+255),w,b
  3113  00075E  6F92               	movwf	check_battery_voltage_error@batt_data& (0+255),b
  3114  000760                     
  3115                           ; BSR set to: 0
  3116                           ;error_checks.c: 40: batt_data[1] = (batt_voltage_mV >> 0) & 0xff;
  3117  000760  C0AA  F093         	movff	check_battery_voltage_error@batt_voltage_mV,check_battery_voltage_error@batt_data
      +                          +1
  3118  000764                     
  3119                           ; BSR set to: 0
  3120                           ;error_checks.c: 41: enum BOARD_STATUS error_code = batt_voltage_mV < 8000;error_checks.
      +                          c: 42: ? E_BATT_UNDER_VOLTAGE;error_checks.c: 43: : E_BATT_OVER_VOLTAGE;
  3121  000764  0E40               	movlw	64
  3122  000766  5DAA               	subwf	check_battery_voltage_error@batt_voltage_mV& (0+255),w,b
  3123  000768  0E1F               	movlw	31
  3124  00076A  59AB               	subwfb	(check_battery_voltage_error@batt_voltage_mV+1)& (0+255),w,b
  3125  00076C  A0D8               	btfss	status,0,c
  3126  00076E  EFBB  F003         	goto	u4191
  3127  000772  EFBD  F003         	goto	u4190
  3128  000776                     u4191:
  3129  000776  EFC3  F003         	goto	l6233
  3130  00077A                     u4190:
  3131  00077A                     
  3132                           ; BSR set to: 0
  3133  00077A  0E00               	movlw	0
  3134  00077C  6F91               	movwf	(_check_battery_voltage_error$2273+1)& (0+255),b
  3135  00077E  0E05               	movlw	5
  3136  000780  6F90               	movwf	_check_battery_voltage_error$2273& (0+255),b
  3137  000782  EFC7  F003         	goto	l6235
  3138  000786                     l6233:
  3139                           
  3140                           ; BSR set to: 0
  3141  000786  0E00               	movlw	0
  3142  000788  6F91               	movwf	(_check_battery_voltage_error$2273+1)& (0+255),b
  3143  00078A  0E04               	movlw	4
  3144  00078C  6F90               	movwf	_check_battery_voltage_error$2273& (0+255),b
  3145  00078E                     l6235:
  3146                           
  3147                           ; BSR set to: 0
  3148  00078E  C090  F08F         	movff	_check_battery_voltage_error$2273,check_battery_voltage_error@error_code
  3149  000792                     
  3150                           ; BSR set to: 0
  3151                           ;error_checks.c: 45: can_msg_t error_msg;;error_checks.c: 46: build_board_stat_msg(times
      +                          tamp, error_code, batt_data, 2, &error_msg);
  3152  000792  C089  F066         	movff	check_battery_voltage_error@timestamp,build_board_stat_msg@timestamp
  3153  000796  C08A  F067         	movff	check_battery_voltage_error@timestamp+1,build_board_stat_msg@timestamp+1
  3154  00079A  C08B  F068         	movff	check_battery_voltage_error@timestamp+2,build_board_stat_msg@timestamp+2
  3155  00079E  C08C  F069         	movff	check_battery_voltage_error@timestamp+3,build_board_stat_msg@timestamp+3
  3156  0007A2  C08F  F06A         	movff	check_battery_voltage_error@error_code,build_board_stat_msg@error_code
  3157  0007A6  0E92               	movlw	low check_battery_voltage_error@batt_data
  3158  0007A8  6F6B               	movwf	build_board_stat_msg@error_data& (0+255),b
  3159  0007AA  0E00               	movlw	high check_battery_voltage_error@batt_data
  3160  0007AC  6F6C               	movwf	(build_board_stat_msg@error_data+1)& (0+255),b
  3161  0007AE  0E02               	movlw	2
  3162  0007B0  6F6D               	movwf	build_board_stat_msg@error_data_len& (0+255),b
  3163  0007B2  0E94               	movlw	low check_battery_voltage_error@error_msg
  3164  0007B4  6F6E               	movwf	build_board_stat_msg@output& (0+255),b
  3165  0007B6  0E00               	movlw	high check_battery_voltage_error@error_msg
  3166  0007B8  6F6F               	movwf	(build_board_stat_msg@output+1)& (0+255),b
  3167  0007BA  ECCA  F007         	call	_build_board_stat_msg	;wreg free
  3168  0007BE                     
  3169                           ;error_checks.c: 47: txb_enqueue(&error_msg);
  3170  0007BE  0E94               	movlw	low check_battery_voltage_error@error_msg
  3171  0007C0  0100               	movlb	0	; () banked
  3172  0007C2  6F76               	movwf	txb_enqueue@msg& (0+255),b
  3173  0007C4  0E00               	movlw	high check_battery_voltage_error@error_msg
  3174  0007C6  6F77               	movwf	(txb_enqueue@msg+1)& (0+255),b
  3175  0007C8  ECD7  F00D         	call	_txb_enqueue	;wreg free
  3176  0007CC                     
  3177                           ;error_checks.c: 50: if (batt_voltage_mV < 7500) {
  3178  0007CC  0E4C               	movlw	76
  3179  0007CE  0100               	movlb	0	; () banked
  3180  0007D0  5DAA               	subwf	check_battery_voltage_error@batt_voltage_mV& (0+255),w,b
  3181  0007D2  0E1D               	movlw	29
  3182  0007D4  59AB               	subwfb	(check_battery_voltage_error@batt_voltage_mV+1)& (0+255),w,b
  3183  0007D6  B0D8               	btfsc	status,0,c
  3184  0007D8  EFF0  F003         	goto	u4201
  3185  0007DC  EFF2  F003         	goto	u4200
  3186  0007E0                     u4201:
  3187  0007E0  EFF6  F003         	goto	l6245
  3188  0007E4                     u4200:
  3189  0007E4                     
  3190                           ; BSR set to: 0
  3191                           ;error_checks.c: 52: battery_voltage_critical = 1;
  3192  0007E4  0E01               	movlw	1
  3193  0007E6  6FD9               	movwf	_battery_voltage_critical& (0+255),b
  3194                           
  3195                           ;error_checks.c: 53: } else {
  3196  0007E8  EFF8  F003         	goto	l6247
  3197  0007EC                     l6245:
  3198                           
  3199                           ; BSR set to: 0
  3200                           ;error_checks.c: 55: battery_voltage_critical = 0;
  3201  0007EC  0E00               	movlw	0
  3202  0007EE  6FD9               	movwf	_battery_voltage_critical& (0+255),b
  3203  0007F0                     l6247:
  3204                           
  3205                           ; BSR set to: 0
  3206                           ;error_checks.c: 56: };error_checks.c: 59: return 0;
  3207  0007F0  0E00               	movlw	0
  3208  0007F2  EF1D  F004         	goto	l858
  3209  0007F6                     l6251:
  3210                           
  3211                           ; BSR set to: 0
  3212                           ;error_checks.c: 60: };error_checks.c: 64: can_msg_t batt_msg;;error_checks.c: 65: build
      +                          _analog_data_msg(millis(), SENSOR_VENT_BATT, batt_voltage_mV, &batt_msg);
  3213  0007F6  ECF2  F00E         	call	_millis	;wreg free
  3214  0007FA  C060  F064         	movff	?_millis,build_analog_data_msg@timestamp
  3215  0007FE  C061  F065         	movff	?_millis+1,build_analog_data_msg@timestamp+1
  3216  000802  C062  F066         	movff	?_millis+2,build_analog_data_msg@timestamp+2
  3217  000806  C063  F067         	movff	?_millis+3,build_analog_data_msg@timestamp+3
  3218  00080A  0E05               	movlw	5
  3219  00080C  0100               	movlb	0	; () banked
  3220  00080E  6F68               	movwf	build_analog_data_msg@sensor_id& (0+255),b
  3221  000810  C0AA  F069         	movff	check_battery_voltage_error@batt_voltage_mV,build_analog_data_msg@sensor_data
  3222  000814  C0AB  F06A         	movff	check_battery_voltage_error@batt_voltage_mV+1,build_analog_data_msg@sensor_data+1
  3223  000818  0E9F               	movlw	low check_battery_voltage_error@batt_msg
  3224  00081A  6F6B               	movwf	build_analog_data_msg@output& (0+255),b
  3225  00081C  0E00               	movlw	high check_battery_voltage_error@batt_msg
  3226  00081E  6F6C               	movwf	(build_analog_data_msg@output+1)& (0+255),b
  3227  000820  EC99  F00B         	call	_build_analog_data_msg	;wreg free
  3228  000824                     
  3229                           ;error_checks.c: 66: txb_enqueue(&batt_msg);
  3230  000824  0E9F               	movlw	low check_battery_voltage_error@batt_msg
  3231  000826  0100               	movlb	0	; () banked
  3232  000828  6F76               	movwf	txb_enqueue@msg& (0+255),b
  3233  00082A  0E00               	movlw	high check_battery_voltage_error@batt_msg
  3234  00082C  6F77               	movwf	(txb_enqueue@msg+1)& (0+255),b
  3235  00082E  ECD7  F00D         	call	_txb_enqueue	;wreg free
  3236  000832                     
  3237                           ;error_checks.c: 69: battery_voltage_critical = 0;
  3238  000832  0E00               	movlw	0
  3239  000834  0100               	movlb	0	; () banked
  3240  000836  6FD9               	movwf	_battery_voltage_critical& (0+255),b
  3241  000838                     
  3242                           ; BSR set to: 0
  3243                           ;error_checks.c: 70: return 1;
  3244  000838  0E01               	movlw	1
  3245  00083A                     l858:
  3246                           
  3247                           ; BSR set to: 0
  3248  00083A  0012               	return		;funcret
  3249  00083C                     __end_of_check_battery_voltage_error:
  3250                           	callstack 0
  3251                           
  3252 ;; *************** function _txb_enqueue *****************
  3253 ;; Defined at:
  3254 ;;		line 23 in file "canlib/util/can_tx_buffer.c"
  3255 ;; Parameters:    Size  Location     Type
  3256 ;;  msg             2   22[BANK0 ] PTR const struct .
  3257 ;;		 -> vent_send_status@stat_msg(11), check_bus_current_error@error_msg(11), check_battery_voltage_error@batt_msg(11), 
      +check_battery_voltage_error@error_msg(11), 
  3258 ;;		 -> send_status_ok@board_stat_msg(11), main@error_msg(11), 
  3259 ;; Auto vars:     Size  Location     Type
  3260 ;;		None
  3261 ;; Return value:  Size  Location     Type
  3262 ;;                  1    wreg      unsigned char 
  3263 ;; Registers used:
  3264 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3265 ;; Tracked objects:
  3266 ;;		On entry : 0/0
  3267 ;;		On exit  : 0/0
  3268 ;;		Unchanged: 0/0
  3269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3270 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3273 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3274 ;;Total ram usage:        2 bytes
  3275 ;; Hardware stack levels used: 1
  3276 ;; Hardware stack levels required when called: 8
  3277 ;; This function calls:
  3278 ;;		_srb_is_full
  3279 ;;		_srb_push
  3280 ;; This function is called by:
  3281 ;;		_main
  3282 ;;		_send_status_ok
  3283 ;;		_check_battery_voltage_error
  3284 ;;		_check_bus_current_error
  3285 ;;		_vent_send_status
  3286 ;; This function uses a non-reentrant model
  3287 ;;
  3288                           
  3289                           	psect	text22
  3290  001BAE                     __ptext22:
  3291                           	callstack 0
  3292  001BAE                     _txb_enqueue:
  3293                           	callstack 21
  3294  001BAE                     
  3295                           ;can_tx_buffer.c: 24: if (srb_is_full(&buf)) {
  3296  001BAE  0EDB               	movlw	low _buf
  3297  001BB0  0100               	movlb	0	; () banked
  3298  001BB2  6F60               	movwf	srb_is_full@ctx& (0+255),b
  3299  001BB4  0E00               	movlw	high _buf
  3300  001BB6  6F61               	movwf	(srb_is_full@ctx+1)& (0+255),b
  3301  001BB8  ECB7  F00A         	call	_srb_is_full	;wreg free
  3302  001BBC  0900               	iorlw	0
  3303  001BBE  B4D8               	btfsc	status,2,c
  3304  001BC0  EFE4  F00D         	goto	u3981
  3305  001BC4  EFE6  F00D         	goto	u3980
  3306  001BC8                     u3981:
  3307  001BC8  EFE8  F00D         	goto	l5869
  3308  001BCC                     u3980:
  3309  001BCC  EFF3  F00D         	goto	l891
  3310  001BD0                     l5869:
  3311                           
  3312                           ;can_tx_buffer.c: 26: };can_tx_buffer.c: 27: srb_push(&buf, msg);
  3313  001BD0  0EDB               	movlw	low _buf
  3314  001BD2  0100               	movlb	0	; () banked
  3315  001BD4  6F6C               	movwf	srb_push@ctx& (0+255),b
  3316  001BD6  0E00               	movlw	high _buf
  3317  001BD8  6F6D               	movwf	(srb_push@ctx+1)& (0+255),b
  3318  001BDA  C076  F06E         	movff	txb_enqueue@msg,srb_push@element
  3319  001BDE  C077  F06F         	movff	txb_enqueue@msg+1,srb_push@element+1
  3320  001BE2  ECC0  F008         	call	_srb_push	;wreg free
  3321  001BE6                     l891:
  3322  001BE6  0012               	return		;funcret
  3323  001BE8                     __end_of_txb_enqueue:
  3324                           	callstack 0
  3325                           
  3326 ;; *************** function _srb_push *****************
  3327 ;; Defined at:
  3328 ;;		line 26 in file "canlib/util/safe_ring_buffer.c"
  3329 ;; Parameters:    Size  Location     Type
  3330 ;;  ctx             2   12[BANK0 ] PTR struct .
  3331 ;;		 -> buf(10), 
  3332 ;;  element         2   14[BANK0 ] PTR const void 
  3333 ;;		 -> vent_send_status@stat_msg(11), check_bus_current_error@error_msg(11), check_battery_voltage_error@batt_msg(11), 
      +check_battery_voltage_error@error_msg(11), 
  3334 ;;		 -> send_status_ok@board_stat_msg(11), main@error_msg(11), 
  3335 ;; Auto vars:     Size  Location     Type
  3336 ;;  offset          2   20[BANK0 ] unsigned int 
  3337 ;; Return value:  Size  Location     Type
  3338 ;;                  1    wreg      unsigned char 
  3339 ;; Registers used:
  3340 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3341 ;; Tracked objects:
  3342 ;;		On entry : 0/0
  3343 ;;		On exit  : 0/0
  3344 ;;		Unchanged: 0/0
  3345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3346 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3347 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3348 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3349 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3350 ;;Total ram usage:       10 bytes
  3351 ;; Hardware stack levels used: 1
  3352 ;; Hardware stack levels required when called: 7
  3353 ;; This function calls:
  3354 ;;		_get_offset_bytes
  3355 ;;		_memcpy
  3356 ;;		_srb_is_full
  3357 ;; This function is called by:
  3358 ;;		_txb_enqueue
  3359 ;; This function uses a non-reentrant model
  3360 ;;
  3361                           
  3362                           	psect	text23
  3363  001180                     __ptext23:
  3364                           	callstack 0
  3365  001180                     _srb_push:
  3366                           	callstack 21
  3367  001180                     
  3368                           ;safe_ring_buffer.c: 29: if (srb_is_full(ctx)) {
  3369  001180  C06C  F060         	movff	srb_push@ctx,srb_is_full@ctx
  3370  001184  C06D  F061         	movff	srb_push@ctx+1,srb_is_full@ctx+1
  3371  001188  ECB7  F00A         	call	_srb_is_full	;wreg free
  3372  00118C  0900               	iorlw	0
  3373  00118E  B4D8               	btfsc	status,2,c
  3374  001190  EFCC  F008         	goto	u3781
  3375  001194  EFCE  F008         	goto	u3780
  3376  001198                     u3781:
  3377  001198  EFD0  F008         	goto	l5739
  3378  00119C                     u3780:
  3379  00119C  EF31  F009         	goto	l911
  3380  0011A0                     l5739:
  3381                           
  3382                           ;safe_ring_buffer.c: 31: };safe_ring_buffer.c: 32: size_t offset = get_offset_bytes(ctx,
      +                           ctx->wr_idx);
  3383  0011A0  C06C  F066         	movff	srb_push@ctx,get_offset_bytes@ctx
  3384  0011A4  C06D  F067         	movff	srb_push@ctx+1,get_offset_bytes@ctx+1
  3385  0011A8  0100               	movlb	0	; () banked
  3386  0011AA  EE20 F008          	lfsr	2,8
  3387  0011AE  516C               	movf	srb_push@ctx& (0+255),w,b
  3388  0011B0  26D9               	addwf	fsr2l,f,c
  3389  0011B2  516D               	movf	(srb_push@ctx+1)& (0+255),w,b
  3390  0011B4  22DA               	addwfc	fsr2h,f,c
  3391  0011B6  006F FF78  F068    	movff	postinc2,get_offset_bytes@index
  3392  0011BC  006F FF74  F069    	movff	postdec2,get_offset_bytes@index+1
  3393  0011C2  EC18  F00C         	call	_get_offset_bytes	;wreg free
  3394  0011C6  C066  F074         	movff	?_get_offset_bytes,srb_push@offset
  3395  0011CA  C067  F075         	movff	?_get_offset_bytes+1,srb_push@offset+1
  3396  0011CE                     
  3397                           ;safe_ring_buffer.c: 33: memcpy(((uint8_t *) ctx->memory_pool) + offset, element, ctx->e
      +                          lement_size);
  3398  0011CE  0060  F1B3  FFD9   	movff	srb_push@ctx,fsr2l
  3399  0011D4  0060  F1B7  FFDA   	movff	srb_push@ctx+1,fsr2h
  3400  0011DA  006F FF78  F070    	movff	postinc2,??_srb_push
  3401  0011E0  006F FF74  F071    	movff	postdec2,??_srb_push+1
  3402  0011E6  0100               	movlb	0	; () banked
  3403  0011E8  5174               	movf	srb_push@offset& (0+255),w,b
  3404  0011EA  2570               	addwf	??_srb_push& (0+255),w,b
  3405  0011EC  6F60               	movwf	memcpy@d1& (0+255),b
  3406  0011EE  5175               	movf	(srb_push@offset+1)& (0+255),w,b
  3407  0011F0  2171               	addwfc	(??_srb_push+1)& (0+255),w,b
  3408  0011F2  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  3409  0011F4  C06E  F062         	movff	srb_push@element,memcpy@s1
  3410  0011F8  C06F  F063         	movff	srb_push@element+1,memcpy@s1+1
  3411  0011FC  EE20 F002          	lfsr	2,2
  3412  001200  516C               	movf	srb_push@ctx& (0+255),w,b
  3413  001202  26D9               	addwf	fsr2l,f,c
  3414  001204  516D               	movf	(srb_push@ctx+1)& (0+255),w,b
  3415  001206  22DA               	addwfc	fsr2h,f,c
  3416  001208  006F FF78  F064    	movff	postinc2,memcpy@n
  3417  00120E  006F FF74  F065    	movff	postdec2,memcpy@n+1
  3418  001214  EC47  F00C         	call	_memcpy	;wreg free
  3419  001218                     
  3420                           ;safe_ring_buffer.c: 34: if ( ++(ctx->wr_idx) >= ctx->max_elements) {
  3421  001218  0100               	movlb	0	; () banked
  3422  00121A  EE20 F004          	lfsr	2,4
  3423  00121E  516C               	movf	srb_push@ctx& (0+255),w,b
  3424  001220  26D9               	addwf	fsr2l,f,c
  3425  001222  516D               	movf	(srb_push@ctx+1)& (0+255),w,b
  3426  001224  22DA               	addwfc	fsr2h,f,c
  3427  001226  EE10 F008          	lfsr	1,8
  3428  00122A  516C               	movf	srb_push@ctx& (0+255),w,b
  3429  00122C  26E1               	addwf	fsr1l,f,c
  3430  00122E  516D               	movf	(srb_push@ctx+1)& (0+255),w,b
  3431  001230  22E2               	addwfc	fsr1h,f,c
  3432  001232  2AE6               	incf	postinc1,f,c
  3433  001234  0E00               	movlw	0
  3434  001236  22E5               	addwfc	postdec1,f,c
  3435  001238  50DE               	movf	postinc2,w,c
  3436  00123A  5CE6               	subwf	postinc1,w,c
  3437  00123C  50DE               	movf	postinc2,w,c
  3438  00123E  58E6               	subwfb	postinc1,w,c
  3439  001240  A0D8               	btfss	status,0,c
  3440  001242  EF25  F009         	goto	u3791
  3441  001246  EF27  F009         	goto	u3790
  3442  00124A                     u3791:
  3443  00124A  EF31  F009         	goto	l911
  3444  00124E                     u3790:
  3445  00124E                     
  3446                           ; BSR set to: 0
  3447                           ;safe_ring_buffer.c: 35: ctx->wr_idx = 0;
  3448  00124E  EE20 F008          	lfsr	2,8
  3449  001252  516C               	movf	srb_push@ctx& (0+255),w,b
  3450  001254  26D9               	addwf	fsr2l,f,c
  3451  001256  516D               	movf	(srb_push@ctx+1)& (0+255),w,b
  3452  001258  22DA               	addwfc	fsr2h,f,c
  3453  00125A  0E00               	movlw	0
  3454  00125C  6EDE               	movwf	postinc2,c
  3455  00125E  0E00               	movlw	0
  3456  001260  6EDD               	movwf	postdec2,c
  3457  001262                     l911:
  3458  001262  0012               	return		;funcret
  3459  001264                     __end_of_srb_push:
  3460                           	callstack 0
  3461                           
  3462 ;; *************** function _srb_is_full *****************
  3463 ;; Defined at:
  3464 ;;		line 40 in file "canlib/util/safe_ring_buffer.c"
  3465 ;; Parameters:    Size  Location     Type
  3466 ;;  ctx             2    0[BANK0 ] PTR const struct .
  3467 ;;		 -> buf(10), 
  3468 ;; Auto vars:     Size  Location     Type
  3469 ;;		None
  3470 ;; Return value:  Size  Location     Type
  3471 ;;                  1    wreg      unsigned char 
  3472 ;; Registers used:
  3473 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3474 ;; Tracked objects:
  3475 ;;		On entry : 0/0
  3476 ;;		On exit  : 0/0
  3477 ;;		Unchanged: 0/0
  3478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3479 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3481 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3482 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3483 ;;Total ram usage:        6 bytes
  3484 ;; Hardware stack levels used: 1
  3485 ;; Hardware stack levels required when called: 5
  3486 ;; This function calls:
  3487 ;;		Nothing
  3488 ;; This function is called by:
  3489 ;;		_txb_enqueue
  3490 ;;		_srb_push
  3491 ;; This function uses a non-reentrant model
  3492 ;;
  3493                           
  3494                           	psect	text24
  3495  00156E                     __ptext24:
  3496                           	callstack 0
  3497  00156E                     _srb_is_full:
  3498                           	callstack 22
  3499  00156E                     
  3500                           ;safe_ring_buffer.c: 42: if ((ctx->wr_idx + 1 == ctx->rd_idx) || (ctx->wr_idx + 1 == ctx
      +                          ->max_elements && ctx->rd_idx == 0)) {
  3501  00156E  0100               	movlb	0	; () banked
  3502  001570  EE20 F006          	lfsr	2,6
  3503  001574  5160               	movf	srb_is_full@ctx& (0+255),w,b
  3504  001576  26D9               	addwf	fsr2l,f,c
  3505  001578  5161               	movf	(srb_is_full@ctx+1)& (0+255),w,b
  3506  00157A  22DA               	addwfc	fsr2h,f,c
  3507  00157C  EE10 F008          	lfsr	1,8
  3508  001580  5160               	movf	srb_is_full@ctx& (0+255),w,b
  3509  001582  26E1               	addwf	fsr1l,f,c
  3510  001584  5161               	movf	(srb_is_full@ctx+1)& (0+255),w,b
  3511  001586  22E2               	addwfc	fsr1h,f,c
  3512  001588  006F FF98  F064    	movff	postinc1,??_srb_is_full+2
  3513  00158E  006F FF94  F065    	movff	postdec1,??_srb_is_full+3
  3514  001594  0E01               	movlw	1
  3515  001596  2764               	addwf	(??_srb_is_full+2)& (0+255),f,b
  3516  001598  0E00               	movlw	0
  3517  00159A  2365               	addwfc	(??_srb_is_full+3)& (0+255),f,b
  3518  00159C  50DE               	movf	postinc2,w,c
  3519  00159E  1964               	xorwf	(??_srb_is_full+2)& (0+255),w,b
  3520  0015A0  E109               	bnz	u3740
  3521  0015A2  50DE               	movf	postinc2,w,c
  3522  0015A4  1965               	xorwf	(??_srb_is_full+3)& (0+255),w,b
  3523  0015A6  B4D8               	btfsc	status,2,c
  3524  0015A8  EFD8  F00A         	goto	u3741
  3525  0015AC  EFDA  F00A         	goto	u3740
  3526  0015B0                     u3741:
  3527  0015B0  EF0B  F00B         	goto	l5711
  3528  0015B4                     u3740:
  3529  0015B4                     
  3530                           ; BSR set to: 0
  3531  0015B4  EE20 F004          	lfsr	2,4
  3532  0015B8  5160               	movf	srb_is_full@ctx& (0+255),w,b
  3533  0015BA  26D9               	addwf	fsr2l,f,c
  3534  0015BC  5161               	movf	(srb_is_full@ctx+1)& (0+255),w,b
  3535  0015BE  22DA               	addwfc	fsr2h,f,c
  3536  0015C0  EE10 F008          	lfsr	1,8
  3537  0015C4  5160               	movf	srb_is_full@ctx& (0+255),w,b
  3538  0015C6  26E1               	addwf	fsr1l,f,c
  3539  0015C8  5161               	movf	(srb_is_full@ctx+1)& (0+255),w,b
  3540  0015CA  22E2               	addwfc	fsr1h,f,c
  3541  0015CC  006F FF98  F064    	movff	postinc1,??_srb_is_full+2
  3542  0015D2  006F FF94  F065    	movff	postdec1,??_srb_is_full+3
  3543  0015D8  0E01               	movlw	1
  3544  0015DA  2764               	addwf	(??_srb_is_full+2)& (0+255),f,b
  3545  0015DC  0E00               	movlw	0
  3546  0015DE  2365               	addwfc	(??_srb_is_full+3)& (0+255),f,b
  3547  0015E0  50DE               	movf	postinc2,w,c
  3548  0015E2  1964               	xorwf	(??_srb_is_full+2)& (0+255),w,b
  3549  0015E4  E107               	bnz	u3751
  3550  0015E6  50DE               	movf	postinc2,w,c
  3551  0015E8  1965               	xorwf	(??_srb_is_full+3)& (0+255),w,b
  3552  0015EA  A4D8               	btfss	status,2,c
  3553  0015EC  EFFA  F00A         	goto	u3751
  3554  0015F0  EFFC  F00A         	goto	u3750
  3555  0015F4                     u3751:
  3556  0015F4  EF0E  F00B         	goto	l5717
  3557  0015F8                     u3750:
  3558  0015F8                     
  3559                           ; BSR set to: 0
  3560  0015F8  EE20 F006          	lfsr	2,6
  3561  0015FC  5160               	movf	srb_is_full@ctx& (0+255),w,b
  3562  0015FE  26D9               	addwf	fsr2l,f,c
  3563  001600  5161               	movf	(srb_is_full@ctx+1)& (0+255),w,b
  3564  001602  22DA               	addwfc	fsr2h,f,c
  3565  001604  50DE               	movf	postinc2,w,c
  3566  001606  10DE               	iorwf	postinc2,w,c
  3567  001608  A4D8               	btfss	status,2,c
  3568  00160A  EF09  F00B         	goto	u3761
  3569  00160E  EF0B  F00B         	goto	u3760
  3570  001612                     u3761:
  3571  001612  EF0E  F00B         	goto	l5717
  3572  001616                     u3760:
  3573  001616                     l5711:
  3574                           
  3575                           ; BSR set to: 0
  3576                           ;safe_ring_buffer.c: 43: return 1;
  3577  001616  0E01               	movlw	1
  3578  001618  EF0F  F00B         	goto	l918
  3579  00161C                     l5717:
  3580                           
  3581                           ; BSR set to: 0
  3582                           ;safe_ring_buffer.c: 45: return 0;
  3583  00161C  0E00               	movlw	0
  3584  00161E                     l918:
  3585                           
  3586                           ; BSR set to: 0
  3587  00161E  0012               	return		;funcret
  3588  001620                     __end_of_srb_is_full:
  3589                           	callstack 0
  3590                           
  3591 ;; *************** function _memcpy *****************
  3592 ;; Defined at:
  3593 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\memcpy.c"
  3594 ;; Parameters:    Size  Location     Type
  3595 ;;  d1              2    0[BANK0 ] PTR void 
  3596 ;;		 -> txb_heartbeat@msg_sent(11), can_handle_interrupt@rcvd_msg_2164(11), can_handle_interrupt@rcvd_msg(11), TXB0D0(1)
      +, 
  3597 ;;		 -> tx_pool(100), 
  3598 ;;  s1              2    2[BANK0 ] PTR const void 
  3599 ;;		 -> vent_send_status@stat_msg(11), txb_heartbeat@msg_sent(11), check_bus_current_error@error_msg(11), check_battery_
      +voltage_error@batt_msg(11), 
  3600 ;;		 -> check_battery_voltage_error@error_msg(11), RXB1D0(1), RXB0D0(1), send_status_ok@board_stat_msg(11), 
  3601 ;;		 -> main@error_msg(11), tx_pool(100), 
  3602 ;;  n               2    4[BANK0 ] unsigned int 
  3603 ;; Auto vars:     Size  Location     Type
  3604 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  3605 ;;		 -> vent_send_status@stat_msg(11), txb_heartbeat@msg_sent(11), check_bus_current_error@error_msg(11), check_battery_
      +voltage_error@batt_msg(11), 
  3606 ;;		 -> check_battery_voltage_error@error_msg(11), RXB1D0(1), RXB0D0(1), send_status_ok@board_stat_msg(11), 
  3607 ;;		 -> main@error_msg(11), tx_pool(100), 
  3608 ;;  d               2    7[BANK0 ] PTR unsigned char 
  3609 ;;		 -> txb_heartbeat@msg_sent(11), can_handle_interrupt@rcvd_msg_2164(11), can_handle_interrupt@rcvd_msg(11), TXB0D0(1)
      +, 
  3610 ;;		 -> tx_pool(100), 
  3611 ;;  tmp             1    6[BANK0 ] unsigned char 
  3612 ;; Return value:  Size  Location     Type
  3613 ;;                  2    0[BANK0 ] PTR void 
  3614 ;; Registers used:
  3615 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3616 ;; Tracked objects:
  3617 ;;		On entry : 0/0
  3618 ;;		On exit  : 0/0
  3619 ;;		Unchanged: 0/0
  3620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3621 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3622 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3624 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3625 ;;Total ram usage:       11 bytes
  3626 ;; Hardware stack levels used: 1
  3627 ;; Hardware stack levels required when called: 5
  3628 ;; This function calls:
  3629 ;;		Nothing
  3630 ;; This function is called by:
  3631 ;;		_can_send
  3632 ;;		_srb_push
  3633 ;;		_srb_pop
  3634 ;;		_srb_peek
  3635 ;; This function uses a non-reentrant model
  3636 ;;
  3637                           
  3638                           	psect	text25
  3639  00188E                     __ptext25:
  3640                           	callstack 0
  3641  00188E                     _memcpy:
  3642                           	callstack 22
  3643  00188E  C062  F069         	movff	memcpy@s1,memcpy@s
  3644  001892  C063  F06A         	movff	memcpy@s1+1,memcpy@s+1
  3645  001896  C060  F067         	movff	memcpy@d1,memcpy@d
  3646  00189A  C061  F068         	movff	memcpy@d1+1,memcpy@d+1
  3647  00189E  EF66  F00C         	goto	l5703
  3648  0018A2                     l5695:
  3649                           
  3650                           ; BSR set to: 0
  3651  0018A2  0060  F1A7  FFD9   	movff	memcpy@s,fsr2l
  3652  0018A8  0060  F1AB  FFDA   	movff	memcpy@s+1,fsr2h
  3653  0018AE  50DF               	movf	indf2,w,c
  3654  0018B0  6F66               	movwf	memcpy@tmp& (0+255),b
  3655  0018B2                     
  3656                           ; BSR set to: 0
  3657  0018B2  4B69               	infsnz	memcpy@s& (0+255),f,b
  3658  0018B4  2B6A               	incf	(memcpy@s+1)& (0+255),f,b
  3659  0018B6                     
  3660                           ; BSR set to: 0
  3661  0018B6  0060  F19F  FFD9   	movff	memcpy@d,fsr2l
  3662  0018BC  0060  F1A3  FFDA   	movff	memcpy@d+1,fsr2h
  3663  0018C2  0060  F19B  FFDF   	movff	memcpy@tmp,indf2
  3664  0018C8                     
  3665                           ; BSR set to: 0
  3666  0018C8  4B67               	infsnz	memcpy@d& (0+255),f,b
  3667  0018CA  2B68               	incf	(memcpy@d+1)& (0+255),f,b
  3668  0018CC                     l5703:
  3669  0018CC  0100               	movlb	0	; () banked
  3670  0018CE  0764               	decf	memcpy@n& (0+255),f,b
  3671  0018D0  A0D8               	btfss	status,0,c
  3672  0018D2  0765               	decf	(memcpy@n+1)& (0+255),f,b
  3673  0018D4  2964               	incf	memcpy@n& (0+255),w,b
  3674  0018D6  E106               	bnz	u3731
  3675  0018D8  2965               	incf	(memcpy@n+1)& (0+255),w,b
  3676  0018DA  A4D8               	btfss	status,2,c
  3677  0018DC  EF72  F00C         	goto	u3731
  3678  0018E0  EF74  F00C         	goto	u3730
  3679  0018E4                     u3731:
  3680  0018E4  EF51  F00C         	goto	l5695
  3681  0018E8                     u3730:
  3682  0018E8                     
  3683                           ; BSR set to: 0
  3684  0018E8  0012               	return		;funcret
  3685  0018EA                     __end_of_memcpy:
  3686                           	callstack 0
  3687                           
  3688 ;; *************** function _get_offset_bytes *****************
  3689 ;; Defined at:
  3690 ;;		line 5 in file "canlib/util/safe_ring_buffer.c"
  3691 ;; Parameters:    Size  Location     Type
  3692 ;;  ctx             2    6[BANK0 ] PTR const struct .
  3693 ;;		 -> buf(10), 
  3694 ;;  index           2    8[BANK0 ] unsigned int 
  3695 ;; Auto vars:     Size  Location     Type
  3696 ;;		None
  3697 ;; Return value:  Size  Location     Type
  3698 ;;                  2    6[BANK0 ] unsigned int 
  3699 ;; Registers used:
  3700 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3701 ;; Tracked objects:
  3702 ;;		On entry : 0/0
  3703 ;;		On exit  : 0/0
  3704 ;;		Unchanged: 0/0
  3705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3706 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3708 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3709 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3710 ;;Total ram usage:        6 bytes
  3711 ;; Hardware stack levels used: 1
  3712 ;; Hardware stack levels required when called: 6
  3713 ;; This function calls:
  3714 ;;		___wmul
  3715 ;; This function is called by:
  3716 ;;		_srb_push
  3717 ;;		_srb_pop
  3718 ;;		_srb_peek
  3719 ;; This function uses a non-reentrant model
  3720 ;;
  3721                           
  3722                           	psect	text26
  3723  001830                     __ptext26:
  3724                           	callstack 0
  3725  001830                     _get_offset_bytes:
  3726                           	callstack 21
  3727  001830                     
  3728                           ;safe_ring_buffer.c: 8: if (index >= ctx->max_elements) {
  3729  001830  0100               	movlb	0	; () banked
  3730  001832  EE20 F004          	lfsr	2,4
  3731  001836  5166               	movf	get_offset_bytes@ctx& (0+255),w,b
  3732  001838  26D9               	addwf	fsr2l,f,c
  3733  00183A  5167               	movf	(get_offset_bytes@ctx+1)& (0+255),w,b
  3734  00183C  22DA               	addwfc	fsr2h,f,c
  3735  00183E  50DE               	movf	postinc2,w,c
  3736  001840  5D68               	subwf	get_offset_bytes@index& (0+255),w,b
  3737  001842  50DE               	movf	postinc2,w,c
  3738  001844  5969               	subwfb	(get_offset_bytes@index+1)& (0+255),w,b
  3739  001846  A0D8               	btfss	status,0,c
  3740  001848  EF28  F00C         	goto	u3771
  3741  00184C  EF2A  F00C         	goto	u3770
  3742  001850                     u3771:
  3743  001850  EF30  F00C         	goto	l5727
  3744  001854                     u3770:
  3745  001854                     
  3746                           ; BSR set to: 0
  3747                           ;safe_ring_buffer.c: 9: return 0;
  3748  001854  0E00               	movlw	0
  3749  001856  6F67               	movwf	(?_get_offset_bytes+1)& (0+255),b
  3750  001858  0E00               	movlw	0
  3751  00185A  6F66               	movwf	?_get_offset_bytes& (0+255),b
  3752  00185C  EF46  F00C         	goto	l904
  3753  001860                     l5727:
  3754                           
  3755                           ; BSR set to: 0
  3756                           ;safe_ring_buffer.c: 10: };safe_ring_buffer.c: 11: return index * (ctx->element_size);
  3757  001860  EE20 F002          	lfsr	2,2
  3758  001864  5166               	movf	get_offset_bytes@ctx& (0+255),w,b
  3759  001866  26D9               	addwf	fsr2l,f,c
  3760  001868  5167               	movf	(get_offset_bytes@ctx+1)& (0+255),w,b
  3761  00186A  22DA               	addwfc	fsr2h,f,c
  3762  00186C  006F FF78  F060    	movff	postinc2,___wmul@multiplier
  3763  001872  006F FF74  F061    	movff	postdec2,___wmul@multiplier+1
  3764  001878  C068  F062         	movff	get_offset_bytes@index,___wmul@multiplicand
  3765  00187C  C069  F063         	movff	get_offset_bytes@index+1,___wmul@multiplicand+1
  3766  001880  EC2D  F00E         	call	___wmul	;wreg free
  3767  001884  C060  F066         	movff	?___wmul,?_get_offset_bytes
  3768  001888  C061  F067         	movff	?___wmul+1,?_get_offset_bytes+1
  3769  00188C                     l904:
  3770  00188C  0012               	return		;funcret
  3771  00188E                     __end_of_get_offset_bytes:
  3772                           	callstack 0
  3773                           
  3774 ;; *************** function ___wmul *****************
  3775 ;; Defined at:
  3776 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  3777 ;; Parameters:    Size  Location     Type
  3778 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3779 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3780 ;; Auto vars:     Size  Location     Type
  3781 ;;  product         2    4[BANK0 ] unsigned int 
  3782 ;; Return value:  Size  Location     Type
  3783 ;;                  2    0[BANK0 ] unsigned int 
  3784 ;; Registers used:
  3785 ;;		wreg, status,2, status,0, prodl, prodh
  3786 ;; Tracked objects:
  3787 ;;		On entry : 0/0
  3788 ;;		On exit  : 0/0
  3789 ;;		Unchanged: 0/0
  3790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3791 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3792 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3794 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3795 ;;Total ram usage:        6 bytes
  3796 ;; Hardware stack levels used: 1
  3797 ;; Hardware stack levels required when called: 5
  3798 ;; This function calls:
  3799 ;;		Nothing
  3800 ;; This function is called by:
  3801 ;;		_get_offset_bytes
  3802 ;; This function uses a non-reentrant model
  3803 ;;
  3804                           
  3805                           	psect	text27
  3806  001C5A                     __ptext27:
  3807                           	callstack 0
  3808  001C5A                     ___wmul:
  3809                           	callstack 21
  3810  001C5A  0100               	movlb	0	; () banked
  3811  001C5C  5160               	movf	___wmul@multiplier& (0+255),w,b
  3812  001C5E  0362               	mulwf	___wmul@multiplicand& (0+255),b
  3813  001C60  006F FFCC  F064    	movff	prodl,___wmul@product
  3814  001C66  006F FFD0  F065    	movff	prodh,___wmul@product+1
  3815  001C6C  5160               	movf	___wmul@multiplier& (0+255),w,b
  3816  001C6E  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  3817  001C70  50F3               	movf	243,w,c
  3818  001C72  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  3819  001C74  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  3820  001C76  0362               	mulwf	___wmul@multiplicand& (0+255),b
  3821  001C78  50F3               	movf	243,w,c
  3822  001C7A  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  3823  001C7C                     
  3824                           ; BSR set to: 0
  3825  001C7C  C064  F060         	movff	___wmul@product,?___wmul
  3826  001C80  C065  F061         	movff	___wmul@product+1,?___wmul+1
  3827  001C84                     
  3828                           ; BSR set to: 0
  3829  001C84  0012               	return		;funcret
  3830  001C86                     __end_of___wmul:
  3831                           	callstack 0
  3832                           
  3833 ;; *************** function _millis *****************
  3834 ;; Defined at:
  3835 ;;		line 24 in file "timer.c"
  3836 ;; Parameters:    Size  Location     Type
  3837 ;;		None
  3838 ;; Auto vars:     Size  Location     Type
  3839 ;;		None
  3840 ;; Return value:  Size  Location     Type
  3841 ;;                  4    0[BANK0 ] unsigned long 
  3842 ;; Registers used:
  3843 ;;		None
  3844 ;; Tracked objects:
  3845 ;;		On entry : 0/0
  3846 ;;		On exit  : 0/0
  3847 ;;		Unchanged: 0/0
  3848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3849 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3852 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3853 ;;Total ram usage:        4 bytes
  3854 ;; Hardware stack levels used: 1
  3855 ;; Hardware stack levels required when called: 5
  3856 ;; This function calls:
  3857 ;;		Nothing
  3858 ;; This function is called by:
  3859 ;;		_main
  3860 ;;		_send_status_ok
  3861 ;;		_check_battery_voltage_error
  3862 ;;		_check_bus_current_error
  3863 ;;		_vent_send_status
  3864 ;; This function uses a non-reentrant model
  3865 ;;
  3866                           
  3867                           	psect	text28
  3868  001DE4                     __ptext28:
  3869                           	callstack 0
  3870  001DE4                     _millis:
  3871                           	callstack 24
  3872  001DE4                     
  3873                           ;timer.c: 25: return millis_counter;
  3874  001DE4  C02D  F060         	movff	_millis_counter,?_millis
  3875  001DE8  C02E  F061         	movff	_millis_counter+1,?_millis+1
  3876  001DEC  C02F  F062         	movff	_millis_counter+2,?_millis+2
  3877  001DF0  C030  F063         	movff	_millis_counter+3,?_millis+3
  3878  001DF4  0012               	return		;funcret
  3879  001DF6                     __end_of_millis:
  3880                           	callstack 0
  3881                           
  3882 ;; *************** function _build_board_stat_msg *****************
  3883 ;; Defined at:
  3884 ;;		line 175 in file "canlib/can_common.c"
  3885 ;; Parameters:    Size  Location     Type
  3886 ;;  timestamp       4    6[BANK0 ] unsigned long 
  3887 ;;  error_code      1   10[BANK0 ] enum E54
  3888 ;;  error_data      2   11[BANK0 ] PTR unsigned char 
  3889 ;;		 -> check_bus_current_error@curr_data(2), check_battery_voltage_error@batt_data(2), NULL(0), 
  3890 ;;  error_data_l    1   13[BANK0 ] unsigned char 
  3891 ;;  output          2   14[BANK0 ] PTR struct .
  3892 ;;		 -> check_bus_current_error@error_msg(11), check_battery_voltage_error@error_msg(11), send_status_ok@board_stat_msg(
      +11), main@error_msg(11), 
  3893 ;; Auto vars:     Size  Location     Type
  3894 ;;  i               2   19[BANK0 ] int 
  3895 ;; Return value:  Size  Location     Type
  3896 ;;                  1    wreg      unsigned char 
  3897 ;; Registers used:
  3898 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3899 ;; Tracked objects:
  3900 ;;		On entry : 0/0
  3901 ;;		On exit  : 0/0
  3902 ;;		Unchanged: 0/0
  3903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3904 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3905 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3906 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3907 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3908 ;;Total ram usage:       15 bytes
  3909 ;; Hardware stack levels used: 1
  3910 ;; Hardware stack levels required when called: 6
  3911 ;; This function calls:
  3912 ;;		_write_timestamp_3bytes
  3913 ;; This function is called by:
  3914 ;;		_main
  3915 ;;		_send_status_ok
  3916 ;;		_check_battery_voltage_error
  3917 ;;		_check_bus_current_error
  3918 ;; This function uses a non-reentrant model
  3919 ;;
  3920                           
  3921                           	psect	text29
  3922  000F94                     __ptext29:
  3923                           	callstack 0
  3924  000F94                     _build_board_stat_msg:
  3925                           	callstack 23
  3926  000F94                     
  3927                           ;can_common.c: 181: if (error_data_len > 0 && !error_data) { return 0; }
  3928  000F94  0100               	movlb	0	; () banked
  3929  000F96  516D               	movf	build_board_stat_msg@error_data_len& (0+255),w,b
  3930  000F98  B4D8               	btfsc	status,2,c
  3931  000F9A  EFD1  F007         	goto	u3931
  3932  000F9E  EFD3  F007         	goto	u3930
  3933  000FA2                     u3931:
  3934  000FA2  EFDE  F007         	goto	l5839
  3935  000FA6                     u3930:
  3936  000FA6                     
  3937                           ; BSR set to: 0
  3938  000FA6  516B               	movf	build_board_stat_msg@error_data& (0+255),w,b
  3939  000FA8  116C               	iorwf	(build_board_stat_msg@error_data+1)& (0+255),w,b
  3940  000FAA  A4D8               	btfss	status,2,c
  3941  000FAC  EFDA  F007         	goto	u3941
  3942  000FB0  EFDC  F007         	goto	u3940
  3943  000FB4                     u3941:
  3944  000FB4  EFDE  F007         	goto	l5839
  3945  000FB8                     u3940:
  3946  000FB8  EF4D  F008         	goto	l466
  3947  000FBC                     l5839:
  3948                           
  3949                           ; BSR set to: 0
  3950                           ;can_common.c: 182: if (!output) { return 0; }
  3951  000FBC  516E               	movf	build_board_stat_msg@output& (0+255),w,b
  3952  000FBE  116F               	iorwf	(build_board_stat_msg@output+1)& (0+255),w,b
  3953  000FC0  A4D8               	btfss	status,2,c
  3954  000FC2  EFE5  F007         	goto	u3951
  3955  000FC6  EFE7  F007         	goto	u3950
  3956  000FCA                     u3951:
  3957  000FCA  EFE9  F007         	goto	l5843
  3958  000FCE                     u3950:
  3959  000FCE  EF4D  F008         	goto	l466
  3960  000FD2                     l5843:
  3961                           
  3962                           ; BSR set to: 0
  3963                           ;can_common.c: 183: if (error_data_len > 4) { return 0; }
  3964  000FD2  0E04               	movlw	4
  3965  000FD4  656D               	cpfsgt	build_board_stat_msg@error_data_len& (0+255),b
  3966  000FD6  EFEF  F007         	goto	u3961
  3967  000FDA  EFF1  F007         	goto	u3960
  3968  000FDE                     u3961:
  3969  000FDE  EFF3  F007         	goto	l5847
  3970  000FE2                     u3960:
  3971  000FE2  EF4D  F008         	goto	l466
  3972  000FE6                     l5847:
  3973                           
  3974                           ; BSR set to: 0
  3975                           ;can_common.c: 185: output->sid = 0x520 | 0x0B;
  3976  000FE6  0060  F1BB  FFD9   	movff	build_board_stat_msg@output,fsr2l
  3977  000FEC  0060  F1BF  FFDA   	movff	build_board_stat_msg@output+1,fsr2h
  3978  000FF2  0E2B               	movlw	43
  3979  000FF4  6EDE               	movwf	postinc2,c
  3980  000FF6  0E05               	movlw	5
  3981  000FF8  6EDD               	movwf	postdec2,c
  3982  000FFA                     
  3983                           ; BSR set to: 0
  3984                           ;can_common.c: 186: write_timestamp_3bytes(timestamp, output);
  3985  000FFA  C066  F060         	movff	build_board_stat_msg@timestamp,write_timestamp_3bytes@timestamp
  3986  000FFE  C067  F061         	movff	build_board_stat_msg@timestamp+1,write_timestamp_3bytes@timestamp+1
  3987  001002  C068  F062         	movff	build_board_stat_msg@timestamp+2,write_timestamp_3bytes@timestamp+2
  3988  001006  C069  F063         	movff	build_board_stat_msg@timestamp+3,write_timestamp_3bytes@timestamp+3
  3989  00100A  C06E  F064         	movff	build_board_stat_msg@output,write_timestamp_3bytes@output
  3990  00100E  C06F  F065         	movff	build_board_stat_msg@output+1,write_timestamp_3bytes@output+1
  3991  001012  ECF4  F00D         	call	_write_timestamp_3bytes	;wreg free
  3992  001016                     
  3993                           ;can_common.c: 188: output->data[3] = (uint8_t) error_code;
  3994  001016  0100               	movlb	0	; () banked
  3995  001018  EE20 F006          	lfsr	2,6
  3996  00101C  516E               	movf	build_board_stat_msg@output& (0+255),w,b
  3997  00101E  26D9               	addwf	fsr2l,f,c
  3998  001020  516F               	movf	(build_board_stat_msg@output+1)& (0+255),w,b
  3999  001022  22DA               	addwfc	fsr2h,f,c
  4000  001024  0060  F1AB  FFDF   	movff	build_board_stat_msg@error_code,indf2
  4001  00102A                     
  4002                           ; BSR set to: 0
  4003                           ;can_common.c: 189: for (int i = 0; i < error_data_len; ++i) {
  4004  00102A  0E00               	movlw	0
  4005  00102C  6F74               	movwf	(build_board_stat_msg@i+1)& (0+255),b
  4006  00102E  0E00               	movlw	0
  4007  001030  6F73               	movwf	build_board_stat_msg@i& (0+255),b
  4008  001032  EF32  F008         	goto	l5859
  4009  001036                     l5855:
  4010                           
  4011                           ; BSR set to: 0
  4012                           ;can_common.c: 191: output->data[4 + i] = error_data[i];
  4013  001036  5173               	movf	build_board_stat_msg@i& (0+255),w,b
  4014  001038  256B               	addwf	build_board_stat_msg@error_data& (0+255),w,b
  4015  00103A  6ED9               	movwf	fsr2l,c
  4016  00103C  5174               	movf	(build_board_stat_msg@i+1)& (0+255),w,b
  4017  00103E  216C               	addwfc	(build_board_stat_msg@error_data+1)& (0+255),w,b
  4018  001040  6EDA               	movwf	fsr2h,c
  4019  001042  5173               	movf	build_board_stat_msg@i& (0+255),w,b
  4020  001044  256E               	addwf	build_board_stat_msg@output& (0+255),w,b
  4021  001046  6F70               	movwf	??_build_board_stat_msg& (0+255),b
  4022  001048  5174               	movf	(build_board_stat_msg@i+1)& (0+255),w,b
  4023  00104A  216F               	addwfc	(build_board_stat_msg@output+1)& (0+255),w,b
  4024  00104C  6F71               	movwf	(??_build_board_stat_msg+1)& (0+255),b
  4025  00104E  0E07               	movlw	7
  4026  001050  2570               	addwf	??_build_board_stat_msg& (0+255),w,b
  4027  001052  6EE1               	movwf	fsr1l,c
  4028  001054  0E00               	movlw	0
  4029  001056  2171               	addwfc	(??_build_board_stat_msg+1)& (0+255),w,b
  4030  001058  6EE2               	movwf	fsr1h,c
  4031  00105A  006F FF7F FFE7     	movff	indf2,indf1
  4032  001060                     
  4033                           ; BSR set to: 0
  4034  001060  4B73               	infsnz	build_board_stat_msg@i& (0+255),f,b
  4035  001062  2B74               	incf	(build_board_stat_msg@i+1)& (0+255),f,b
  4036  001064                     l5859:
  4037                           
  4038                           ; BSR set to: 0
  4039  001064  516D               	movf	build_board_stat_msg@error_data_len& (0+255),w,b
  4040  001066  6F70               	movwf	??_build_board_stat_msg& (0+255),b
  4041  001068  6B71               	clrf	(??_build_board_stat_msg+1)& (0+255),b
  4042  00106A  5170               	movf	??_build_board_stat_msg& (0+255),w,b
  4043  00106C  5D73               	subwf	build_board_stat_msg@i& (0+255),w,b
  4044  00106E  5174               	movf	(build_board_stat_msg@i+1)& (0+255),w,b
  4045  001070  0A80               	xorlw	128
  4046  001072  6F72               	movwf	(??_build_board_stat_msg+2)& (0+255),b
  4047  001074  5171               	movf	(??_build_board_stat_msg+1)& (0+255),w,b
  4048  001076  0A80               	xorlw	128
  4049  001078  5972               	subwfb	(??_build_board_stat_msg+2)& (0+255),w,b
  4050  00107A  A0D8               	btfss	status,0,c
  4051  00107C  EF42  F008         	goto	u3971
  4052  001080  EF44  F008         	goto	u3970
  4053  001084                     u3971:
  4054  001084  EF1B  F008         	goto	l5855
  4055  001088                     u3970:
  4056  001088                     
  4057                           ; BSR set to: 0
  4058                           ;can_common.c: 192: };can_common.c: 195: output->data_len = 4 + error_data_len;
  4059  001088  EE20 F002          	lfsr	2,2
  4060  00108C  516E               	movf	build_board_stat_msg@output& (0+255),w,b
  4061  00108E  26D9               	addwf	fsr2l,f,c
  4062  001090  516F               	movf	(build_board_stat_msg@output+1)& (0+255),w,b
  4063  001092  22DA               	addwfc	fsr2h,f,c
  4064  001094  516D               	movf	build_board_stat_msg@error_data_len& (0+255),w,b
  4065  001096  0F04               	addlw	4
  4066  001098  6EDF               	movwf	indf2,c
  4067  00109A                     l466:
  4068                           
  4069                           ; BSR set to: 0
  4070  00109A  0012               	return		;funcret
  4071  00109C                     __end_of_build_board_stat_msg:
  4072                           	callstack 0
  4073                           
  4074 ;; *************** function _write_timestamp_3bytes *****************
  4075 ;; Defined at:
  4076 ;;		line 19 in file "canlib/can_common.c"
  4077 ;; Parameters:    Size  Location     Type
  4078 ;;  timestamp       4    0[BANK0 ] unsigned long 
  4079 ;;  output          2    4[BANK0 ] PTR struct .
  4080 ;;		 -> vent_send_status@stat_msg(11), check_bus_current_error@error_msg(11), check_battery_voltage_error@error_msg(11),
      + send_status_ok@board_stat_msg(11), 
  4081 ;;		 -> main@error_msg(11), 
  4082 ;; Auto vars:     Size  Location     Type
  4083 ;;		None
  4084 ;; Return value:  Size  Location     Type
  4085 ;;                  1    wreg      void 
  4086 ;; Registers used:
  4087 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4088 ;; Tracked objects:
  4089 ;;		On entry : 0/0
  4090 ;;		On exit  : 0/0
  4091 ;;		Unchanged: 0/0
  4092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4093 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4096 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4097 ;;Total ram usage:        6 bytes
  4098 ;; Hardware stack levels used: 1
  4099 ;; Hardware stack levels required when called: 5
  4100 ;; This function calls:
  4101 ;;		Nothing
  4102 ;; This function is called by:
  4103 ;;		_build_valve_stat_msg
  4104 ;;		_build_board_stat_msg
  4105 ;;		_build_general_cmd_msg
  4106 ;;		_build_debug_msg
  4107 ;;		_build_reset_msg
  4108 ;;		_build_valve_cmd_msg
  4109 ;;		_build_arm_cmd_msg
  4110 ;;		_build_arm_stat_msg
  4111 ;;		_build_altitude_data_msg
  4112 ;;		_build_gps_time_msg
  4113 ;;		_build_gps_lat_msg
  4114 ;;		_build_gps_lon_msg
  4115 ;;		_build_gps_alt_msg
  4116 ;;		_build_gps_info_msg
  4117 ;;		_build_fill_msg
  4118 ;;		_build_radi_info_msg
  4119 ;; This function uses a non-reentrant model
  4120 ;;
  4121                           
  4122                           	psect	text30
  4123  001BE8                     __ptext30:
  4124                           	callstack 0
  4125  001BE8                     _write_timestamp_3bytes:
  4126                           	callstack 23
  4127  001BE8                     
  4128                           ;can_common.c: 21: output->data[0] = (timestamp >> 16) & 0xff;
  4129  001BE8  0100               	movlb	0	; () banked
  4130  001BEA  EE20 F003          	lfsr	2,3
  4131  001BEE  5164               	movf	write_timestamp_3bytes@output& (0+255),w,b
  4132  001BF0  26D9               	addwf	fsr2l,f,c
  4133  001BF2  5165               	movf	(write_timestamp_3bytes@output+1)& (0+255),w,b
  4134  001BF4  22DA               	addwfc	fsr2h,f,c
  4135  001BF6  0060  F18B  FFDF   	movff	write_timestamp_3bytes@timestamp+2,indf2
  4136                           
  4137                           ;can_common.c: 22: output->data[1] = (timestamp >> 8) & 0xff;
  4138  001BFC  EE20 F004          	lfsr	2,4
  4139  001C00  5164               	movf	write_timestamp_3bytes@output& (0+255),w,b
  4140  001C02  26D9               	addwf	fsr2l,f,c
  4141  001C04  5165               	movf	(write_timestamp_3bytes@output+1)& (0+255),w,b
  4142  001C06  22DA               	addwfc	fsr2h,f,c
  4143  001C08  0060  F187  FFDF   	movff	write_timestamp_3bytes@timestamp+1,indf2
  4144                           
  4145                           ;can_common.c: 23: output->data[2] = (timestamp >> 0) & 0xff;
  4146  001C0E  EE20 F005          	lfsr	2,5
  4147  001C12  5164               	movf	write_timestamp_3bytes@output& (0+255),w,b
  4148  001C14  26D9               	addwf	fsr2l,f,c
  4149  001C16  5165               	movf	(write_timestamp_3bytes@output+1)& (0+255),w,b
  4150  001C18  22DA               	addwfc	fsr2h,f,c
  4151  001C1A  0060  F183  FFDF   	movff	write_timestamp_3bytes@timestamp,indf2
  4152  001C20                     
  4153                           ; BSR set to: 0
  4154  001C20  0012               	return		;funcret
  4155  001C22                     __end_of_write_timestamp_3bytes:
  4156                           	callstack 0
  4157                           
  4158 ;; *************** function _build_analog_data_msg *****************
  4159 ;; Defined at:
  4160 ;;		line 234 in file "canlib/can_common.c"
  4161 ;; Parameters:    Size  Location     Type
  4162 ;;  timestamp       4    4[BANK0 ] unsigned long 
  4163 ;;  sensor_id       1    8[BANK0 ] enum E76
  4164 ;;  sensor_data     2    9[BANK0 ] unsigned int 
  4165 ;;  output          2   11[BANK0 ] PTR struct .
  4166 ;;		 -> check_battery_voltage_error@batt_msg(11), 
  4167 ;; Auto vars:     Size  Location     Type
  4168 ;;		None
  4169 ;; Return value:  Size  Location     Type
  4170 ;;                  1    wreg      unsigned char 
  4171 ;; Registers used:
  4172 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4173 ;; Tracked objects:
  4174 ;;		On entry : 0/0
  4175 ;;		On exit  : 0/0
  4176 ;;		Unchanged: 0/0
  4177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4178 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4181 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4182 ;;Total ram usage:        9 bytes
  4183 ;; Hardware stack levels used: 1
  4184 ;; Hardware stack levels required when called: 6
  4185 ;; This function calls:
  4186 ;;		_write_timestamp_2bytes
  4187 ;; This function is called by:
  4188 ;;		_check_battery_voltage_error
  4189 ;; This function uses a non-reentrant model
  4190 ;;
  4191                           
  4192                           	psect	text31
  4193  001732                     __ptext31:
  4194                           	callstack 0
  4195  001732                     _build_analog_data_msg:
  4196                           	callstack 23
  4197  001732                     
  4198                           ;can_common.c: 239: if (!output) { return 0; }
  4199  001732  0100               	movlb	0	; () banked
  4200  001734  516B               	movf	build_analog_data_msg@output& (0+255),w,b
  4201  001736  116C               	iorwf	(build_analog_data_msg@output+1)& (0+255),w,b
  4202  001738  A4D8               	btfss	status,2,c
  4203  00173A  EFA1  F00B         	goto	u4021
  4204  00173E  EFA3  F00B         	goto	u4020
  4205  001742                     u4021:
  4206  001742  EFA5  F00B         	goto	l5899
  4207  001746                     u4020:
  4208  001746  EFDC  F00B         	goto	l481
  4209  00174A                     l5899:
  4210                           
  4211                           ; BSR set to: 0
  4212                           ;can_common.c: 241: output->sid = 0x6A0 | 0x0B;
  4213  00174A  0060  F1AF  FFD9   	movff	build_analog_data_msg@output,fsr2l
  4214  001750  0060  F1B3  FFDA   	movff	build_analog_data_msg@output+1,fsr2h
  4215  001756  0EAB               	movlw	171
  4216  001758  6EDE               	movwf	postinc2,c
  4217  00175A  0E06               	movlw	6
  4218  00175C  6EDD               	movwf	postdec2,c
  4219  00175E                     
  4220                           ; BSR set to: 0
  4221                           ;can_common.c: 242: write_timestamp_2bytes(timestamp, output);
  4222  00175E  C064  F060         	movff	build_analog_data_msg@timestamp,write_timestamp_2bytes@timestamp
  4223  001762  C065  F061         	movff	build_analog_data_msg@timestamp+1,write_timestamp_2bytes@timestamp+1
  4224  001766  C06B  F062         	movff	build_analog_data_msg@output,write_timestamp_2bytes@output
  4225  00176A  C06C  F063         	movff	build_analog_data_msg@output+1,write_timestamp_2bytes@output+1
  4226  00176E  EC6E  F00E         	call	_write_timestamp_2bytes	;wreg free
  4227  001772                     
  4228                           ;can_common.c: 244: output->data[2] = (uint8_t) sensor_id;
  4229  001772  0100               	movlb	0	; () banked
  4230  001774  EE20 F005          	lfsr	2,5
  4231  001778  516B               	movf	build_analog_data_msg@output& (0+255),w,b
  4232  00177A  26D9               	addwf	fsr2l,f,c
  4233  00177C  516C               	movf	(build_analog_data_msg@output+1)& (0+255),w,b
  4234  00177E  22DA               	addwfc	fsr2h,f,c
  4235  001780  0060  F1A3  FFDF   	movff	build_analog_data_msg@sensor_id,indf2
  4236  001786                     
  4237                           ; BSR set to: 0
  4238                           ;can_common.c: 245: output->data[3] = (sensor_data >> 8) & 0xff;
  4239  001786  EE20 F006          	lfsr	2,6
  4240  00178A  516B               	movf	build_analog_data_msg@output& (0+255),w,b
  4241  00178C  26D9               	addwf	fsr2l,f,c
  4242  00178E  516C               	movf	(build_analog_data_msg@output+1)& (0+255),w,b
  4243  001790  22DA               	addwfc	fsr2h,f,c
  4244  001792  516A               	movf	(build_analog_data_msg@sensor_data+1)& (0+255),w,b
  4245  001794  6EDF               	movwf	indf2,c
  4246  001796                     
  4247                           ; BSR set to: 0
  4248                           ;can_common.c: 246: output->data[4] = (sensor_data >> 0) & 0xff;
  4249  001796  EE20 F007          	lfsr	2,7
  4250  00179A  516B               	movf	build_analog_data_msg@output& (0+255),w,b
  4251  00179C  26D9               	addwf	fsr2l,f,c
  4252  00179E  516C               	movf	(build_analog_data_msg@output+1)& (0+255),w,b
  4253  0017A0  22DA               	addwfc	fsr2h,f,c
  4254  0017A2  0060  F1A7  FFDF   	movff	build_analog_data_msg@sensor_data,indf2
  4255  0017A8                     
  4256                           ; BSR set to: 0
  4257                           ;can_common.c: 248: output->data_len = 5;
  4258  0017A8  EE20 F002          	lfsr	2,2
  4259  0017AC  516B               	movf	build_analog_data_msg@output& (0+255),w,b
  4260  0017AE  26D9               	addwf	fsr2l,f,c
  4261  0017B0  516C               	movf	(build_analog_data_msg@output+1)& (0+255),w,b
  4262  0017B2  22DA               	addwfc	fsr2h,f,c
  4263  0017B4  0E05               	movlw	5
  4264  0017B6  6EDF               	movwf	indf2,c
  4265  0017B8                     l481:
  4266                           
  4267                           ; BSR set to: 0
  4268  0017B8  0012               	return		;funcret
  4269  0017BA                     __end_of_build_analog_data_msg:
  4270                           	callstack 0
  4271                           
  4272 ;; *************** function _write_timestamp_2bytes *****************
  4273 ;; Defined at:
  4274 ;;		line 13 in file "canlib/can_common.c"
  4275 ;; Parameters:    Size  Location     Type
  4276 ;;  timestamp       2    0[BANK0 ] unsigned int 
  4277 ;;  output          2    2[BANK0 ] PTR struct .
  4278 ;;		 -> check_battery_voltage_error@batt_msg(11), 
  4279 ;; Auto vars:     Size  Location     Type
  4280 ;;		None
  4281 ;; Return value:  Size  Location     Type
  4282 ;;                  1    wreg      void 
  4283 ;; Registers used:
  4284 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4285 ;; Tracked objects:
  4286 ;;		On entry : 0/0
  4287 ;;		On exit  : 0/0
  4288 ;;		Unchanged: 0/0
  4289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4290 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4293 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4294 ;;Total ram usage:        4 bytes
  4295 ;; Hardware stack levels used: 1
  4296 ;; Hardware stack levels required when called: 5
  4297 ;; This function calls:
  4298 ;;		Nothing
  4299 ;; This function is called by:
  4300 ;;		_build_analog_data_msg
  4301 ;;		_build_imu_data_msg
  4302 ;; This function uses a non-reentrant model
  4303 ;;
  4304                           
  4305                           	psect	text32
  4306  001CDC                     __ptext32:
  4307                           	callstack 0
  4308  001CDC                     _write_timestamp_2bytes:
  4309                           	callstack 23
  4310  001CDC                     
  4311                           ;can_common.c: 15: output->data[0] = (timestamp >> 8) & 0xff;
  4312  001CDC  0100               	movlb	0	; () banked
  4313  001CDE  EE20 F003          	lfsr	2,3
  4314  001CE2  5162               	movf	write_timestamp_2bytes@output& (0+255),w,b
  4315  001CE4  26D9               	addwf	fsr2l,f,c
  4316  001CE6  5163               	movf	(write_timestamp_2bytes@output+1)& (0+255),w,b
  4317  001CE8  22DA               	addwfc	fsr2h,f,c
  4318  001CEA  5161               	movf	(write_timestamp_2bytes@timestamp+1)& (0+255),w,b
  4319  001CEC  6EDF               	movwf	indf2,c
  4320                           
  4321                           ;can_common.c: 16: output->data[1] = (timestamp >> 0) & 0xff;
  4322  001CEE  EE20 F004          	lfsr	2,4
  4323  001CF2  5162               	movf	write_timestamp_2bytes@output& (0+255),w,b
  4324  001CF4  26D9               	addwf	fsr2l,f,c
  4325  001CF6  5163               	movf	(write_timestamp_2bytes@output+1)& (0+255),w,b
  4326  001CF8  22DA               	addwfc	fsr2h,f,c
  4327  001CFA  0060  F183  FFDF   	movff	write_timestamp_2bytes@timestamp,indf2
  4328  001D00                     
  4329                           ; BSR set to: 0
  4330  001D00  0012               	return		;funcret
  4331  001D02                     __end_of_write_timestamp_2bytes:
  4332                           	callstack 0
  4333                           
  4334 ;; *************** function ___lwtoft *****************
  4335 ;; Defined at:
  4336 ;;		line 28 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwtoft.c"
  4337 ;; Parameters:    Size  Location     Type
  4338 ;;  c               2    8[BANK0 ] unsigned int 
  4339 ;; Auto vars:     Size  Location     Type
  4340 ;;		None
  4341 ;; Return value:  Size  Location     Type
  4342 ;;                  3    8[BANK0 ] float 
  4343 ;; Registers used:
  4344 ;;		wreg, status,2, status,0, cstack
  4345 ;; Tracked objects:
  4346 ;;		On entry : 0/0
  4347 ;;		On exit  : 0/0
  4348 ;;		Unchanged: 0/0
  4349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4350 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4353 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4354 ;;Total ram usage:        3 bytes
  4355 ;; Hardware stack levels used: 1
  4356 ;; Hardware stack levels required when called: 6
  4357 ;; This function calls:
  4358 ;;		___ftpack
  4359 ;; This function is called by:
  4360 ;;		_check_battery_voltage_error
  4361 ;; This function uses a non-reentrant model
  4362 ;;
  4363                           
  4364                           	psect	text33
  4365  001D02                     __ptext33:
  4366                           	callstack 0
  4367  001D02                     ___lwtoft:
  4368                           	callstack 23
  4369  001D02  C068  F060         	movff	___lwtoft@c,___ftpack@arg
  4370  001D06  C069  F061         	movff	___lwtoft@c+1,___ftpack@arg+1
  4371  001D0A  0100               	movlb	0	; () banked
  4372  001D0C  6B62               	clrf	(___ftpack@arg+2)& (0+255),b
  4373  001D0E  0E8E               	movlw	142
  4374  001D10  6F63               	movwf	___ftpack@exp& (0+255),b
  4375  001D12  0E00               	movlw	0
  4376  001D14  6F64               	movwf	___ftpack@sign& (0+255),b
  4377  001D16  EC45  F007         	call	___ftpack	;wreg free
  4378  001D1A  C060  F068         	movff	?___ftpack,?___lwtoft
  4379  001D1E  C061  F069         	movff	?___ftpack+1,?___lwtoft+1
  4380  001D22  C062  F06A         	movff	?___ftpack+2,?___lwtoft+2
  4381  001D26  0012               	return		;funcret
  4382  001D28                     __end_of___lwtoft:
  4383                           	callstack 0
  4384                           
  4385 ;; *************** function ___fttol *****************
  4386 ;; Defined at:
  4387 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fttol.c"
  4388 ;; Parameters:    Size  Location     Type
  4389 ;;  f1              3   26[BANK0 ] float 
  4390 ;; Auto vars:     Size  Location     Type
  4391 ;;  lval            4   36[BANK0 ] unsigned long 
  4392 ;;  exp1            1   40[BANK0 ] unsigned char 
  4393 ;;  sign1           1   35[BANK0 ] unsigned char 
  4394 ;; Return value:  Size  Location     Type
  4395 ;;                  4   26[BANK0 ] long 
  4396 ;; Registers used:
  4397 ;;		wreg, status,2, status,0
  4398 ;; Tracked objects:
  4399 ;;		On entry : 0/0
  4400 ;;		On exit  : 0/0
  4401 ;;		Unchanged: 0/0
  4402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4403 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4404 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4405 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4406 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4407 ;;Total ram usage:       15 bytes
  4408 ;; Hardware stack levels used: 1
  4409 ;; Hardware stack levels required when called: 5
  4410 ;; This function calls:
  4411 ;;		Nothing
  4412 ;; This function is called by:
  4413 ;;		_check_battery_voltage_error
  4414 ;; This function uses a non-reentrant model
  4415 ;;
  4416                           
  4417                           	psect	text34
  4418  000C56                     __ptext34:
  4419                           	callstack 0
  4420  000C56                     ___fttol:
  4421                           	callstack 24
  4422  000C56  C07C  F07E         	movff	___fttol@f1+2,??___fttol
  4423  000C5A  0100               	movlb	0	; () banked
  4424  000C5C  6B7F               	clrf	(??___fttol+1)& (0+255),b
  4425  000C5E  6B80               	clrf	(??___fttol+2)& (0+255),b
  4426  000C60  357B               	rlcf	(___fttol@f1+1)& (0+255),w,b
  4427  000C62  377E               	rlcf	??___fttol& (0+255),f,b
  4428  000C64  E301               	bnc	u2451
  4429  000C66  817F               	bsf	(??___fttol+1)& (0+255),0,b
  4430  000C68                     u2451:
  4431  000C68  517E               	movf	??___fttol& (0+255),w,b
  4432  000C6A  6F88               	movwf	___fttol@exp1& (0+255),b
  4433  000C6C  5188               	movf	___fttol@exp1& (0+255),w,b
  4434  000C6E  A4D8               	btfss	status,2,c
  4435  000C70  EF3C  F006         	goto	u2461
  4436  000C74  EF3E  F006         	goto	u2460
  4437  000C78                     u2461:
  4438  000C78  EF48  F006         	goto	l4179
  4439  000C7C                     u2460:
  4440  000C7C                     l4175:
  4441                           
  4442                           ; BSR set to: 0
  4443  000C7C  0E00               	movlw	0
  4444  000C7E  6F7A               	movwf	?___fttol& (0+255),b
  4445  000C80  0E00               	movlw	0
  4446  000C82  6F7B               	movwf	(?___fttol+1)& (0+255),b
  4447  000C84  0E00               	movlw	0
  4448  000C86  6F7C               	movwf	(?___fttol+2)& (0+255),b
  4449  000C88  0E00               	movlw	0
  4450  000C8A  6F7D               	movwf	(?___fttol+3)& (0+255),b
  4451  000C8C  EFBB  F006         	goto	l1356
  4452  000C90                     l4179:
  4453                           
  4454                           ; BSR set to: 0
  4455  000C90  0E17               	movlw	23
  4456  000C92  6F7E               	movwf	??___fttol& (0+255),b
  4457  000C94  C07A  F07F         	movff	___fttol@f1,??___fttol+1
  4458  000C98  C07B  F080         	movff	___fttol@f1+1,??___fttol+2
  4459  000C9C  C07C  F081         	movff	___fttol@f1+2,??___fttol+3
  4460  000CA0  297E               	incf	??___fttol& (0+255),w,b
  4461  000CA2  6F82               	movwf	(??___fttol+4)& (0+255),b
  4462  000CA4  EF58  F006         	goto	u2470
  4463  000CA8                     u2475:
  4464  000CA8  90D8               	bcf	status,0,c
  4465  000CAA  3381               	rrcf	(??___fttol+3)& (0+255),f,b
  4466  000CAC  3380               	rrcf	(??___fttol+2)& (0+255),f,b
  4467  000CAE  337F               	rrcf	(??___fttol+1)& (0+255),f,b
  4468  000CB0                     u2470:
  4469  000CB0  2F82               	decfsz	(??___fttol+4)& (0+255),f,b
  4470  000CB2  EF54  F006         	goto	u2475
  4471  000CB6  0100               	movlb	0	; () banked
  4472  000CB8  517F               	movf	(??___fttol+1)& (0+255),w,b
  4473  000CBA  6F83               	movwf	___fttol@sign1& (0+255),b
  4474  000CBC                     
  4475                           ; BSR set to: 0
  4476  000CBC  8F7B               	bsf	(___fttol@f1+1)& (0+255),7,b
  4477  000CBE                     
  4478                           ; BSR set to: 0
  4479  000CBE  0EFF               	movlw	255
  4480  000CC0  177A               	andwf	___fttol@f1& (0+255),f,b
  4481  000CC2  0EFF               	movlw	255
  4482  000CC4  177B               	andwf	(___fttol@f1+1)& (0+255),f,b
  4483  000CC6  0E00               	movlw	0
  4484  000CC8  177C               	andwf	(___fttol@f1+2)& (0+255),f,b
  4485  000CCA                     
  4486                           ; BSR set to: 0
  4487  000CCA  517A               	movf	___fttol@f1& (0+255),w,b
  4488  000CCC  6F84               	movwf	___fttol@lval& (0+255),b
  4489  000CCE  517B               	movf	(___fttol@f1+1)& (0+255),w,b
  4490  000CD0  6F85               	movwf	(___fttol@lval+1)& (0+255),b
  4491  000CD2  517C               	movf	(___fttol@f1+2)& (0+255),w,b
  4492  000CD4  6F86               	movwf	(___fttol@lval+2)& (0+255),b
  4493  000CD6  6B87               	clrf	(___fttol@lval+3)& (0+255),b
  4494  000CD8                     
  4495                           ; BSR set to: 0
  4496  000CD8  0E8E               	movlw	142
  4497  000CDA  5F88               	subwf	___fttol@exp1& (0+255),f,b
  4498  000CDC                     
  4499                           ; BSR set to: 0
  4500  000CDC  BF88               	btfsc	___fttol@exp1& (0+255),7,b
  4501  000CDE  EF75  F006         	goto	u2480
  4502  000CE2  EF73  F006         	goto	u2481
  4503  000CE6                     u2481:
  4504  000CE6  EF8B  F006         	goto	l4201
  4505  000CEA                     u2480:
  4506  000CEA                     
  4507                           ; BSR set to: 0
  4508  000CEA  5188               	movf	___fttol@exp1& (0+255),w,b
  4509  000CEC  0A80               	xorlw	128
  4510  000CEE  0F8F               	addlw	143
  4511  000CF0  B0D8               	btfsc	status,0,c
  4512  000CF2  EF7D  F006         	goto	u2491
  4513  000CF6  EF7F  F006         	goto	u2490
  4514  000CFA                     u2491:
  4515  000CFA  EF81  F006         	goto	l4197
  4516  000CFE                     u2490:
  4517  000CFE  EF3E  F006         	goto	l4175
  4518  000D02                     l4197:
  4519                           
  4520                           ; BSR set to: 0
  4521  000D02  90D8               	bcf	status,0,c
  4522  000D04  3387               	rrcf	(___fttol@lval+3)& (0+255),f,b
  4523  000D06  3386               	rrcf	(___fttol@lval+2)& (0+255),f,b
  4524  000D08  3385               	rrcf	(___fttol@lval+1)& (0+255),f,b
  4525  000D0A  3384               	rrcf	___fttol@lval& (0+255),f,b
  4526  000D0C                     
  4527                           ; BSR set to: 0
  4528  000D0C  3F88               	incfsz	___fttol@exp1& (0+255),f,b
  4529  000D0E  EF81  F006         	goto	l4197
  4530  000D12  EFA3  F006         	goto	l4211
  4531  000D16                     l4201:
  4532                           
  4533                           ; BSR set to: 0
  4534  000D16  0E17               	movlw	23
  4535  000D18  6588               	cpfsgt	___fttol@exp1& (0+255),b
  4536  000D1A  EF91  F006         	goto	u2501
  4537  000D1E  EF93  F006         	goto	u2500
  4538  000D22                     u2501:
  4539  000D22  EF9B  F006         	goto	l4209
  4540  000D26                     u2500:
  4541  000D26  EF3E  F006         	goto	l4175
  4542  000D2A                     l4207:
  4543                           
  4544                           ; BSR set to: 0
  4545  000D2A  90D8               	bcf	status,0,c
  4546  000D2C  3784               	rlcf	___fttol@lval& (0+255),f,b
  4547  000D2E  3785               	rlcf	(___fttol@lval+1)& (0+255),f,b
  4548  000D30  3786               	rlcf	(___fttol@lval+2)& (0+255),f,b
  4549  000D32  3787               	rlcf	(___fttol@lval+3)& (0+255),f,b
  4550  000D34  0788               	decf	___fttol@exp1& (0+255),f,b
  4551  000D36                     l4209:
  4552                           
  4553                           ; BSR set to: 0
  4554  000D36  5188               	movf	___fttol@exp1& (0+255),w,b
  4555  000D38  A4D8               	btfss	status,2,c
  4556  000D3A  EFA1  F006         	goto	u2511
  4557  000D3E  EFA3  F006         	goto	u2510
  4558  000D42                     u2511:
  4559  000D42  EF95  F006         	goto	l4207
  4560  000D46                     u2510:
  4561  000D46                     l4211:
  4562                           
  4563                           ; BSR set to: 0
  4564  000D46  5183               	movf	___fttol@sign1& (0+255),w,b
  4565  000D48  B4D8               	btfsc	status,2,c
  4566  000D4A  EFA9  F006         	goto	u2521
  4567  000D4E  EFAB  F006         	goto	u2520
  4568  000D52                     u2521:
  4569  000D52  EFB3  F006         	goto	l4215
  4570  000D56                     u2520:
  4571  000D56                     
  4572                           ; BSR set to: 0
  4573  000D56  1F87               	comf	(___fttol@lval+3)& (0+255),f,b
  4574  000D58  1F86               	comf	(___fttol@lval+2)& (0+255),f,b
  4575  000D5A  1F85               	comf	(___fttol@lval+1)& (0+255),f,b
  4576  000D5C  6D84               	negf	___fttol@lval& (0+255),b
  4577  000D5E  0E00               	movlw	0
  4578  000D60  2385               	addwfc	(___fttol@lval+1)& (0+255),f,b
  4579  000D62  2386               	addwfc	(___fttol@lval+2)& (0+255),f,b
  4580  000D64  2387               	addwfc	(___fttol@lval+3)& (0+255),f,b
  4581  000D66                     l4215:
  4582                           
  4583                           ; BSR set to: 0
  4584  000D66  C084  F07A         	movff	___fttol@lval,?___fttol
  4585  000D6A  C085  F07B         	movff	___fttol@lval+1,?___fttol+1
  4586  000D6E  C086  F07C         	movff	___fttol@lval+2,?___fttol+2
  4587  000D72  C087  F07D         	movff	___fttol@lval+3,?___fttol+3
  4588  000D76                     l1356:
  4589                           
  4590                           ; BSR set to: 0
  4591  000D76  0012               	return		;funcret
  4592  000D78                     __end_of___fttol:
  4593                           	callstack 0
  4594                           
  4595 ;; *************** function ___ftmul *****************
  4596 ;; Defined at:
  4597 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\ftmul.c"
  4598 ;; Parameters:    Size  Location     Type
  4599 ;;  f1              3   11[BANK0 ] float 
  4600 ;;  f2              3   14[BANK0 ] float 
  4601 ;; Auto vars:     Size  Location     Type
  4602 ;;  f3_as_produc    3   21[BANK0 ] unsigned um
  4603 ;;  sign            1   25[BANK0 ] unsigned char 
  4604 ;;  cntr            1   24[BANK0 ] unsigned char 
  4605 ;;  exp             1   20[BANK0 ] unsigned char 
  4606 ;; Return value:  Size  Location     Type
  4607 ;;                  3   11[BANK0 ] float 
  4608 ;; Registers used:
  4609 ;;		wreg, status,2, status,0, cstack
  4610 ;; Tracked objects:
  4611 ;;		On entry : 0/0
  4612 ;;		On exit  : 0/0
  4613 ;;		Unchanged: 0/0
  4614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4615 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4616 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4617 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4618 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4619 ;;Total ram usage:       15 bytes
  4620 ;; Hardware stack levels used: 1
  4621 ;; Hardware stack levels required when called: 6
  4622 ;; This function calls:
  4623 ;;		___ftpack
  4624 ;; This function is called by:
  4625 ;;		_check_battery_voltage_error
  4626 ;; This function uses a non-reentrant model
  4627 ;;
  4628                           
  4629                           	psect	text35
  4630  000B30                     __ptext35:
  4631                           	callstack 0
  4632  000B30                     ___ftmul:
  4633                           	callstack 23
  4634  000B30  C06D  F071         	movff	___ftmul@f1+2,??___ftmul
  4635  000B34  0100               	movlb	0	; () banked
  4636  000B36  6B72               	clrf	(??___ftmul+1)& (0+255),b
  4637  000B38  6B73               	clrf	(??___ftmul+2)& (0+255),b
  4638  000B3A  356C               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  4639  000B3C  3771               	rlcf	??___ftmul& (0+255),f,b
  4640  000B3E  E301               	bnc	u4091
  4641  000B40  8172               	bsf	(??___ftmul+1)& (0+255),0,b
  4642  000B42                     u4091:
  4643  000B42  5171               	movf	??___ftmul& (0+255),w,b
  4644  000B44  6F74               	movwf	___ftmul@exp& (0+255),b
  4645  000B46  5174               	movf	___ftmul@exp& (0+255),w,b
  4646  000B48  A4D8               	btfss	status,2,c
  4647  000B4A  EFA9  F005         	goto	u4101
  4648  000B4E  EFAB  F005         	goto	u4100
  4649  000B52                     u4101:
  4650  000B52  EFB3  F005         	goto	l5965
  4651  000B56                     u4100:
  4652  000B56                     
  4653                           ; BSR set to: 0
  4654  000B56  0E00               	movlw	0
  4655  000B58  6F6B               	movwf	?___ftmul& (0+255),b
  4656  000B5A  0E00               	movlw	0
  4657  000B5C  6F6C               	movwf	(?___ftmul+1)& (0+255),b
  4658  000B5E  0E00               	movlw	0
  4659  000B60  6F6D               	movwf	(?___ftmul+2)& (0+255),b
  4660  000B62  EF2A  F006         	goto	l1335
  4661  000B66                     l5965:
  4662                           
  4663                           ; BSR set to: 0
  4664  000B66  C070  F071         	movff	___ftmul@f2+2,??___ftmul
  4665  000B6A  6B72               	clrf	(??___ftmul+1)& (0+255),b
  4666  000B6C  6B73               	clrf	(??___ftmul+2)& (0+255),b
  4667  000B6E  356F               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  4668  000B70  3771               	rlcf	??___ftmul& (0+255),f,b
  4669  000B72  E301               	bnc	u4111
  4670  000B74  8172               	bsf	(??___ftmul+1)& (0+255),0,b
  4671  000B76                     u4111:
  4672  000B76  5171               	movf	??___ftmul& (0+255),w,b
  4673  000B78  6F79               	movwf	___ftmul@sign& (0+255),b
  4674  000B7A  5179               	movf	___ftmul@sign& (0+255),w,b
  4675  000B7C  A4D8               	btfss	status,2,c
  4676  000B7E  EFC3  F005         	goto	u4121
  4677  000B82  EFC5  F005         	goto	u4120
  4678  000B86                     u4121:
  4679  000B86  EFCD  F005         	goto	l5971
  4680  000B8A                     u4120:
  4681  000B8A                     
  4682                           ; BSR set to: 0
  4683  000B8A  0E00               	movlw	0
  4684  000B8C  6F6B               	movwf	?___ftmul& (0+255),b
  4685  000B8E  0E00               	movlw	0
  4686  000B90  6F6C               	movwf	(?___ftmul+1)& (0+255),b
  4687  000B92  0E00               	movlw	0
  4688  000B94  6F6D               	movwf	(?___ftmul+2)& (0+255),b
  4689  000B96  EF2A  F006         	goto	l1335
  4690  000B9A                     l5971:
  4691                           
  4692                           ; BSR set to: 0
  4693  000B9A  5179               	movf	___ftmul@sign& (0+255),w,b
  4694  000B9C  0F7B               	addlw	123
  4695  000B9E  2774               	addwf	___ftmul@exp& (0+255),f,b
  4696  000BA0                     
  4697                           ; BSR set to: 0
  4698  000BA0  C06D  F079         	movff	___ftmul@f1+2,___ftmul@sign
  4699  000BA4  5170               	movf	(___ftmul@f2+2)& (0+255),w,b
  4700  000BA6  1B79               	xorwf	___ftmul@sign& (0+255),f,b
  4701  000BA8  0E80               	movlw	128
  4702  000BAA  1779               	andwf	___ftmul@sign& (0+255),f,b
  4703  000BAC                     
  4704                           ; BSR set to: 0
  4705  000BAC  8F6C               	bsf	(___ftmul@f1+1)& (0+255),7,b
  4706  000BAE                     
  4707                           ; BSR set to: 0
  4708  000BAE  8F6F               	bsf	(___ftmul@f2+1)& (0+255),7,b
  4709  000BB0                     
  4710                           ; BSR set to: 0
  4711  000BB0  0EFF               	movlw	255
  4712  000BB2  176E               	andwf	___ftmul@f2& (0+255),f,b
  4713  000BB4  0EFF               	movlw	255
  4714  000BB6  176F               	andwf	(___ftmul@f2+1)& (0+255),f,b
  4715  000BB8  0E00               	movlw	0
  4716  000BBA  1770               	andwf	(___ftmul@f2+2)& (0+255),f,b
  4717  000BBC                     
  4718                           ; BSR set to: 0
  4719  000BBC  0E00               	movlw	0
  4720  000BBE  6F75               	movwf	___ftmul@f3_as_product& (0+255),b
  4721  000BC0  0E00               	movlw	0
  4722  000BC2  6F76               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  4723  000BC4  0E00               	movlw	0
  4724  000BC6  6F77               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  4725  000BC8                     
  4726                           ; BSR set to: 0
  4727  000BC8  0E07               	movlw	7
  4728  000BCA  6F78               	movwf	___ftmul@cntr& (0+255),b
  4729  000BCC                     l5985:
  4730                           
  4731                           ; BSR set to: 0
  4732  000BCC  A16B               	btfss	___ftmul@f1& (0+255),0,b
  4733  000BCE  EFEB  F005         	goto	u4131
  4734  000BD2  EFED  F005         	goto	u4130
  4735  000BD6                     u4131:
  4736  000BD6  EFF3  F005         	goto	l5989
  4737  000BDA                     u4130:
  4738  000BDA                     
  4739                           ; BSR set to: 0
  4740  000BDA  516E               	movf	___ftmul@f2& (0+255),w,b
  4741  000BDC  2775               	addwf	___ftmul@f3_as_product& (0+255),f,b
  4742  000BDE  516F               	movf	(___ftmul@f2+1)& (0+255),w,b
  4743  000BE0  2376               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  4744  000BE2  5170               	movf	(___ftmul@f2+2)& (0+255),w,b
  4745  000BE4  2377               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  4746  000BE6                     l5989:
  4747                           
  4748                           ; BSR set to: 0
  4749  000BE6  90D8               	bcf	status,0,c
  4750  000BE8  336D               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  4751  000BEA  336C               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  4752  000BEC  336B               	rrcf	___ftmul@f1& (0+255),f,b
  4753  000BEE  90D8               	bcf	status,0,c
  4754  000BF0  376E               	rlcf	___ftmul@f2& (0+255),f,b
  4755  000BF2  376F               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  4756  000BF4  3770               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  4757  000BF6                     
  4758                           ; BSR set to: 0
  4759  000BF6  2F78               	decfsz	___ftmul@cntr& (0+255),f,b
  4760  000BF8  EFE6  F005         	goto	l5985
  4761  000BFC                     
  4762                           ; BSR set to: 0
  4763  000BFC  0E09               	movlw	9
  4764  000BFE  6F78               	movwf	___ftmul@cntr& (0+255),b
  4765  000C00                     l5995:
  4766                           
  4767                           ; BSR set to: 0
  4768  000C00  A16B               	btfss	___ftmul@f1& (0+255),0,b
  4769  000C02  EF05  F006         	goto	u4141
  4770  000C06  EF07  F006         	goto	u4140
  4771  000C0A                     u4141:
  4772  000C0A  EF0D  F006         	goto	l5999
  4773  000C0E                     u4140:
  4774  000C0E                     
  4775                           ; BSR set to: 0
  4776  000C0E  516E               	movf	___ftmul@f2& (0+255),w,b
  4777  000C10  2775               	addwf	___ftmul@f3_as_product& (0+255),f,b
  4778  000C12  516F               	movf	(___ftmul@f2+1)& (0+255),w,b
  4779  000C14  2376               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  4780  000C16  5170               	movf	(___ftmul@f2+2)& (0+255),w,b
  4781  000C18  2377               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  4782  000C1A                     l5999:
  4783                           
  4784                           ; BSR set to: 0
  4785  000C1A  90D8               	bcf	status,0,c
  4786  000C1C  336D               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  4787  000C1E  336C               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  4788  000C20  336B               	rrcf	___ftmul@f1& (0+255),f,b
  4789  000C22  90D8               	bcf	status,0,c
  4790  000C24  3377               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  4791  000C26  3376               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  4792  000C28  3375               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  4793  000C2A                     
  4794                           ; BSR set to: 0
  4795  000C2A  2F78               	decfsz	___ftmul@cntr& (0+255),f,b
  4796  000C2C  EF00  F006         	goto	l5995
  4797  000C30                     
  4798                           ; BSR set to: 0
  4799  000C30  C075  F060         	movff	___ftmul@f3_as_product,___ftpack@arg
  4800  000C34  C076  F061         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  4801  000C38  C077  F062         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  4802  000C3C  C074  F063         	movff	___ftmul@exp,___ftpack@exp
  4803  000C40  C079  F064         	movff	___ftmul@sign,___ftpack@sign
  4804  000C44  EC45  F007         	call	___ftpack	;wreg free
  4805  000C48  C060  F06B         	movff	?___ftpack,?___ftmul
  4806  000C4C  C061  F06C         	movff	?___ftpack+1,?___ftmul+1
  4807  000C50  C062  F06D         	movff	?___ftpack+2,?___ftmul+2
  4808  000C54                     l1335:
  4809  000C54  0012               	return		;funcret
  4810  000C56                     __end_of___ftmul:
  4811                           	callstack 0
  4812                           
  4813 ;; *************** function ___ftpack *****************
  4814 ;; Defined at:
  4815 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\float.c"
  4816 ;; Parameters:    Size  Location     Type
  4817 ;;  arg             3    0[BANK0 ] unsigned um
  4818 ;;  exp             1    3[BANK0 ] unsigned char 
  4819 ;;  sign            1    4[BANK0 ] unsigned char 
  4820 ;; Auto vars:     Size  Location     Type
  4821 ;;		None
  4822 ;; Return value:  Size  Location     Type
  4823 ;;                  3    0[BANK0 ] float 
  4824 ;; Registers used:
  4825 ;;		wreg, status,2, status,0
  4826 ;; Tracked objects:
  4827 ;;		On entry : 0/0
  4828 ;;		On exit  : 0/0
  4829 ;;		Unchanged: 0/0
  4830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4831 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4833 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4834 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4835 ;;Total ram usage:        8 bytes
  4836 ;; Hardware stack levels used: 1
  4837 ;; Hardware stack levels required when called: 5
  4838 ;; This function calls:
  4839 ;;		Nothing
  4840 ;; This function is called by:
  4841 ;;		___ftmul
  4842 ;;		___lwtoft
  4843 ;; This function uses a non-reentrant model
  4844 ;;
  4845                           
  4846                           	psect	text36
  4847  000E8A                     __ptext36:
  4848                           	callstack 0
  4849  000E8A                     ___ftpack:
  4850                           	callstack 23
  4851  000E8A  0100               	movlb	0	; () banked
  4852  000E8C  5163               	movf	___ftpack@exp& (0+255),w,b
  4853  000E8E  B4D8               	btfsc	status,2,c
  4854  000E90  EF4C  F007         	goto	u3811
  4855  000E94  EF4E  F007         	goto	u3810
  4856  000E98                     u3811:
  4857  000E98  EF58  F007         	goto	l5765
  4858  000E9C                     u3810:
  4859  000E9C                     
  4860                           ; BSR set to: 0
  4861  000E9C  5160               	movf	___ftpack@arg& (0+255),w,b
  4862  000E9E  1161               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  4863  000EA0  1162               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  4864  000EA2  A4D8               	btfss	status,2,c
  4865  000EA4  EF56  F007         	goto	u3821
  4866  000EA8  EF58  F007         	goto	u3820
  4867  000EAC                     u3821:
  4868  000EAC  EF65  F007         	goto	l5771
  4869  000EB0                     u3820:
  4870  000EB0                     l5765:
  4871                           
  4872                           ; BSR set to: 0
  4873  000EB0  0E00               	movlw	0
  4874  000EB2  6F60               	movwf	?___ftpack& (0+255),b
  4875  000EB4  0E00               	movlw	0
  4876  000EB6  6F61               	movwf	(?___ftpack+1)& (0+255),b
  4877  000EB8  0E00               	movlw	0
  4878  000EBA  6F62               	movwf	(?___ftpack+2)& (0+255),b
  4879  000EBC  EFC9  F007         	goto	l1254
  4880  000EC0                     l5769:
  4881                           
  4882                           ; BSR set to: 0
  4883  000EC0  2B63               	incf	___ftpack@exp& (0+255),f,b
  4884  000EC2  90D8               	bcf	status,0,c
  4885  000EC4  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  4886  000EC6  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  4887  000EC8  3360               	rrcf	___ftpack@arg& (0+255),f,b
  4888  000ECA                     l5771:
  4889                           
  4890                           ; BSR set to: 0
  4891  000ECA  0E00               	movlw	0
  4892  000ECC  1560               	andwf	___ftpack@arg& (0+255),w,b
  4893  000ECE  6F65               	movwf	??___ftpack& (0+255),b
  4894  000ED0  0E00               	movlw	0
  4895  000ED2  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
  4896  000ED4  6F66               	movwf	(??___ftpack+1)& (0+255),b
  4897  000ED6  0EFE               	movlw	254
  4898  000ED8  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
  4899  000EDA  6F67               	movwf	(??___ftpack+2)& (0+255),b
  4900  000EDC  5165               	movf	??___ftpack& (0+255),w,b
  4901  000EDE  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
  4902  000EE0  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
  4903  000EE2  A4D8               	btfss	status,2,c
  4904  000EE4  EF76  F007         	goto	u3831
  4905  000EE8  EF78  F007         	goto	u3830
  4906  000EEC                     u3831:
  4907  000EEC  EF60  F007         	goto	l5769
  4908  000EF0                     u3830:
  4909  000EF0  EF85  F007         	goto	l5777
  4910  000EF4                     l5773:
  4911                           
  4912                           ; BSR set to: 0
  4913  000EF4  2B63               	incf	___ftpack@exp& (0+255),f,b
  4914  000EF6                     
  4915                           ; BSR set to: 0
  4916  000EF6  0E01               	movlw	1
  4917  000EF8  2760               	addwf	___ftpack@arg& (0+255),f,b
  4918  000EFA  0E00               	movlw	0
  4919  000EFC  2361               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  4920  000EFE  0E00               	movlw	0
  4921  000F00  2362               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  4922  000F02  90D8               	bcf	status,0,c
  4923  000F04  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  4924  000F06  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  4925  000F08  3360               	rrcf	___ftpack@arg& (0+255),f,b
  4926  000F0A                     l5777:
  4927                           
  4928                           ; BSR set to: 0
  4929  000F0A  0E00               	movlw	0
  4930  000F0C  1560               	andwf	___ftpack@arg& (0+255),w,b
  4931  000F0E  6F65               	movwf	??___ftpack& (0+255),b
  4932  000F10  0E00               	movlw	0
  4933  000F12  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
  4934  000F14  6F66               	movwf	(??___ftpack+1)& (0+255),b
  4935  000F16  0EFF               	movlw	255
  4936  000F18  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
  4937  000F1A  6F67               	movwf	(??___ftpack+2)& (0+255),b
  4938  000F1C  5165               	movf	??___ftpack& (0+255),w,b
  4939  000F1E  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
  4940  000F20  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
  4941  000F22  A4D8               	btfss	status,2,c
  4942  000F24  EF96  F007         	goto	u3841
  4943  000F28  EF98  F007         	goto	u3840
  4944  000F2C                     u3841:
  4945  000F2C  EF7A  F007         	goto	l5773
  4946  000F30                     u3840:
  4947  000F30  EF9F  F007         	goto	l5781
  4948  000F34                     l5779:
  4949                           
  4950                           ; BSR set to: 0
  4951  000F34  0763               	decf	___ftpack@exp& (0+255),f,b
  4952  000F36  90D8               	bcf	status,0,c
  4953  000F38  3760               	rlcf	___ftpack@arg& (0+255),f,b
  4954  000F3A  3761               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  4955  000F3C  3762               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  4956  000F3E                     l5781:
  4957                           
  4958                           ; BSR set to: 0
  4959  000F3E  BF61               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  4960  000F40  EFA4  F007         	goto	u3851
  4961  000F44  EFA6  F007         	goto	u3850
  4962  000F48                     u3851:
  4963  000F48  EFAE  F007         	goto	l1265
  4964  000F4C                     u3850:
  4965  000F4C                     
  4966                           ; BSR set to: 0
  4967  000F4C  0E02               	movlw	2
  4968  000F4E  6163               	cpfslt	___ftpack@exp& (0+255),b
  4969  000F50  EFAC  F007         	goto	u3861
  4970  000F54  EFAE  F007         	goto	u3860
  4971  000F58                     u3861:
  4972  000F58  EF9A  F007         	goto	l5779
  4973  000F5C                     u3860:
  4974  000F5C                     l1265:
  4975                           
  4976                           ; BSR set to: 0
  4977  000F5C  B163               	btfsc	___ftpack@exp& (0+255),0,b
  4978  000F5E  EFB3  F007         	goto	u3871
  4979  000F62  EFB5  F007         	goto	u3870
  4980  000F66                     u3871:
  4981  000F66  EFB6  F007         	goto	l5787
  4982  000F6A                     u3870:
  4983  000F6A                     
  4984                           ; BSR set to: 0
  4985  000F6A  9F61               	bcf	(___ftpack@arg+1)& (0+255),7,b
  4986  000F6C                     l5787:
  4987                           
  4988                           ; BSR set to: 0
  4989  000F6C  90D8               	bcf	status,0,c
  4990  000F6E  3363               	rrcf	___ftpack@exp& (0+255),f,b
  4991  000F70  5163               	movf	___ftpack@exp& (0+255),w,b
  4992  000F72  1362               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  4993  000F74                     
  4994                           ; BSR set to: 0
  4995  000F74  5164               	movf	___ftpack@sign& (0+255),w,b
  4996  000F76  B4D8               	btfsc	status,2,c
  4997  000F78  EFC0  F007         	goto	u3881
  4998  000F7C  EFC2  F007         	goto	u3880
  4999  000F80                     u3881:
  5000  000F80  EFC3  F007         	goto	l5793
  5001  000F84                     u3880:
  5002  000F84                     
  5003                           ; BSR set to: 0
  5004  000F84  8F62               	bsf	(___ftpack@arg+2)& (0+255),7,b
  5005  000F86                     l5793:
  5006                           
  5007                           ; BSR set to: 0
  5008  000F86  C060  F060         	movff	___ftpack@arg,?___ftpack
  5009  000F8A  C061  F061         	movff	___ftpack@arg+1,?___ftpack+1
  5010  000F8E  C062  F062         	movff	___ftpack@arg+2,?___ftpack+2
  5011  000F92                     l1254:
  5012                           
  5013                           ; BSR set to: 0
  5014  000F92  0012               	return		;funcret
  5015  000F94                     __end_of___ftpack:
  5016                           	callstack 0
  5017                           
  5018 ;; *************** function _ADCC_GetSingleConversion *****************
  5019 ;; Defined at:
  5020 ;;		line 136 in file "mcc_generated_files/adcc.c"
  5021 ;; Parameters:    Size  Location     Type
  5022 ;;  channel         1    wreg     enum E22457
  5023 ;; Auto vars:     Size  Location     Type
  5024 ;;  channel         1    4[BANK0 ] enum E22457
  5025 ;; Return value:  Size  Location     Type
  5026 ;;                  2    0[BANK0 ] unsigned int 
  5027 ;; Registers used:
  5028 ;;		wreg, status,2, status,0
  5029 ;; Tracked objects:
  5030 ;;		On entry : 0/0
  5031 ;;		On exit  : 0/0
  5032 ;;		Unchanged: 0/0
  5033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5034 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5035 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5036 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5037 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5038 ;;Total ram usage:        5 bytes
  5039 ;; Hardware stack levels used: 1
  5040 ;; Hardware stack levels required when called: 5
  5041 ;; This function calls:
  5042 ;;		Nothing
  5043 ;; This function is called by:
  5044 ;;		_check_battery_voltage_error
  5045 ;;		_check_bus_current_error
  5046 ;; This function uses a non-reentrant model
  5047 ;;
  5048                           
  5049                           	psect	text37
  5050  001A80                     __ptext37:
  5051                           	callstack 0
  5052  001A80                     _ADCC_GetSingleConversion:
  5053                           	callstack 24
  5054                           
  5055                           ; BSR set to: 0
  5056                           ;incstack = 0
  5057                           ;ADCC_GetSingleConversion@channel stored from wreg
  5058  001A80  0100               	movlb	0	; () banked
  5059  001A82  6F64               	movwf	ADCC_GetSingleConversion@channel& (0+255),b
  5060  001A84                     
  5061                           ;adcc.c: 139: ADPCH = channel;
  5062  001A84  0060  F193  FEF1   	movff	ADCC_GetSingleConversion@channel,16113	;volatile
  5063  001A8A                     
  5064                           ;adcc.c: 142: ADCON0bits.ADON = 1;
  5065  001A8A  013E               	movlb	62	; () banked
  5066  001A8C  8FF8               	bsf	248,7,b	;volatile
  5067  001A8E                     
  5068                           ; BSR set to: 62
  5069                           ;adcc.c: 145: ADCON0bits.ADCONT = 0;
  5070  001A8E  9DF8               	bcf	248,6,b	;volatile
  5071  001A90                     
  5072                           ; BSR set to: 62
  5073                           ;adcc.c: 148: ADCON0bits.ADGO = 1;
  5074  001A90  81F8               	bsf	248,0,b	;volatile
  5075  001A92                     l177:
  5076                           
  5077                           ; BSR set to: 62
  5078  001A92  B1F8               	btfsc	248,0,b	;volatile
  5079  001A94  EF4E  F00D         	goto	u3921
  5080  001A98  EF50  F00D         	goto	u3920
  5081  001A9C                     u3921:
  5082  001A9C  EF49  F00D         	goto	l177
  5083  001AA0                     u3920:
  5084  001AA0                     
  5085                           ; BSR set to: 62
  5086                           ;adcc.c: 154: };adcc.c: 158: return ((adc_result_t)((ADRESH << 8) + ADRESL));
  5087  001AA0  51F0               	movf	240,w,b	;volatile
  5088  001AA2  0100               	movlb	0	; () banked
  5089  001AA4  6F63               	movwf	(??_ADCC_GetSingleConversion+1)& (0+255),b
  5090  001AA6  6B62               	clrf	??_ADCC_GetSingleConversion& (0+255),b
  5091  001AA8  013E               	movlb	62	; () banked
  5092  001AAA  51EF               	movf	239,w,b	;volatile
  5093  001AAC  0100               	movlb	0	; () banked
  5094  001AAE  2562               	addwf	??_ADCC_GetSingleConversion& (0+255),w,b
  5095  001AB0  6F60               	movwf	?_ADCC_GetSingleConversion& (0+255),b
  5096  001AB2  013E               	movlb	62	; () banked
  5097  001AB4  0E00               	movlw	0
  5098  001AB6  0100               	movlb	0	; () banked
  5099  001AB8  2163               	addwfc	(??_ADCC_GetSingleConversion+1)& (0+255),w,b
  5100  001ABA  6F61               	movwf	(?_ADCC_GetSingleConversion+1)& (0+255),b
  5101  001ABC                     
  5102                           ; BSR set to: 0
  5103  001ABC  0012               	return		;funcret
  5104  001ABE                     __end_of_ADCC_GetSingleConversion:
  5105                           	callstack 0
  5106                           
  5107 ;; *************** function _can_init *****************
  5108 ;; Defined at:
  5109 ;;		line 16 in file "canlib/pic18f26k83/pic18f26k83_can.c"
  5110 ;; Parameters:    Size  Location     Type
  5111 ;;  timing          2    0[BANK0 ] PTR const struct .
  5112 ;;		 -> main@can_setup(7), 
  5113 ;;  receive_call    2    2[BANK0 ] PTR FTN(PTR const struct
  5114 ;;		 -> can_msg_handler(1), 
  5115 ;; Auto vars:     Size  Location     Type
  5116 ;;		None
  5117 ;; Return value:  Size  Location     Type
  5118 ;;                  1    wreg      void 
  5119 ;; Registers used:
  5120 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5121 ;; Tracked objects:
  5122 ;;		On entry : 0/0
  5123 ;;		On exit  : 0/0
  5124 ;;		Unchanged: 0/0
  5125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5126 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5128 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5129 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5130 ;;Total ram usage:        5 bytes
  5131 ;; Hardware stack levels used: 1
  5132 ;; Hardware stack levels required when called: 5
  5133 ;; This function calls:
  5134 ;;		Nothing
  5135 ;; This function is called by:
  5136 ;;		_main
  5137 ;; This function uses a non-reentrant model
  5138 ;;
  5139                           
  5140                           	psect	text38
  5141  00083C                     __ptext38:
  5142                           	callstack 0
  5143  00083C                     _can_init:
  5144                           	callstack 25
  5145  00083C                     
  5146                           ;pic18f26k83_can.c: 19: can_rcv_cb = receive_callback;
  5147  00083C  C062  F031         	movff	can_init@receive_callback,_can_rcv_cb
  5148  000840  C063  F032         	movff	can_init@receive_callback+1,_can_rcv_cb+1
  5149  000844                     
  5150                           ;pic18f26k83_can.c: 22: CANCONbits.REQOP = 0b100;
  5151  000844  508F               	movf	143,w,c	;volatile
  5152  000846  0B1F               	andlw	-225
  5153  000848  0980               	iorlw	128
  5154  00084A  6E8F               	movwf	143,c	;volatile
  5155  00084C                     l6151:
  5156  00084C  388E               	swapf	142,w,c	;volatile
  5157  00084E  32E8               	rrcf	wreg,f,c
  5158  000850  0B07               	andlw	7
  5159  000852  0A04               	xorlw	4
  5160  000854  A4D8               	btfss	status,2,c
  5161  000856  EF2F  F004         	goto	u4151
  5162  00085A  EF31  F004         	goto	u4150
  5163  00085E                     u4151:
  5164  00085E  EF26  F004         	goto	l6151
  5165  000862                     u4150:
  5166  000862                     
  5167                           ;pic18f26k83_can.c: 28: ECANCONbits.MDSEL = 0;
  5168  000862  0E3F               	movlw	-193
  5169  000864  1691               	andwf	145,f,c	;volatile
  5170  000866                     
  5171                           ;pic18f26k83_can.c: 32: CIOCONbits.CLKSEL = 0;
  5172  000866  0137               	movlb	55	; () banked
  5173  000868  9100               	bcf	0,0,b	;volatile
  5174  00086A                     
  5175                           ; BSR set to: 55
  5176                           ;pic18f26k83_can.c: 34: BRGCON1bits.SJW = timing->sjw;
  5177  00086A  0100               	movlb	0	; () banked
  5178  00086C  EE20 F001          	lfsr	2,1
  5179  000870  5160               	movf	can_init@timing& (0+255),w,b
  5180  000872  26D9               	addwf	fsr2l,f,c
  5181  000874  5161               	movf	(can_init@timing+1)& (0+255),w,b
  5182  000876  22DA               	addwfc	fsr2h,f,c
  5183  000878  50DF               	movf	indf2,w,c
  5184  00087A  6F64               	movwf	??_can_init& (0+255),b
  5185  00087C  3B64               	swapf	??_can_init& (0+255),f,b
  5186  00087E  4764               	rlncf	??_can_init& (0+255),f,b
  5187  000880  4764               	rlncf	??_can_init& (0+255),f,b
  5188  000882  0137               	movlb	55	; () banked
  5189  000884  5103               	movf	3,w,b	;volatile
  5190  000886  0100               	movlb	0	; () banked
  5191  000888  1964               	xorwf	??_can_init& (0+255),w,b
  5192  00088A  0B3F               	andlw	-193
  5193  00088C  1964               	xorwf	??_can_init& (0+255),w,b
  5194  00088E  0137               	movlb	55	; () banked
  5195  000890  6F03               	movwf	3,b	;volatile
  5196  000892                     
  5197                           ; BSR set to: 55
  5198                           ;pic18f26k83_can.c: 35: BRGCON1bits.BRP = timing->brp;
  5199  000892  0060  F183  FFD9   	movff	can_init@timing,fsr2l
  5200  000898  0060  F187  FFDA   	movff	can_init@timing+1,fsr2h
  5201  00089E  50DF               	movf	indf2,w,c
  5202  0008A0  0100               	movlb	0	; () banked
  5203  0008A2  6F64               	movwf	??_can_init& (0+255),b
  5204  0008A4  0137               	movlb	55	; () banked
  5205  0008A6  5103               	movf	3,w,b	;volatile
  5206  0008A8  0100               	movlb	0	; () banked
  5207  0008AA  1964               	xorwf	??_can_init& (0+255),w,b
  5208  0008AC  0BC0               	andlw	-64
  5209  0008AE  1964               	xorwf	??_can_init& (0+255),w,b
  5210  0008B0  0137               	movlb	55	; () banked
  5211  0008B2  6F03               	movwf	3,b	;volatile
  5212  0008B4                     
  5213                           ; BSR set to: 55
  5214                           ;pic18f26k83_can.c: 36: BRGCON2bits.SEG2PHTS = timing->btlmode;
  5215  0008B4  0100               	movlb	0	; () banked
  5216  0008B6  EE20 F006          	lfsr	2,6
  5217  0008BA  5160               	movf	can_init@timing& (0+255),w,b
  5218  0008BC  26D9               	addwf	fsr2l,f,c
  5219  0008BE  5161               	movf	(can_init@timing+1)& (0+255),w,b
  5220  0008C0  22DA               	addwfc	fsr2h,f,c
  5221  0008C2  50DF               	movf	indf2,w,c
  5222  0008C4  6F64               	movwf	??_can_init& (0+255),b
  5223  0008C6  3364               	rrcf	??_can_init& (0+255),f,b
  5224  0008C8  3364               	rrcf	??_can_init& (0+255),f,b
  5225  0008CA  0137               	movlb	55	; () banked
  5226  0008CC  5104               	movf	4,w,b	;volatile
  5227  0008CE  0100               	movlb	0	; () banked
  5228  0008D0  1964               	xorwf	??_can_init& (0+255),w,b
  5229  0008D2  0B7F               	andlw	-129
  5230  0008D4  1964               	xorwf	??_can_init& (0+255),w,b
  5231  0008D6  0137               	movlb	55	; () banked
  5232  0008D8  6F04               	movwf	4,b	;volatile
  5233  0008DA                     
  5234                           ; BSR set to: 55
  5235                           ;pic18f26k83_can.c: 37: BRGCON2bits.SAM = timing->sam;
  5236  0008DA  0100               	movlb	0	; () banked
  5237  0008DC  EE20 F002          	lfsr	2,2
  5238  0008E0  5160               	movf	can_init@timing& (0+255),w,b
  5239  0008E2  26D9               	addwf	fsr2l,f,c
  5240  0008E4  5161               	movf	(can_init@timing+1)& (0+255),w,b
  5241  0008E6  22DA               	addwfc	fsr2h,f,c
  5242  0008E8  50DF               	movf	indf2,w,c
  5243  0008EA  6F64               	movwf	??_can_init& (0+255),b
  5244  0008EC  3B64               	swapf	??_can_init& (0+255),f,b
  5245  0008EE  4764               	rlncf	??_can_init& (0+255),f,b
  5246  0008F0  4764               	rlncf	??_can_init& (0+255),f,b
  5247  0008F2  0137               	movlb	55	; () banked
  5248  0008F4  5104               	movf	4,w,b	;volatile
  5249  0008F6  0100               	movlb	0	; () banked
  5250  0008F8  1964               	xorwf	??_can_init& (0+255),w,b
  5251  0008FA  0BBF               	andlw	-65
  5252  0008FC  1964               	xorwf	??_can_init& (0+255),w,b
  5253  0008FE  0137               	movlb	55	; () banked
  5254  000900  6F04               	movwf	4,b	;volatile
  5255  000902                     
  5256                           ; BSR set to: 55
  5257                           ;pic18f26k83_can.c: 38: BRGCON2bits.SEG1PH = timing->seg1ph;
  5258  000902  0100               	movlb	0	; () banked
  5259  000904  EE20 F003          	lfsr	2,3
  5260  000908  5160               	movf	can_init@timing& (0+255),w,b
  5261  00090A  26D9               	addwf	fsr2l,f,c
  5262  00090C  5161               	movf	(can_init@timing+1)& (0+255),w,b
  5263  00090E  22DA               	addwfc	fsr2h,f,c
  5264  000910  50DF               	movf	indf2,w,c
  5265  000912  6F64               	movwf	??_can_init& (0+255),b
  5266  000914  4764               	rlncf	??_can_init& (0+255),f,b
  5267  000916  4764               	rlncf	??_can_init& (0+255),f,b
  5268  000918  4764               	rlncf	??_can_init& (0+255),f,b
  5269  00091A  0137               	movlb	55	; () banked
  5270  00091C  5104               	movf	4,w,b	;volatile
  5271  00091E  0100               	movlb	0	; () banked
  5272  000920  1964               	xorwf	??_can_init& (0+255),w,b
  5273  000922  0BC7               	andlw	-57
  5274  000924  1964               	xorwf	??_can_init& (0+255),w,b
  5275  000926  0137               	movlb	55	; () banked
  5276  000928  6F04               	movwf	4,b	;volatile
  5277  00092A                     
  5278                           ; BSR set to: 55
  5279                           ;pic18f26k83_can.c: 39: BRGCON2bits.PRSEG = timing->prseg;
  5280  00092A  0100               	movlb	0	; () banked
  5281  00092C  EE20 F005          	lfsr	2,5
  5282  000930  5160               	movf	can_init@timing& (0+255),w,b
  5283  000932  26D9               	addwf	fsr2l,f,c
  5284  000934  5161               	movf	(can_init@timing+1)& (0+255),w,b
  5285  000936  22DA               	addwfc	fsr2h,f,c
  5286  000938  50DF               	movf	indf2,w,c
  5287  00093A  6F64               	movwf	??_can_init& (0+255),b
  5288  00093C  0137               	movlb	55	; () banked
  5289  00093E  5104               	movf	4,w,b	;volatile
  5290  000940  0100               	movlb	0	; () banked
  5291  000942  1964               	xorwf	??_can_init& (0+255),w,b
  5292  000944  0BF8               	andlw	-8
  5293  000946  1964               	xorwf	??_can_init& (0+255),w,b
  5294  000948  0137               	movlb	55	; () banked
  5295  00094A  6F04               	movwf	4,b	;volatile
  5296  00094C                     
  5297                           ; BSR set to: 55
  5298                           ;pic18f26k83_can.c: 40: BRGCON3bits.SEG2PH = timing->seg2ph;
  5299  00094C  0100               	movlb	0	; () banked
  5300  00094E  EE20 F004          	lfsr	2,4
  5301  000952  5160               	movf	can_init@timing& (0+255),w,b
  5302  000954  26D9               	addwf	fsr2l,f,c
  5303  000956  5161               	movf	(can_init@timing+1)& (0+255),w,b
  5304  000958  22DA               	addwfc	fsr2h,f,c
  5305  00095A  50DF               	movf	indf2,w,c
  5306  00095C  6F64               	movwf	??_can_init& (0+255),b
  5307  00095E  0137               	movlb	55	; () banked
  5308  000960  5105               	movf	5,w,b	;volatile
  5309  000962  0100               	movlb	0	; () banked
  5310  000964  1964               	xorwf	??_can_init& (0+255),w,b
  5311  000966  0BF8               	andlw	-8
  5312  000968  1964               	xorwf	??_can_init& (0+255),w,b
  5313  00096A  0137               	movlb	55	; () banked
  5314  00096C  6F05               	movwf	5,b	;volatile
  5315  00096E                     
  5316                           ; BSR set to: 55
  5317                           ;pic18f26k83_can.c: 46: BRGCON3bits.WAKDIS = 1;
  5318  00096E  8F05               	bsf	5,7,b	;volatile
  5319  000970                     
  5320                           ; BSR set to: 55
  5321                           ;pic18f26k83_can.c: 47: BRGCON3bits.WAKFIL = 0;
  5322  000970  9D05               	bcf	5,6,b	;volatile
  5323  000972                     
  5324                           ; BSR set to: 55
  5325                           ;pic18f26k83_can.c: 51: RXM0SIDH = 0;
  5326  000972  0E00               	movlw	0
  5327  000974  6FB8               	movwf	184,b	;volatile
  5328  000976                     
  5329                           ; BSR set to: 55
  5330                           ;pic18f26k83_can.c: 52: RXM0SIDL = 0;
  5331  000976  0E00               	movlw	0
  5332  000978  6FB9               	movwf	185,b	;volatile
  5333  00097A                     
  5334                           ; BSR set to: 55
  5335                           ;pic18f26k83_can.c: 53: RXM1SIDH = 0;
  5336  00097A  0E00               	movlw	0
  5337  00097C  6FBC               	movwf	188,b	;volatile
  5338  00097E                     
  5339                           ; BSR set to: 55
  5340                           ;pic18f26k83_can.c: 54: RXM1SIDL = 0;
  5341  00097E  0E00               	movlw	0
  5342  000980  6FBD               	movwf	189,b	;volatile
  5343  000982                     
  5344                           ; BSR set to: 55
  5345                           ;pic18f26k83_can.c: 58: RXB0CONbits.RXM0 = 1;
  5346  000982  8A80               	bsf	128,5,c	;volatile
  5347  000984                     
  5348                           ; BSR set to: 55
  5349                           ;pic18f26k83_can.c: 59: RXB0CONbits.RXM1 = 1;
  5350  000984  8C80               	bsf	128,6,c	;volatile
  5351  000986                     
  5352                           ; BSR set to: 55
  5353                           ;pic18f26k83_can.c: 62: RXB0CONbits.RB0DBEN = 1;
  5354  000986  8480               	bsf	128,2,c	;volatile
  5355  000988                     
  5356                           ; BSR set to: 55
  5357                           ;pic18f26k83_can.c: 66: PIE5bits.IRXIE = 1;
  5358  000988  0139               	movlb	57	; () banked
  5359  00098A  8F95               	bsf	149,7,b	;volatile
  5360  00098C                     
  5361                           ; BSR set to: 57
  5362                           ;pic18f26k83_can.c: 68: PIE5bits.WAKIE = 0;
  5363  00098C  9D95               	bcf	149,6,b	;volatile
  5364  00098E                     
  5365                           ; BSR set to: 57
  5366                           ;pic18f26k83_can.c: 70: PIE5bits.ERRIE = 1;
  5367  00098E  8B95               	bsf	149,5,b	;volatile
  5368  000990                     
  5369                           ; BSR set to: 57
  5370                           ;pic18f26k83_can.c: 72: PIE5bits.TXB2IE = 0;
  5371  000990  9995               	bcf	149,4,b	;volatile
  5372  000992                     
  5373                           ; BSR set to: 57
  5374                           ;pic18f26k83_can.c: 73: PIE5bits.TXB1IE = 0;
  5375  000992  9795               	bcf	149,3,b	;volatile
  5376  000994                     
  5377                           ; BSR set to: 57
  5378                           ;pic18f26k83_can.c: 74: PIE5bits.TXB0IE = 0;
  5379  000994  9595               	bcf	149,2,b	;volatile
  5380  000996                     
  5381                           ; BSR set to: 57
  5382                           ;pic18f26k83_can.c: 76: PIE5bits.RXB1IE = 1;
  5383  000996  8395               	bsf	149,1,b	;volatile
  5384  000998                     
  5385                           ; BSR set to: 57
  5386                           ;pic18f26k83_can.c: 77: PIE5bits.RXB0IE = 1;
  5387  000998  8195               	bsf	149,0,b	;volatile
  5388  00099A                     
  5389                           ; BSR set to: 57
  5390                           ;pic18f26k83_can.c: 80: CANCONbits.REQOP = 0;
  5391  00099A  0E1F               	movlw	-225
  5392  00099C  168F               	andwf	143,f,c	;volatile
  5393  00099E                     l6207:
  5394  00099E  388E               	swapf	142,w,c	;volatile
  5395  0009A0  32E8               	rrcf	wreg,f,c
  5396  0009A2  0B07               	andlw	7
  5397  0009A4  0900               	iorlw	0
  5398  0009A6  A4D8               	btfss	status,2,c
  5399  0009A8  EFD8  F004         	goto	u4161
  5400  0009AC  EFDA  F004         	goto	u4160
  5401  0009B0                     u4161:
  5402  0009B0  EFCF  F004         	goto	l6207
  5403  0009B4                     u4160:
  5404  0009B4  0012               	return		;funcret
  5405  0009B6                     __end_of_can_init:
  5406                           	callstack 0
  5407                           
  5408 ;; *************** function _can_generate_timing_params *****************
  5409 ;; Defined at:
  5410 ;;		line 7 in file "canlib/util/timing_util.c"
  5411 ;; Parameters:    Size  Location     Type
  5412 ;;  can_frequenc    4    0[BANK0 ] unsigned long 
  5413 ;;  timing          2    4[BANK0 ] PTR struct .
  5414 ;;		 -> main@can_setup(7), 
  5415 ;; Auto vars:     Size  Location     Type
  5416 ;;		None
  5417 ;; Return value:  Size  Location     Type
  5418 ;;                  1    wreg      unsigned char 
  5419 ;; Registers used:
  5420 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5421 ;; Tracked objects:
  5422 ;;		On entry : 0/0
  5423 ;;		On exit  : 0/0
  5424 ;;		Unchanged: 0/0
  5425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5426 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5428 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5429 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5430 ;;Total ram usage:       10 bytes
  5431 ;; Hardware stack levels used: 1
  5432 ;; Hardware stack levels required when called: 5
  5433 ;; This function calls:
  5434 ;;		Nothing
  5435 ;; This function is called by:
  5436 ;;		_main
  5437 ;; This function uses a non-reentrant model
  5438 ;;
  5439                           
  5440                           	psect	text39
  5441  00001E                     __ptext39:
  5442                           	callstack 0
  5443  00001E                     _can_generate_timing_params:
  5444                           	callstack 25
  5445  00001E                     
  5446                           ;timing_util.c: 10: switch (can_frequency) {
  5447  00001E  EFF9  F000         	goto	l6079
  5448  000022                     l6013:
  5449                           
  5450                           ; BSR set to: 0
  5451                           ;timing_util.c: 12: timing->brp = 47;
  5452  000022  0060  F193  FFD9   	movff	can_generate_timing_params@timing,fsr2l
  5453  000028  0060  F197  FFDA   	movff	can_generate_timing_params@timing+1,fsr2h
  5454  00002E  0E2F               	movlw	47
  5455  000030  6EDF               	movwf	indf2,c
  5456  000032                     
  5457                           ; BSR set to: 0
  5458                           ;timing_util.c: 13: timing->sjw = 3;
  5459  000032  EE20 F001          	lfsr	2,1
  5460  000036  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
  5461  000038  26D9               	addwf	fsr2l,f,c
  5462  00003A  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  5463  00003C  22DA               	addwfc	fsr2h,f,c
  5464  00003E  0E03               	movlw	3
  5465  000040  6EDF               	movwf	indf2,c
  5466  000042                     
  5467                           ; BSR set to: 0
  5468                           ;timing_util.c: 14: timing->btlmode = 1;
  5469  000042  EE20 F006          	lfsr	2,6
  5470  000046  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
  5471  000048  26D9               	addwf	fsr2l,f,c
  5472  00004A  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  5473  00004C  22DA               	addwfc	fsr2h,f,c
  5474  00004E  0E01               	movlw	1
  5475  000050  6EDF               	movwf	indf2,c
  5476  000052                     
  5477                           ; BSR set to: 0
  5478                           ;timing_util.c: 15: timing->sam = 0;
  5479  000052  EE20 F002          	lfsr	2,2
  5480  000056  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
  5481  000058  26D9               	addwf	fsr2l,f,c
  5482  00005A  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  5483  00005C  22DA               	addwfc	fsr2h,f,c
  5484  00005E  0E00               	movlw	0
  5485  000060  6EDF               	movwf	indf2,c
  5486  000062                     
  5487                           ; BSR set to: 0
  5488                           ;timing_util.c: 16: timing->seg1ph = 4;
  5489  000062  EE20 F003          	lfsr	2,3
  5490  000066  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
  5491  000068  26D9               	addwf	fsr2l,f,c
  5492  00006A  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  5493  00006C  22DA               	addwfc	fsr2h,f,c
  5494  00006E  0E04               	movlw	4
  5495  000070  6EDF               	movwf	indf2,c
  5496  000072                     
  5497                           ; BSR set to: 0
  5498                           ;timing_util.c: 17: timing->prseg = 0;
  5499  000072  EE20 F005          	lfsr	2,5
  5500  000076  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
  5501  000078  26D9               	addwf	fsr2l,f,c
  5502  00007A  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  5503  00007C  22DA               	addwfc	fsr2h,f,c
  5504  00007E  0E00               	movlw	0
  5505  000080  6EDF               	movwf	indf2,c
  5506  000082                     
  5507                           ; BSR set to: 0
  5508                           ;timing_util.c: 18: timing->seg2ph = 4;
  5509  000082  EE20 F004          	lfsr	2,4
  5510  000086  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
  5511  000088  26D9               	addwf	fsr2l,f,c
  5512  00008A  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  5513  00008C  22DA               	addwfc	fsr2h,f,c
  5514  00008E  0E04               	movlw	4
  5515  000090  6EDF               	movwf	indf2,c
  5516  000092  EF62  F001         	goto	l812
  5517  000096                     l6029:
  5518                           
  5519                           ; BSR set to: 0
  5520                           ;timing_util.c: 21: timing->brp = 31;
  5521  000096  0060  F193  FFD9   	movff	can_generate_timing_params@timing,fsr2l
  5522  00009C  0060  F197  FFDA   	movff	can_generate_timing_params@timing+1,fsr2h
  5523  0000A2  0E1F               	movlw	31
  5524  0000A4  6EDF               	movwf	indf2,c
  5525  0000A6                     
  5526                           ; BSR set to: 0
  5527                           ;timing_util.c: 22: timing->sjw = 3;
  5528  0000A6  EE20 F001          	lfsr	2,1
  5529  0000AA  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
  5530  0000AC  26D9               	addwf	fsr2l,f,c
  5531  0000AE  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  5532  0000B0  22DA               	addwfc	fsr2h,f,c
  5533  0000B2  0E03               	movlw	3
  5534  0000B4  6EDF               	movwf	indf2,c
  5535  0000B6                     
  5536                           ; BSR set to: 0
  5537                           ;timing_util.c: 23: timing->btlmode = 1;
  5538  0000B6  EE20 F006          	lfsr	2,6
  5539  0000BA  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
  5540  0000BC  26D9               	addwf	fsr2l,f,c
  5541  0000BE  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  5542  0000C0  22DA               	addwfc	fsr2h,f,c
  5543  0000C2  0E01               	movlw	1
  5544  0000C4  6EDF               	movwf	indf2,c
  5545  0000C6                     
  5546                           ; BSR set to: 0
  5547                           ;timing_util.c: 24: timing->sam = 0;
  5548  0000C6  EE20 F002          	lfsr	2,2
  5549  0000CA  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
  5550  0000CC  26D9               	addwf	fsr2l,f,c
  5551  0000CE  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  5552  0000D0  22DA               	addwfc	fsr2h,f,c
  5553  0000D2  0E00               	movlw	0
  5554  0000D4  6EDF               	movwf	indf2,c
  5555  0000D6                     
  5556                           ; BSR set to: 0
  5557                           ;timing_util.c: 25: timing->seg1ph = 4;
  5558  0000D6  EE20 F003          	lfsr	2,3
  5559  0000DA  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
  5560  0000DC  26D9               	addwf	fsr2l,f,c
  5561  0000DE  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  5562  0000E0  22DA               	addwfc	fsr2h,f,c
  5563  0000E2  0E04               	movlw	4
  5564  0000E4  6EDF               	movwf	indf2,c
  5565  0000E6                     
  5566                           ; BSR set to: 0
  5567                           ;timing_util.c: 26: timing->prseg = 0;
  5568  0000E6  EE20 F005          	lfsr	2,5
  5569  0000EA  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
  5570  0000EC  26D9               	addwf	fsr2l,f,c
  5571  0000EE  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  5572  0000F0  22DA               	addwfc	fsr2h,f,c
  5573  0000F2  0E00               	movlw	0
  5574  0000F4  6EDF               	movwf	indf2,c
  5575  0000F6                     
  5576                           ; BSR set to: 0
  5577                           ;timing_util.c: 27: timing->seg2ph = 4;
  5578  0000F6  EE20 F004          	lfsr	2,4
  5579  0000FA  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
  5580  0000FC  26D9               	addwf	fsr2l,f,c
  5581  0000FE  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  5582  000100  22DA               	addwfc	fsr2h,f,c
  5583  000102  0E04               	movlw	4
  5584  000104  6EDF               	movwf	indf2,c
  5585  000106  EF62  F001         	goto	l812
  5586  00010A                     l6045:
  5587                           
  5588                           ; BSR set to: 0
  5589                           ;timing_util.c: 30: timing->brp = 11;
  5590  00010A  0060  F193  FFD9   	movff	can_generate_timing_params@timing,fsr2l
  5591  000110  0060  F197  FFDA   	movff	can_generate_timing_params@timing+1,fsr2h
  5592  000116  0E0B               	movlw	11
  5593  000118  6EDF               	movwf	indf2,c
  5594  00011A                     
  5595                           ; BSR set to: 0
  5596                           ;timing_util.c: 31: timing->sjw = 3;
  5597  00011A  EE20 F001          	lfsr	2,1
  5598  00011E  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
  5599  000120  26D9               	addwf	fsr2l,f,c
  5600  000122  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  5601  000124  22DA               	addwfc	fsr2h,f,c
  5602  000126  0E03               	movlw	3
  5603  000128  6EDF               	movwf	indf2,c
  5604  00012A                     
  5605                           ; BSR set to: 0
  5606                           ;timing_util.c: 32: timing->btlmode = 1;
  5607  00012A  EE20 F006          	lfsr	2,6
  5608  00012E  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
  5609  000130  26D9               	addwf	fsr2l,f,c
  5610  000132  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  5611  000134  22DA               	addwfc	fsr2h,f,c
  5612  000136  0E01               	movlw	1
  5613  000138  6EDF               	movwf	indf2,c
  5614  00013A                     
  5615                           ; BSR set to: 0
  5616                           ;timing_util.c: 33: timing->sam = 0;
  5617  00013A  EE20 F002          	lfsr	2,2
  5618  00013E  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
  5619  000140  26D9               	addwf	fsr2l,f,c
  5620  000142  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  5621  000144  22DA               	addwfc	fsr2h,f,c
  5622  000146  0E00               	movlw	0
  5623  000148  6EDF               	movwf	indf2,c
  5624  00014A                     
  5625                           ; BSR set to: 0
  5626                           ;timing_util.c: 34: timing->seg1ph = 4;
  5627  00014A  EE20 F003          	lfsr	2,3
  5628  00014E  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
  5629  000150  26D9               	addwf	fsr2l,f,c
  5630  000152  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  5631  000154  22DA               	addwfc	fsr2h,f,c
  5632  000156  0E04               	movlw	4
  5633  000158  6EDF               	movwf	indf2,c
  5634  00015A                     
  5635                           ; BSR set to: 0
  5636                           ;timing_util.c: 35: timing->prseg = 0;
  5637  00015A  EE20 F005          	lfsr	2,5
  5638  00015E  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
  5639  000160  26D9               	addwf	fsr2l,f,c
  5640  000162  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  5641  000164  22DA               	addwfc	fsr2h,f,c
  5642  000166  0E00               	movlw	0
  5643  000168  6EDF               	movwf	indf2,c
  5644  00016A                     
  5645                           ; BSR set to: 0
  5646                           ;timing_util.c: 36: timing->seg2ph = 4;
  5647  00016A  EE20 F004          	lfsr	2,4
  5648  00016E  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
  5649  000170  26D9               	addwf	fsr2l,f,c
  5650  000172  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  5651  000174  22DA               	addwfc	fsr2h,f,c
  5652  000176  0E04               	movlw	4
  5653  000178  6EDF               	movwf	indf2,c
  5654  00017A  EF62  F001         	goto	l812
  5655  00017E                     l6061:
  5656                           
  5657                           ; BSR set to: 0
  5658                           ;timing_util.c: 39: timing->brp = 0;
  5659  00017E  0060  F193  FFD9   	movff	can_generate_timing_params@timing,fsr2l
  5660  000184  0060  F197  FFDA   	movff	can_generate_timing_params@timing+1,fsr2h
  5661  00018A  0E00               	movlw	0
  5662  00018C  6EDF               	movwf	indf2,c
  5663  00018E                     
  5664                           ; BSR set to: 0
  5665                           ;timing_util.c: 40: timing->sjw = 3;
  5666  00018E  EE20 F001          	lfsr	2,1
  5667  000192  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
  5668  000194  26D9               	addwf	fsr2l,f,c
  5669  000196  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  5670  000198  22DA               	addwfc	fsr2h,f,c
  5671  00019A  0E03               	movlw	3
  5672  00019C  6EDF               	movwf	indf2,c
  5673  00019E                     
  5674                           ; BSR set to: 0
  5675                           ;timing_util.c: 41: timing->btlmode = 1;
  5676  00019E  EE20 F006          	lfsr	2,6
  5677  0001A2  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
  5678  0001A4  26D9               	addwf	fsr2l,f,c
  5679  0001A6  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  5680  0001A8  22DA               	addwfc	fsr2h,f,c
  5681  0001AA  0E01               	movlw	1
  5682  0001AC  6EDF               	movwf	indf2,c
  5683  0001AE                     
  5684                           ; BSR set to: 0
  5685                           ;timing_util.c: 42: timing->sam = 0;
  5686  0001AE  EE20 F002          	lfsr	2,2
  5687  0001B2  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
  5688  0001B4  26D9               	addwf	fsr2l,f,c
  5689  0001B6  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  5690  0001B8  22DA               	addwfc	fsr2h,f,c
  5691  0001BA  0E00               	movlw	0
  5692  0001BC  6EDF               	movwf	indf2,c
  5693  0001BE                     
  5694                           ; BSR set to: 0
  5695                           ;timing_util.c: 43: timing->seg1ph = 4;
  5696  0001BE  EE20 F003          	lfsr	2,3
  5697  0001C2  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
  5698  0001C4  26D9               	addwf	fsr2l,f,c
  5699  0001C6  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  5700  0001C8  22DA               	addwfc	fsr2h,f,c
  5701  0001CA  0E04               	movlw	4
  5702  0001CC  6EDF               	movwf	indf2,c
  5703  0001CE                     
  5704                           ; BSR set to: 0
  5705                           ;timing_util.c: 44: timing->prseg = 0;
  5706  0001CE  EE20 F005          	lfsr	2,5
  5707  0001D2  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
  5708  0001D4  26D9               	addwf	fsr2l,f,c
  5709  0001D6  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  5710  0001D8  22DA               	addwfc	fsr2h,f,c
  5711  0001DA  0E00               	movlw	0
  5712  0001DC  6EDF               	movwf	indf2,c
  5713  0001DE                     
  5714                           ; BSR set to: 0
  5715                           ;timing_util.c: 45: timing->seg2ph = 4;
  5716  0001DE  EE20 F004          	lfsr	2,4
  5717  0001E2  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
  5718  0001E4  26D9               	addwf	fsr2l,f,c
  5719  0001E6  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  5720  0001E8  22DA               	addwfc	fsr2h,f,c
  5721  0001EA  0E04               	movlw	4
  5722  0001EC  6EDF               	movwf	indf2,c
  5723  0001EE  EF62  F001         	goto	l812
  5724  0001F2                     l6079:
  5725  0001F2  C060  F066         	movff	can_generate_timing_params@can_frequency,??_can_generate_timing_params
  5726  0001F6  C061  F067         	movff	can_generate_timing_params@can_frequency+1,??_can_generate_timing_params+1
  5727  0001FA  C062  F068         	movff	can_generate_timing_params@can_frequency+2,??_can_generate_timing_params+2
  5728  0001FE  C063  F069         	movff	can_generate_timing_params@can_frequency+3,??_can_generate_timing_params+3
  5729                           
  5730                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 7 sub-sw
      +                          itches
  5731                           ; Switch size 1, requested type "simple"
  5732                           ; Number of cases is 3, Range of values is 0 to 2
  5733                           ; switch strategies available:
  5734                           ; Name         Instructions Cycles
  5735                           ; simple_byte           10     6 (average)
  5736                           ;	Chosen strategy is simple_byte
  5737  000202  0100               	movlb	0	; () banked
  5738  000204  5169               	movf	(??_can_generate_timing_params+3)& (0+255),w,b
  5739  000206  0A00               	xorlw	0	; case 0
  5740  000208  B4D8               	btfsc	status,2,c
  5741  00020A  EF49  F001         	goto	l7073
  5742  00020E  0A01               	xorlw	1	; case 1
  5743  000210  B4D8               	btfsc	status,2,c
  5744  000212  EF54  F001         	goto	l7075
  5745  000216  0A03               	xorlw	3	; case 2
  5746  000218  B4D8               	btfsc	status,2,c
  5747  00021A  EF5B  F001         	goto	l7077
  5748  00021E  EF62  F001         	goto	l812
  5749  000222                     l7065:
  5750                           
  5751                           ; BSR set to: 0
  5752                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5753                           ; Switch size 1, requested type "simple"
  5754                           ; Number of cases is 1, Range of values is 66 to 66
  5755                           ; switch strategies available:
  5756                           ; Name         Instructions Cycles
  5757                           ; simple_byte            4     3 (average)
  5758                           ;	Chosen strategy is simple_byte
  5759  000222  5167               	movf	(??_can_generate_timing_params+1)& (0+255),w,b
  5760  000224  0A42               	xorlw	66	; case 66
  5761  000226  B4D8               	btfsc	status,2,c
  5762  000228  EF18  F001         	goto	l7079
  5763  00022C  EF62  F001         	goto	l812
  5764  000230                     l7079:
  5765                           
  5766                           ; BSR set to: 0
  5767                           ; Switch size 1, requested type "simple"
  5768                           ; Number of cases is 1, Range of values is 64 to 64
  5769                           ; switch strategies available:
  5770                           ; Name         Instructions Cycles
  5771                           ; simple_byte            4     3 (average)
  5772                           ;	Chosen strategy is simple_byte
  5773  000230  5166               	movf	??_can_generate_timing_params& (0+255),w,b
  5774  000232  0A40               	xorlw	64	; case 64
  5775  000234  B4D8               	btfsc	status,2,c
  5776  000236  EFBF  F000         	goto	l6061
  5777  00023A  EF62  F001         	goto	l812
  5778  00023E                     l7067:
  5779                           
  5780                           ; BSR set to: 0
  5781                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5782                           ; Switch size 1, requested type "simple"
  5783                           ; Number of cases is 1, Range of values is 27 to 27
  5784                           ; switch strategies available:
  5785                           ; Name         Instructions Cycles
  5786                           ; simple_byte            4     3 (average)
  5787                           ;	Chosen strategy is simple_byte
  5788  00023E  5167               	movf	(??_can_generate_timing_params+1)& (0+255),w,b
  5789  000240  0A1B               	xorlw	27	; case 27
  5790  000242  B4D8               	btfsc	status,2,c
  5791  000244  EF26  F001         	goto	l7081
  5792  000248  EF62  F001         	goto	l812
  5793  00024C                     l7081:
  5794                           
  5795                           ; BSR set to: 0
  5796                           ; Switch size 1, requested type "simple"
  5797                           ; Number of cases is 1, Range of values is 0 to 0
  5798                           ; switch strategies available:
  5799                           ; Name         Instructions Cycles
  5800                           ; simple_byte            4     3 (average)
  5801                           ;	Chosen strategy is simple_byte
  5802  00024C  5166               	movf	??_can_generate_timing_params& (0+255),w,b
  5803  00024E  0A00               	xorlw	0	; case 0
  5804  000250  B4D8               	btfsc	status,2,c
  5805  000252  EF85  F000         	goto	l6045
  5806  000256  EF62  F001         	goto	l812
  5807  00025A                     l7069:
  5808                           
  5809                           ; BSR set to: 0
  5810                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5811                           ; Switch size 1, requested type "simple"
  5812                           ; Number of cases is 1, Range of values is 72 to 72
  5813                           ; switch strategies available:
  5814                           ; Name         Instructions Cycles
  5815                           ; simple_byte            4     3 (average)
  5816                           ;	Chosen strategy is simple_byte
  5817  00025A  5167               	movf	(??_can_generate_timing_params+1)& (0+255),w,b
  5818  00025C  0A48               	xorlw	72	; case 72
  5819  00025E  B4D8               	btfsc	status,2,c
  5820  000260  EF34  F001         	goto	l7083
  5821  000264  EF62  F001         	goto	l812
  5822  000268                     l7083:
  5823                           
  5824                           ; BSR set to: 0
  5825                           ; Switch size 1, requested type "simple"
  5826                           ; Number of cases is 1, Range of values is 0 to 0
  5827                           ; switch strategies available:
  5828                           ; Name         Instructions Cycles
  5829                           ; simple_byte            4     3 (average)
  5830                           ;	Chosen strategy is simple_byte
  5831  000268  5166               	movf	??_can_generate_timing_params& (0+255),w,b
  5832  00026A  0A00               	xorlw	0	; case 0
  5833  00026C  B4D8               	btfsc	status,2,c
  5834  00026E  EF4B  F000         	goto	l6029
  5835  000272  EF62  F001         	goto	l812
  5836  000276                     l7071:
  5837                           
  5838                           ; BSR set to: 0
  5839                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5840                           ; Switch size 1, requested type "simple"
  5841                           ; Number of cases is 1, Range of values is 108 to 108
  5842                           ; switch strategies available:
  5843                           ; Name         Instructions Cycles
  5844                           ; simple_byte            4     3 (average)
  5845                           ;	Chosen strategy is simple_byte
  5846  000276  5167               	movf	(??_can_generate_timing_params+1)& (0+255),w,b
  5847  000278  0A6C               	xorlw	108	; case 108
  5848  00027A  B4D8               	btfsc	status,2,c
  5849  00027C  EF42  F001         	goto	l7085
  5850  000280  EF62  F001         	goto	l812
  5851  000284                     l7085:
  5852                           
  5853                           ; BSR set to: 0
  5854                           ; Switch size 1, requested type "simple"
  5855                           ; Number of cases is 1, Range of values is 0 to 0
  5856                           ; switch strategies available:
  5857                           ; Name         Instructions Cycles
  5858                           ; simple_byte            4     3 (average)
  5859                           ;	Chosen strategy is simple_byte
  5860  000284  5166               	movf	??_can_generate_timing_params& (0+255),w,b
  5861  000286  0A00               	xorlw	0	; case 0
  5862  000288  B4D8               	btfsc	status,2,c
  5863  00028A  EF11  F000         	goto	l6013
  5864  00028E  EF62  F001         	goto	l812
  5865  000292                     l7073:
  5866                           
  5867                           ; BSR set to: 0
  5868                           ; Switch size 1, requested type "simple"
  5869                           ; Number of cases is 2, Range of values is 15 to 183
  5870                           ; switch strategies available:
  5871                           ; Name         Instructions Cycles
  5872                           ; simple_byte            7     4 (average)
  5873                           ;	Chosen strategy is simple_byte
  5874  000292  5168               	movf	(??_can_generate_timing_params+2)& (0+255),w,b
  5875  000294  0A0F               	xorlw	15	; case 15
  5876  000296  B4D8               	btfsc	status,2,c
  5877  000298  EF11  F001         	goto	l7065
  5878  00029C  0AB8               	xorlw	184	; case 183
  5879  00029E  B4D8               	btfsc	status,2,c
  5880  0002A0  EF1F  F001         	goto	l7067
  5881  0002A4  EF62  F001         	goto	l812
  5882  0002A8                     l7075:
  5883                           
  5884                           ; BSR set to: 0
  5885                           ; Switch size 1, requested type "simple"
  5886                           ; Number of cases is 1, Range of values is 232 to 232
  5887                           ; switch strategies available:
  5888                           ; Name         Instructions Cycles
  5889                           ; simple_byte            4     3 (average)
  5890                           ;	Chosen strategy is simple_byte
  5891  0002A8  5168               	movf	(??_can_generate_timing_params+2)& (0+255),w,b
  5892  0002AA  0AE8               	xorlw	232	; case 232
  5893  0002AC  B4D8               	btfsc	status,2,c
  5894  0002AE  EF2D  F001         	goto	l7069
  5895  0002B2  EF62  F001         	goto	l812
  5896  0002B6                     l7077:
  5897                           
  5898                           ; BSR set to: 0
  5899                           ; Switch size 1, requested type "simple"
  5900                           ; Number of cases is 1, Range of values is 220 to 220
  5901                           ; switch strategies available:
  5902                           ; Name         Instructions Cycles
  5903                           ; simple_byte            4     3 (average)
  5904                           ;	Chosen strategy is simple_byte
  5905  0002B6  5168               	movf	(??_can_generate_timing_params+2)& (0+255),w,b
  5906  0002B8  0ADC               	xorlw	220	; case 220
  5907  0002BA  B4D8               	btfsc	status,2,c
  5908  0002BC  EF3B  F001         	goto	l7071
  5909  0002C0  EF62  F001         	goto	l812
  5910  0002C4                     l812:
  5911                           
  5912                           ; BSR set to: 0
  5913  0002C4  0012               	return		;funcret
  5914  0002C6                     __end_of_can_generate_timing_params:
  5915                           	callstack 0
  5916                           
  5917 ;; *************** function _SYSTEM_Initialize *****************
  5918 ;; Defined at:
  5919 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5920 ;; Parameters:    Size  Location     Type
  5921 ;;		None
  5922 ;; Auto vars:     Size  Location     Type
  5923 ;;		None
  5924 ;; Return value:  Size  Location     Type
  5925 ;;                  1    wreg      void 
  5926 ;; Registers used:
  5927 ;;		wreg, status,2, status,0, cstack
  5928 ;; Tracked objects:
  5929 ;;		On entry : 0/0
  5930 ;;		On exit  : 0/0
  5931 ;;		Unchanged: 0/0
  5932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5937 ;;Total ram usage:        0 bytes
  5938 ;; Hardware stack levels used: 1
  5939 ;; Hardware stack levels required when called: 6
  5940 ;; This function calls:
  5941 ;;		_ADCC_Initialize
  5942 ;;		_FVR_Initialize
  5943 ;;		_OSCILLATOR_Initialize
  5944 ;;		_PIN_MANAGER_Initialize
  5945 ;;		_PMD_Initialize
  5946 ;; This function is called by:
  5947 ;;		_main
  5948 ;; This function uses a non-reentrant model
  5949 ;;
  5950                           
  5951                           	psect	text40
  5952  001DA6                     __ptext40:
  5953                           	callstack 0
  5954  001DA6                     _SYSTEM_Initialize:
  5955                           	callstack 24
  5956  001DA6                     
  5957                           ;mcc.c: 52: PMD_Initialize();
  5958  001DA6  ECA7  F00E         	call	_PMD_Initialize	;wreg free
  5959                           
  5960                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  5961  001DAA  EC9C  F00D         	call	_PIN_MANAGER_Initialize	;wreg free
  5962  001DAE                     
  5963                           ;mcc.c: 54: OSCILLATOR_Initialize();
  5964  001DAE  EC43  F00E         	call	_OSCILLATOR_Initialize	;wreg free
  5965  001DB2                     
  5966                           ;mcc.c: 55: ADCC_Initialize();
  5967  001DB2  EC75  F00C         	call	_ADCC_Initialize	;wreg free
  5968  001DB6                     
  5969                           ;mcc.c: 56: FVR_Initialize();
  5970  001DB6  EC13  F00F         	call	_FVR_Initialize	;wreg free
  5971  001DBA  0012               	return		;funcret
  5972  001DBC                     __end_of_SYSTEM_Initialize:
  5973                           	callstack 0
  5974                           
  5975 ;; *************** function _PMD_Initialize *****************
  5976 ;; Defined at:
  5977 ;;		line 73 in file "mcc_generated_files/mcc.c"
  5978 ;; Parameters:    Size  Location     Type
  5979 ;;		None
  5980 ;; Auto vars:     Size  Location     Type
  5981 ;;		None
  5982 ;; Return value:  Size  Location     Type
  5983 ;;                  1    wreg      void 
  5984 ;; Registers used:
  5985 ;;		wreg, status,2
  5986 ;; Tracked objects:
  5987 ;;		On entry : 0/0
  5988 ;;		On exit  : 0/0
  5989 ;;		Unchanged: 0/0
  5990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5995 ;;Total ram usage:        0 bytes
  5996 ;; Hardware stack levels used: 1
  5997 ;; Hardware stack levels required when called: 5
  5998 ;; This function calls:
  5999 ;;		Nothing
  6000 ;; This function is called by:
  6001 ;;		_SYSTEM_Initialize
  6002 ;; This function uses a non-reentrant model
  6003 ;;
  6004                           
  6005                           	psect	text41
  6006  001D4E                     __ptext41:
  6007                           	callstack 0
  6008  001D4E                     _PMD_Initialize:
  6009                           	callstack 24
  6010  001D4E                     
  6011                           ;mcc.c: 76: PMD0 = 0x00;
  6012  001D4E  0E00               	movlw	0
  6013  001D50  0139               	movlb	57	; () banked
  6014  001D52  6FC0               	movwf	192,b	;volatile
  6015                           
  6016                           ;mcc.c: 78: PMD1 = 0x00;
  6017  001D54  0E00               	movlw	0
  6018  001D56  6FC1               	movwf	193,b	;volatile
  6019                           
  6020                           ;mcc.c: 80: PMD2 = 0x00;
  6021  001D58  0E00               	movlw	0
  6022  001D5A  6FC2               	movwf	194,b	;volatile
  6023                           
  6024                           ;mcc.c: 82: PMD3 = 0x00;
  6025  001D5C  0E00               	movlw	0
  6026  001D5E  6FC3               	movwf	195,b	;volatile
  6027                           
  6028                           ;mcc.c: 84: PMD4 = 0x00;
  6029  001D60  0E00               	movlw	0
  6030  001D62  6FC4               	movwf	196,b	;volatile
  6031                           
  6032                           ;mcc.c: 86: PMD5 = 0x00;
  6033  001D64  0E00               	movlw	0
  6034  001D66  6FC5               	movwf	197,b	;volatile
  6035                           
  6036                           ;mcc.c: 88: PMD6 = 0x00;
  6037  001D68  0E00               	movlw	0
  6038  001D6A  6FC6               	movwf	198,b	;volatile
  6039                           
  6040                           ;mcc.c: 90: PMD7 = 0x00;
  6041  001D6C  0E00               	movlw	0
  6042  001D6E  6FC7               	movwf	199,b	;volatile
  6043  001D70                     
  6044                           ; BSR set to: 57
  6045  001D70  0012               	return		;funcret
  6046  001D72                     __end_of_PMD_Initialize:
  6047                           	callstack 0
  6048                           
  6049 ;; *************** function _PIN_MANAGER_Initialize *****************
  6050 ;; Defined at:
  6051 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  6052 ;; Parameters:    Size  Location     Type
  6053 ;;		None
  6054 ;; Auto vars:     Size  Location     Type
  6055 ;;		None
  6056 ;; Return value:  Size  Location     Type
  6057 ;;                  1    wreg      void 
  6058 ;; Registers used:
  6059 ;;		wreg, status,2
  6060 ;; Tracked objects:
  6061 ;;		On entry : 0/0
  6062 ;;		On exit  : 0/0
  6063 ;;		Unchanged: 0/0
  6064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6069 ;;Total ram usage:        0 bytes
  6070 ;; Hardware stack levels used: 1
  6071 ;; Hardware stack levels required when called: 5
  6072 ;; This function calls:
  6073 ;;		Nothing
  6074 ;; This function is called by:
  6075 ;;		_SYSTEM_Initialize
  6076 ;; This function uses a non-reentrant model
  6077 ;;
  6078                           
  6079                           	psect	text42
  6080  001B38                     __ptext42:
  6081                           	callstack 0
  6082  001B38                     _PIN_MANAGER_Initialize:
  6083                           	callstack 24
  6084  001B38                     
  6085                           ;pin_manager.c: 62: LATA = 0x00;
  6086  001B38  0E00               	movlw	0
  6087  001B3A  6EBA               	movwf	186,c	;volatile
  6088                           
  6089                           ;pin_manager.c: 63: LATB = 0x00;
  6090  001B3C  0E00               	movlw	0
  6091  001B3E  6EBB               	movwf	187,c	;volatile
  6092                           
  6093                           ;pin_manager.c: 64: LATC = 0x00;
  6094  001B40  0E00               	movlw	0
  6095  001B42  6EBC               	movwf	188,c	;volatile
  6096  001B44                     
  6097                           ;pin_manager.c: 69: TRISA = 0xFF;
  6098  001B44  68C2               	setf	194,c	;volatile
  6099  001B46                     
  6100                           ;pin_manager.c: 70: TRISB = 0xFF;
  6101  001B46  68C3               	setf	195,c	;volatile
  6102                           
  6103                           ;pin_manager.c: 71: TRISC = 0xE7;
  6104  001B48  0EE7               	movlw	231
  6105  001B4A  6EC4               	movwf	196,c	;volatile
  6106                           
  6107                           ;pin_manager.c: 76: ANSELC = 0xE7;
  6108  001B4C  0EE7               	movlw	231
  6109  001B4E  013A               	movlb	58	; () banked
  6110  001B50  6F60               	movwf	96,b	;volatile
  6111  001B52                     
  6112                           ; BSR set to: 58
  6113                           ;pin_manager.c: 77: ANSELB = 0xFF;
  6114  001B52  6950               	setf	80,b	;volatile
  6115  001B54                     
  6116                           ; BSR set to: 58
  6117                           ;pin_manager.c: 78: ANSELA = 0xFF;
  6118  001B54  6940               	setf	64,b	;volatile
  6119                           
  6120                           ;pin_manager.c: 83: WPUE = 0x00;
  6121  001B56  0E00               	movlw	0
  6122  001B58  6F81               	movwf	129,b	;volatile
  6123                           
  6124                           ;pin_manager.c: 84: WPUB = 0x00;
  6125  001B5A  0E00               	movlw	0
  6126  001B5C  6F51               	movwf	81,b	;volatile
  6127                           
  6128                           ;pin_manager.c: 85: WPUA = 0x00;
  6129  001B5E  0E00               	movlw	0
  6130  001B60  6F41               	movwf	65,b	;volatile
  6131                           
  6132                           ;pin_manager.c: 86: WPUC = 0x00;
  6133  001B62  0E00               	movlw	0
  6134  001B64  6F61               	movwf	97,b	;volatile
  6135                           
  6136                           ;pin_manager.c: 91: ODCONA = 0x00;
  6137  001B66  0E00               	movlw	0
  6138  001B68  6F42               	movwf	66,b	;volatile
  6139                           
  6140                           ;pin_manager.c: 92: ODCONB = 0x00;
  6141  001B6A  0E00               	movlw	0
  6142  001B6C  6F52               	movwf	82,b	;volatile
  6143                           
  6144                           ;pin_manager.c: 93: ODCONC = 0x00;
  6145  001B6E  0E00               	movlw	0
  6146  001B70  6F62               	movwf	98,b	;volatile
  6147  001B72                     
  6148                           ; BSR set to: 58
  6149  001B72  0012               	return		;funcret
  6150  001B74                     __end_of_PIN_MANAGER_Initialize:
  6151                           	callstack 0
  6152                           
  6153 ;; *************** function _OSCILLATOR_Initialize *****************
  6154 ;; Defined at:
  6155 ;;		line 59 in file "mcc_generated_files/mcc.c"
  6156 ;; Parameters:    Size  Location     Type
  6157 ;;		None
  6158 ;; Auto vars:     Size  Location     Type
  6159 ;;		None
  6160 ;; Return value:  Size  Location     Type
  6161 ;;                  1    wreg      void 
  6162 ;; Registers used:
  6163 ;;		wreg, status,2, status,0
  6164 ;; Tracked objects:
  6165 ;;		On entry : 0/0
  6166 ;;		On exit  : 0/0
  6167 ;;		Unchanged: 0/0
  6168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6173 ;;Total ram usage:        0 bytes
  6174 ;; Hardware stack levels used: 1
  6175 ;; Hardware stack levels required when called: 5
  6176 ;; This function calls:
  6177 ;;		Nothing
  6178 ;; This function is called by:
  6179 ;;		_SYSTEM_Initialize
  6180 ;;		_main
  6181 ;; This function uses a non-reentrant model
  6182 ;;
  6183                           
  6184                           	psect	text43
  6185  001C86                     __ptext43:
  6186                           	callstack 0
  6187  001C86                     _OSCILLATOR_Initialize:
  6188                           	callstack 24
  6189  001C86                     
  6190                           ;mcc.c: 63: OSCCON1 = 0b01110000;
  6191  001C86  0E70               	movlw	112
  6192  001C88  0139               	movlb	57	; () banked
  6193  001C8A  6FD9               	movwf	217,b	;volatile
  6194  001C8C                     l76:
  6195                           
  6196                           ; BSR set to: 57
  6197  001C8C  A9DB               	btfss	219,4,b	;volatile
  6198  001C8E  EF4B  F00E         	goto	u2141
  6199  001C92  EF4D  F00E         	goto	u2140
  6200  001C96                     u2141:
  6201  001C96  EF46  F00E         	goto	l76
  6202  001C9A                     u2140:
  6203  001C9A                     
  6204                           ; BSR set to: 57
  6205                           ;mcc.c: 67: if (OSCCON2 != 0b01110000) {
  6206  001C9A  0E70               	movlw	112
  6207  001C9C  19DA               	xorwf	218,w,b	;volatile
  6208  001C9E  B4D8               	btfsc	status,2,c
  6209  001CA0  EF54  F00E         	goto	u2151
  6210  001CA4  EF56  F00E         	goto	u2150
  6211  001CA8                     u2151:
  6212  001CA8  EF58  F00E         	goto	l83
  6213  001CAC                     u2150:
  6214  001CAC                     l80:
  6215  001CAC  EF56  F00E         	goto	l80
  6216  001CB0                     l83:
  6217                           
  6218                           ; BSR set to: 57
  6219  001CB0  0012               	return		;funcret
  6220  001CB2                     __end_of_OSCILLATOR_Initialize:
  6221                           	callstack 0
  6222                           
  6223 ;; *************** function _FVR_Initialize *****************
  6224 ;; Defined at:
  6225 ;;		line 58 in file "mcc_generated_files/fvr.c"
  6226 ;; Parameters:    Size  Location     Type
  6227 ;;		None
  6228 ;; Auto vars:     Size  Location     Type
  6229 ;;		None
  6230 ;; Return value:  Size  Location     Type
  6231 ;;                  1    wreg      void 
  6232 ;; Registers used:
  6233 ;;		wreg, status,2
  6234 ;; Tracked objects:
  6235 ;;		On entry : 0/0
  6236 ;;		On exit  : 0/0
  6237 ;;		Unchanged: 0/0
  6238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6243 ;;Total ram usage:        0 bytes
  6244 ;; Hardware stack levels used: 1
  6245 ;; Hardware stack levels required when called: 5
  6246 ;; This function calls:
  6247 ;;		Nothing
  6248 ;; This function is called by:
  6249 ;;		_SYSTEM_Initialize
  6250 ;;		_main
  6251 ;; This function uses a non-reentrant model
  6252 ;;
  6253                           
  6254                           	psect	text44
  6255  001E26                     __ptext44:
  6256                           	callstack 0
  6257  001E26                     _FVR_Initialize:
  6258                           	callstack 24
  6259  001E26                     
  6260                           ;fvr.c: 61: FVRCON = 0x83;
  6261  001E26  0E83               	movlw	131
  6262  001E28  013E               	movlb	62	; () banked
  6263  001E2A  6FC1               	movwf	193,b	;volatile
  6264  001E2C                     
  6265                           ; BSR set to: 62
  6266  001E2C  0012               	return		;funcret
  6267  001E2E                     __end_of_FVR_Initialize:
  6268                           	callstack 0
  6269                           
  6270 ;; *************** function _ADCC_Initialize *****************
  6271 ;; Defined at:
  6272 ;;		line 61 in file "mcc_generated_files/adcc.c"
  6273 ;; Parameters:    Size  Location     Type
  6274 ;;		None
  6275 ;; Auto vars:     Size  Location     Type
  6276 ;;		None
  6277 ;; Return value:  Size  Location     Type
  6278 ;;                  1    wreg      void 
  6279 ;; Registers used:
  6280 ;;		wreg, status,2
  6281 ;; Tracked objects:
  6282 ;;		On entry : 0/0
  6283 ;;		On exit  : 0/0
  6284 ;;		Unchanged: 0/0
  6285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6290 ;;Total ram usage:        0 bytes
  6291 ;; Hardware stack levels used: 1
  6292 ;; Hardware stack levels required when called: 5
  6293 ;; This function calls:
  6294 ;;		Nothing
  6295 ;; This function is called by:
  6296 ;;		_SYSTEM_Initialize
  6297 ;;		_main
  6298 ;; This function uses a non-reentrant model
  6299 ;;
  6300                           
  6301                           	psect	text45
  6302  0018EA                     __ptext45:
  6303                           	callstack 0
  6304  0018EA                     _ADCC_Initialize:
  6305                           	callstack 24
  6306  0018EA                     
  6307                           ;adcc.c: 65: ADLTHL = 0x00;
  6308  0018EA  0E00               	movlw	0
  6309  0018EC  013E               	movlb	62	; () banked
  6310  0018EE  6FDE               	movwf	222,b	;volatile
  6311                           
  6312                           ;adcc.c: 67: ADLTHH = 0x00;
  6313  0018F0  0E00               	movlw	0
  6314  0018F2  6FDF               	movwf	223,b	;volatile
  6315                           
  6316                           ;adcc.c: 69: ADUTHL = 0x00;
  6317  0018F4  0E00               	movlw	0
  6318  0018F6  6FE0               	movwf	224,b	;volatile
  6319                           
  6320                           ;adcc.c: 71: ADUTHH = 0x00;
  6321  0018F8  0E00               	movlw	0
  6322  0018FA  6FE1               	movwf	225,b	;volatile
  6323                           
  6324                           ;adcc.c: 73: ADSTPTL = 0x00;
  6325  0018FC  0E00               	movlw	0
  6326  0018FE  6FE4               	movwf	228,b	;volatile
  6327                           
  6328                           ;adcc.c: 75: ADSTPTH = 0x00;
  6329  001900  0E00               	movlw	0
  6330  001902  6FE5               	movwf	229,b	;volatile
  6331                           
  6332                           ;adcc.c: 77: ADACCU = 0x00;
  6333  001904  0E00               	movlw	0
  6334  001906  6FEA               	movwf	234,b	;volatile
  6335                           
  6336                           ;adcc.c: 79: ADRPT = 0x00;
  6337  001908  0E00               	movlw	0
  6338  00190A  6FEC               	movwf	236,b	;volatile
  6339                           
  6340                           ;adcc.c: 81: ADPCH = 0x00;
  6341  00190C  0E00               	movlw	0
  6342  00190E  6FF1               	movwf	241,b	;volatile
  6343                           
  6344                           ;adcc.c: 83: ADACQL = 0x00;
  6345  001910  0E00               	movlw	0
  6346  001912  6FF3               	movwf	243,b	;volatile
  6347                           
  6348                           ;adcc.c: 85: ADACQH = 0x00;
  6349  001914  0E00               	movlw	0
  6350  001916  6FF4               	movwf	244,b	;volatile
  6351                           
  6352                           ;adcc.c: 87: ADCAP = 0x00;
  6353  001918  0E00               	movlw	0
  6354  00191A  6FF5               	movwf	245,b	;volatile
  6355                           
  6356                           ;adcc.c: 89: ADPREL = 0x00;
  6357  00191C  0E00               	movlw	0
  6358  00191E  6FF6               	movwf	246,b	;volatile
  6359                           
  6360                           ;adcc.c: 91: ADPREH = 0x00;
  6361  001920  0E00               	movlw	0
  6362  001922  6FF7               	movwf	247,b	;volatile
  6363                           
  6364                           ;adcc.c: 93: ADCON1 = 0x00;
  6365  001924  0E00               	movlw	0
  6366  001926  6FF9               	movwf	249,b	;volatile
  6367                           
  6368                           ;adcc.c: 95: ADCON2 = 0x00;
  6369  001928  0E00               	movlw	0
  6370  00192A  6FFA               	movwf	250,b	;volatile
  6371                           
  6372                           ;adcc.c: 97: ADCON3 = 0x00;
  6373  00192C  0E00               	movlw	0
  6374  00192E  6FFB               	movwf	251,b	;volatile
  6375                           
  6376                           ;adcc.c: 99: ADSTAT = 0x00;
  6377  001930  0E00               	movlw	0
  6378  001932  6FFC               	movwf	252,b	;volatile
  6379                           
  6380                           ;adcc.c: 101: ADREF = 0x03;
  6381  001934  0E03               	movlw	3
  6382  001936  6FFD               	movwf	253,b	;volatile
  6383                           
  6384                           ;adcc.c: 103: ADACT = 0x00;
  6385  001938  0E00               	movlw	0
  6386  00193A  6FFE               	movwf	254,b	;volatile
  6387                           
  6388                           ;adcc.c: 105: ADCLK = 0x00;
  6389  00193C  0E00               	movlw	0
  6390  00193E  6FFF               	movwf	255,b	;volatile
  6391                           
  6392                           ;adcc.c: 107: ADCON0 = 0x84;
  6393  001940  0E84               	movlw	132
  6394  001942  6FF8               	movwf	248,b	;volatile
  6395  001944                     
  6396                           ; BSR set to: 62
  6397  001944  0012               	return		;funcret
  6398  001946                     __end_of_ADCC_Initialize:
  6399                           	callstack 0
  6400                           
  6401 ;; *************** function _LED_init *****************
  6402 ;; Defined at:
  6403 ;;		line 3 in file "vent.c"
  6404 ;; Parameters:    Size  Location     Type
  6405 ;;		None
  6406 ;; Auto vars:     Size  Location     Type
  6407 ;;		None
  6408 ;; Return value:  Size  Location     Type
  6409 ;;                  1    wreg      void 
  6410 ;; Registers used:
  6411 ;;		None
  6412 ;; Tracked objects:
  6413 ;;		On entry : 0/0
  6414 ;;		On exit  : 0/0
  6415 ;;		Unchanged: 0/0
  6416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6421 ;;Total ram usage:        0 bytes
  6422 ;; Hardware stack levels used: 1
  6423 ;; Hardware stack levels required when called: 5
  6424 ;; This function calls:
  6425 ;;		Nothing
  6426 ;; This function is called by:
  6427 ;;		_main
  6428 ;; This function uses a non-reentrant model
  6429 ;;
  6430                           
  6431                           	psect	text46
  6432  001E18                     __ptext46:
  6433                           	callstack 0
  6434  001E18                     _LED_init:
  6435                           	callstack 25
  6436  001E18                     
  6437                           ;vent.c: 4: TRISC2 = 0;
  6438  001E18  94C4               	bcf	16324,2,c	;volatile
  6439                           
  6440                           ;vent.c: 5: LATC2 = 1;
  6441  001E1A  84BC               	bsf	16316,2,c	;volatile
  6442                           
  6443                           ;vent.c: 7: TRISC3 = 0;
  6444  001E1C  96C4               	bcf	16324,3,c	;volatile
  6445                           
  6446                           ;vent.c: 8: LATC3 = 1;
  6447  001E1E  86BC               	bsf	16316,3,c	;volatile
  6448                           
  6449                           ;vent.c: 10: TRISC4 = 0;
  6450  001E20  98C4               	bcf	16324,4,c	;volatile
  6451                           
  6452                           ;vent.c: 11: LATC4 = 1;
  6453  001E22  88BC               	bsf	16316,4,c	;volatile
  6454  001E24  0012               	return		;funcret
  6455  001E26                     __end_of_LED_init:
  6456                           	callstack 0
  6457                           
  6458 ;; *************** function _ADCC_DisableContinuousConversion *****************
  6459 ;; Defined at:
  6460 ;;		line 274 in file "mcc_generated_files/adcc.c"
  6461 ;; Parameters:    Size  Location     Type
  6462 ;;		None
  6463 ;; Auto vars:     Size  Location     Type
  6464 ;;		None
  6465 ;; Return value:  Size  Location     Type
  6466 ;;                  1    wreg      void 
  6467 ;; Registers used:
  6468 ;;		None
  6469 ;; Tracked objects:
  6470 ;;		On entry : 0/0
  6471 ;;		On exit  : 0/0
  6472 ;;		Unchanged: 0/0
  6473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6478 ;;Total ram usage:        0 bytes
  6479 ;; Hardware stack levels used: 1
  6480 ;; Hardware stack levels required when called: 5
  6481 ;; This function calls:
  6482 ;;		Nothing
  6483 ;; This function is called by:
  6484 ;;		_main
  6485 ;; This function uses a non-reentrant model
  6486 ;;
  6487                           
  6488                           	psect	text47
  6489  001E40                     __ptext47:
  6490                           	callstack 0
  6491  001E40                     _ADCC_DisableContinuousConversion:
  6492                           	callstack 25
  6493  001E40                     
  6494                           ;adcc.c: 277: ADCON0bits.ADCONT = 0;
  6495  001E40  013E               	movlb	62	; () banked
  6496  001E42  9DF8               	bcf	248,6,b	;volatile
  6497  001E44                     
  6498                           ; BSR set to: 62
  6499  001E44  0012               	return		;funcret
  6500  001E46                     __end_of_ADCC_DisableContinuousConversion:
  6501                           	callstack 0
  6502                           
  6503 ;; *************** function _interrupt_handler *****************
  6504 ;; Defined at:
  6505 ;;		line 128 in file "main.c"
  6506 ;; Parameters:    Size  Location     Type
  6507 ;;		None
  6508 ;; Auto vars:     Size  Location     Type
  6509 ;;		None
  6510 ;; Return value:  Size  Location     Type
  6511 ;;                  1    wreg      void 
  6512 ;; Registers used:
  6513 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  6514 ;; Tracked objects:
  6515 ;;		On entry : 0/0
  6516 ;;		On exit  : 0/0
  6517 ;;		Unchanged: 0/0
  6518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6523 ;;Total ram usage:        0 bytes
  6524 ;; Hardware stack levels used: 1
  6525 ;; Hardware stack levels required when called: 4
  6526 ;; This function calls:
  6527 ;;		_can_handle_interrupt
  6528 ;;		_timer0_handle_interrupt
  6529 ;; This function is called by:
  6530 ;;		Interrupt level 2
  6531 ;; This function uses a non-reentrant model
  6532 ;;
  6533                           
  6534                           	psect	text48
  6535  001ABE                     __ptext48:
  6536                           	callstack 0
  6537  001ABE                     _interrupt_handler:
  6538                           	callstack 21
  6539  001ABE                     
  6540                           ;main.c: 129: if (PIR5) {
  6541  001ABE  0139               	movlb	57	; () banked
  6542  001AC0  51A5               	movf	165,w,b	;volatile
  6543  001AC2  B4D8               	btfsc	status,2,c
  6544  001AC4  EF66  F00D         	goto	i2u298_41
  6545  001AC8  EF68  F00D         	goto	i2u298_40
  6546  001ACC                     i2u298_41:
  6547  001ACC  EF6A  F00D         	goto	i2l4741
  6548  001AD0                     i2u298_40:
  6549  001AD0                     
  6550                           ; BSR set to: 57
  6551                           ;main.c: 130: can_handle_interrupt();
  6552  001AD0  EC72  F002         	call	_can_handle_interrupt	;wreg free
  6553  001AD4                     i2l4741:
  6554                           
  6555                           ;main.c: 131: };main.c: 135: if (PIE3bits.TMR0IE == 1 && PIR3bits.TMR0IF == 1) {
  6556  001AD4  0139               	movlb	57	; () banked
  6557  001AD6  AF93               	btfss	147,7,b	;volatile
  6558  001AD8  EF70  F00D         	goto	i2u299_41
  6559  001ADC  EF72  F00D         	goto	i2u299_40
  6560  001AE0                     i2u299_41:
  6561  001AE0  EF7D  F00D         	goto	i2l371
  6562  001AE4                     i2u299_40:
  6563  001AE4                     
  6564                           ; BSR set to: 57
  6565  001AE4  AFA3               	btfss	163,7,b	;volatile
  6566  001AE6  EF77  F00D         	goto	i2u300_41
  6567  001AEA  EF79  F00D         	goto	i2u300_40
  6568  001AEE                     i2u300_41:
  6569  001AEE  EF7D  F00D         	goto	i2l371
  6570  001AF2                     i2u300_40:
  6571  001AF2                     
  6572                           ; BSR set to: 57
  6573                           ;main.c: 136: timer0_handle_interrupt();
  6574  001AF2  EC94  F00E         	call	_timer0_handle_interrupt	;wreg free
  6575  001AF6                     
  6576                           ;main.c: 137: PIR3bits.TMR0IF = 0;
  6577  001AF6  0139               	movlb	57	; () banked
  6578  001AF8  9FA3               	bcf	163,7,b	;volatile
  6579  001AFA                     i2l371:
  6580                           
  6581                           ; BSR set to: 57
  6582  001AFA  0011               	retfie		f
  6583  001AFC                     __end_of_interrupt_handler:
  6584                           	callstack 0
  6585                           
  6586 ;; *************** function _timer0_handle_interrupt *****************
  6587 ;; Defined at:
  6588 ;;		line 47 in file "timer.c"
  6589 ;; Parameters:    Size  Location     Type
  6590 ;;		None
  6591 ;; Auto vars:     Size  Location     Type
  6592 ;;		None
  6593 ;; Return value:  Size  Location     Type
  6594 ;;                  1    wreg      void 
  6595 ;; Registers used:
  6596 ;;		wreg, status,2, status,0
  6597 ;; Tracked objects:
  6598 ;;		On entry : 0/0
  6599 ;;		On exit  : 0/0
  6600 ;;		Unchanged: 0/0
  6601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6606 ;;Total ram usage:        0 bytes
  6607 ;; Hardware stack levels used: 1
  6608 ;; This function calls:
  6609 ;;		Nothing
  6610 ;; This function is called by:
  6611 ;;		_interrupt_handler
  6612 ;; This function uses a non-reentrant model
  6613 ;;
  6614                           
  6615                           	psect	text49
  6616  001D28                     __ptext49:
  6617                           	callstack 0
  6618  001D28                     _timer0_handle_interrupt:
  6619                           	callstack 24
  6620  001D28                     
  6621                           ;timer.c: 51: internal_count += 64;
  6622  001D28  0E40               	movlw	64
  6623  001D2A  2633               	addwf	timer0_handle_interrupt@internal_count^0,f,c
  6624                           
  6625                           ;timer.c: 52: if (internal_count > 125) {
  6626  001D2C  0E7D               	movlw	125
  6627  001D2E  6433               	cpfsgt	timer0_handle_interrupt@internal_count^0,c
  6628  001D30  EF9C  F00E         	goto	i2u97_41
  6629  001D34  EF9E  F00E         	goto	i2u97_40
  6630  001D38                     i2u97_41:
  6631  001D38  EFA6  F00E         	goto	i2l416
  6632  001D3C                     i2u97_40:
  6633  001D3C                     
  6634                           ;timer.c: 53: internal_count -= 125;
  6635  001D3C  0E7D               	movlw	125
  6636  001D3E  5E33               	subwf	timer0_handle_interrupt@internal_count^0,f,c
  6637                           
  6638                           ;timer.c: 54: millis_counter++;
  6639  001D40  0E01               	movlw	1
  6640  001D42  262D               	addwf	_millis_counter^0,f,c
  6641  001D44  0E00               	movlw	0
  6642  001D46  222E               	addwfc	(_millis_counter+1)^0,f,c
  6643  001D48  222F               	addwfc	(_millis_counter+2)^0,f,c
  6644  001D4A  2230               	addwfc	(_millis_counter+3)^0,f,c
  6645  001D4C                     i2l416:
  6646  001D4C  0012               	return		;funcret
  6647  001D4E                     __end_of_timer0_handle_interrupt:
  6648                           	callstack 0
  6649                           
  6650 ;; *************** function _can_handle_interrupt *****************
  6651 ;; Defined at:
  6652 ;;		line 120 in file "canlib/pic18f26k83/pic18f26k83_can.c"
  6653 ;; Parameters:    Size  Location     Type
  6654 ;;		None
  6655 ;; Auto vars:     Size  Location     Type
  6656 ;;  rcvd_msg       11   33[COMRAM] struct .
  6657 ;;  rcvd_msg       11   22[COMRAM] struct .
  6658 ;; Return value:  Size  Location     Type
  6659 ;;                  1    wreg      void 
  6660 ;; Registers used:
  6661 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  6662 ;; Tracked objects:
  6663 ;;		On entry : 0/0
  6664 ;;		On exit  : 0/0
  6665 ;;		Unchanged: 0/0
  6666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6668 ;;      Locals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6669 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6670 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6671 ;;Total ram usage:       26 bytes
  6672 ;; Hardware stack levels used: 1
  6673 ;; Hardware stack levels required when called: 3
  6674 ;; This function calls:
  6675 ;;		Absolute function
  6676 ;;		_can_msg_handler
  6677 ;;		i2_memcpy
  6678 ;; This function is called by:
  6679 ;;		_interrupt_handler
  6680 ;; This function uses a non-reentrant model
  6681 ;;
  6682                           
  6683                           	psect	text50
  6684  0004E4                     __ptext50:
  6685                           	callstack 0
  6686  0004E4                     _can_handle_interrupt:
  6687                           	callstack 21
  6688  0004E4                     
  6689                           ;pic18f26k83_can.c: 124: if (COMSTATbits.RXB0OVFL || COMSTATbits.RXB1OVFL) {
  6690  0004E4  BE90               	btfsc	144,7,c	;volatile
  6691  0004E6  EF77  F002         	goto	i2u271_41
  6692  0004EA  EF79  F002         	goto	i2u271_40
  6693  0004EE                     i2u271_41:
  6694  0004EE  EF80  F002         	goto	i2l791
  6695  0004F2                     i2u271_40:
  6696  0004F2  AC90               	btfss	144,6,c	;volatile
  6697  0004F4  EF7E  F002         	goto	i2u272_41
  6698  0004F8  EF80  F002         	goto	i2u272_40
  6699  0004FC                     i2u272_41:
  6700  0004FC  EF82  F002         	goto	i2l789
  6701  000500                     i2u272_40:
  6702  000500                     i2l791:
  6703                           
  6704                           ;pic18f26k83_can.c: 125: COMSTATbits.RXB0OVFL = 0;
  6705  000500  9E90               	bcf	144,7,c	;volatile
  6706                           
  6707                           ;pic18f26k83_can.c: 126: COMSTATbits.RXB1OVFL = 0;
  6708  000502  9C90               	bcf	144,6,c	;volatile
  6709  000504                     i2l789:
  6710                           
  6711                           ;pic18f26k83_can.c: 127: };pic18f26k83_can.c: 131: if (PIR5bits.RXB0IF) {
  6712  000504  0139               	movlb	57	; () banked
  6713  000506  A1A5               	btfss	165,0,b	;volatile
  6714  000508  EF88  F002         	goto	i2u273_41
  6715  00050C  EF8A  F002         	goto	i2u273_40
  6716  000510                     i2u273_41:
  6717  000510  EFD5  F002         	goto	i2l792
  6718  000514                     i2u273_40:
  6719  000514                     
  6720                           ; BSR set to: 57
  6721                           ;pic18f26k83_can.c: 132: can_msg_t rcvd_msg;;pic18f26k83_can.c: 133: rcvd_msg.sid = (((u
      +                          int16_t)RXB0SIDH) << 3) | (RXB0SIDL >> 5);
  6722  000514  006F FE08  F013    	movff	16258,??_can_handle_interrupt	;volatile
  6723  00051A  0E05               	movlw	5
  6724  00051C  6E14               	movwf	(??_can_handle_interrupt+1)^0,c
  6725  00051E                     i2u274_45:
  6726  00051E  90D8               	bcf	status,0,c
  6727  000520  3213               	rrcf	??_can_handle_interrupt^0,f,c
  6728  000522  2E14               	decfsz	(??_can_handle_interrupt+1)^0,f,c
  6729  000524  EF8F  F002         	goto	i2u274_45
  6730  000528  5013               	movf	??_can_handle_interrupt^0,w,c
  6731  00052A  006F FE04  F015    	movff	16257,??_can_handle_interrupt+2	;volatile
  6732  000530  6A16               	clrf	(??_can_handle_interrupt+3)^0,c
  6733  000532  90D8               	bcf	status,0,c
  6734  000534  3615               	rlcf	(??_can_handle_interrupt+2)^0,f,c
  6735  000536  3616               	rlcf	(??_can_handle_interrupt+3)^0,f,c
  6736  000538  90D8               	bcf	status,0,c
  6737  00053A  3615               	rlcf	(??_can_handle_interrupt+2)^0,f,c
  6738  00053C  3616               	rlcf	(??_can_handle_interrupt+3)^0,f,c
  6739  00053E  90D8               	bcf	status,0,c
  6740  000540  3615               	rlcf	(??_can_handle_interrupt+2)^0,f,c
  6741  000542  3616               	rlcf	(??_can_handle_interrupt+3)^0,f,c
  6742  000544  1015               	iorwf	(??_can_handle_interrupt+2)^0,w,c
  6743  000546  6E17               	movwf	can_handle_interrupt@rcvd_msg^0,c
  6744  000548  5016               	movf	(??_can_handle_interrupt+3)^0,w,c
  6745  00054A  6E18               	movwf	(can_handle_interrupt@rcvd_msg+1)^0,c
  6746                           
  6747                           ;pic18f26k83_can.c: 134: rcvd_msg.data_len = RXB0DLCbits.DLC;
  6748  00054C  5085               	movf	133,w,c	;volatile
  6749  00054E  0B0F               	andlw	15
  6750  000550  6E19               	movwf	(can_handle_interrupt@rcvd_msg+2)^0,c
  6751  000552                     
  6752                           ; BSR set to: 57
  6753                           ;pic18f26k83_can.c: 135: memcpy(rcvd_msg.data, (const void *) &RXB0D0, rcvd_msg.data_len
      +                          );
  6754  000552  0E1A               	movlw	low (can_handle_interrupt@rcvd_msg+3)
  6755  000554  6E01               	movwf	i2memcpy@d1^0,c
  6756  000556  0E00               	movlw	high (can_handle_interrupt@rcvd_msg+3)
  6757  000558  6E02               	movwf	(i2memcpy@d1+1)^0,c
  6758  00055A  0E86               	movlw	134
  6759  00055C  6E03               	movwf	i2memcpy@s1^0,c
  6760  00055E  0E3F               	movlw	63
  6761  000560  6E04               	movwf	(i2memcpy@s1+1)^0,c
  6762  000562  C019  F005         	movff	can_handle_interrupt@rcvd_msg+2,i2memcpy@n
  6763  000566  6A06               	clrf	(i2memcpy@n+1)^0,c
  6764  000568  ECA3  F00C         	call	i2_memcpy	;wreg free
  6765  00056C                     
  6766                           ;pic18f26k83_can.c: 138: if ((0) != can_rcv_cb) {
  6767  00056C  5031               	movf	_can_rcv_cb^0,w,c
  6768  00056E  1032               	iorwf	(_can_rcv_cb+1)^0,w,c
  6769  000570  B4D8               	btfsc	status,2,c
  6770  000572  EFBD  F002         	goto	i2u275_41
  6771  000576  EFBF  F002         	goto	i2u275_40
  6772  00057A                     i2u275_41:
  6773  00057A  EFD0  F002         	goto	i2l4593
  6774  00057E                     i2u275_40:
  6775  00057E                     
  6776                           ;pic18f26k83_can.c: 139: can_rcv_cb(&rcvd_msg);
  6777  00057E  0E17               	movlw	low can_handle_interrupt@rcvd_msg
  6778  000580  6E0B               	movwf	can_msg_handler@msg^0,c
  6779  000582  0E00               	movlw	high can_handle_interrupt@rcvd_msg
  6780  000584  6E0C               	movwf	(can_msg_handler@msg+1)^0,c
  6781  000586  D802               	call	i2u276_48
  6782  000588  EFD0  F002         	goto	i2u276_49
  6783  00058C                     i2u276_48:
  6784  00058C  0005               	push	
  6785  00058E  6EFA               	movwf	pclath,c
  6786  000590  5031               	movf	_can_rcv_cb^0,w,c
  6787  000592  6EFD               	movwf	tosl,c
  6788  000594  5032               	movf	(_can_rcv_cb+1)^0,w,c
  6789  000596  6EFE               	movwf	tosh,c
  6790  000598  50F8               	movf	tblptru,w,c
  6791  00059A  6EFF               	movwf	tosu,c
  6792  00059C  50FA               	movf	pclath,w,c
  6793  00059E  0012               	return		;indir
  6794  0005A0                     i2u276_49:
  6795  0005A0                     i2l4593:
  6796                           
  6797                           ;pic18f26k83_can.c: 140: };pic18f26k83_can.c: 142: PIR5bits.RXB0IF = 0;
  6798  0005A0  0139               	movlb	57	; () banked
  6799  0005A2  91A5               	bcf	165,0,b	;volatile
  6800  0005A4                     
  6801                           ; BSR set to: 57
  6802                           ;pic18f26k83_can.c: 143: RXB0CONbits.RXFUL = 0;
  6803  0005A4  9E80               	bcf	128,7,c	;volatile
  6804  0005A6  EF5B  F003         	goto	i2l794
  6805  0005AA                     i2l792:
  6806                           
  6807                           ; BSR set to: 57
  6808  0005AA  A3A5               	btfss	165,1,b	;volatile
  6809  0005AC  EFDA  F002         	goto	i2u277_41
  6810  0005B0  EFDC  F002         	goto	i2u277_40
  6811  0005B4                     i2u277_41:
  6812  0005B4  EF29  F003         	goto	i2l796
  6813  0005B8                     i2u277_40:
  6814  0005B8                     
  6815                           ; BSR set to: 57
  6816                           ;pic18f26k83_can.c: 147: can_msg_t rcvd_msg;;pic18f26k83_can.c: 148: rcvd_msg.sid = (((u
      +                          int16_t)RXB1SIDH) << 3) | (RXB1SIDL >> 5);
  6817  0005B8  006D FFC8  F013    	movff	14322,??_can_handle_interrupt	;volatile
  6818  0005BE  0E05               	movlw	5
  6819  0005C0  6E14               	movwf	(??_can_handle_interrupt+1)^0,c
  6820  0005C2                     i2u278_45:
  6821  0005C2  90D8               	bcf	status,0,c
  6822  0005C4  3213               	rrcf	??_can_handle_interrupt^0,f,c
  6823  0005C6  2E14               	decfsz	(??_can_handle_interrupt+1)^0,f,c
  6824  0005C8  EFE1  F002         	goto	i2u278_45
  6825  0005CC  5013               	movf	??_can_handle_interrupt^0,w,c
  6826  0005CE  006D FFC4  F015    	movff	14321,??_can_handle_interrupt+2	;volatile
  6827  0005D4  6A16               	clrf	(??_can_handle_interrupt+3)^0,c
  6828  0005D6  90D8               	bcf	status,0,c
  6829  0005D8  3615               	rlcf	(??_can_handle_interrupt+2)^0,f,c
  6830  0005DA  3616               	rlcf	(??_can_handle_interrupt+3)^0,f,c
  6831  0005DC  90D8               	bcf	status,0,c
  6832  0005DE  3615               	rlcf	(??_can_handle_interrupt+2)^0,f,c
  6833  0005E0  3616               	rlcf	(??_can_handle_interrupt+3)^0,f,c
  6834  0005E2  90D8               	bcf	status,0,c
  6835  0005E4  3615               	rlcf	(??_can_handle_interrupt+2)^0,f,c
  6836  0005E6  3616               	rlcf	(??_can_handle_interrupt+3)^0,f,c
  6837  0005E8  1015               	iorwf	(??_can_handle_interrupt+2)^0,w,c
  6838  0005EA  6E22               	movwf	can_handle_interrupt@rcvd_msg_2164^0,c
  6839  0005EC  5016               	movf	(??_can_handle_interrupt+3)^0,w,c
  6840  0005EE  6E23               	movwf	(can_handle_interrupt@rcvd_msg_2164+1)^0,c
  6841                           
  6842                           ;pic18f26k83_can.c: 149: rcvd_msg.data_len = RXB1DLCbits.DLC;
  6843  0005F0  0137               	movlb	55	; () banked
  6844  0005F2  51F5               	movf	245,w,b	;volatile
  6845  0005F4  0B0F               	andlw	15
  6846  0005F6  6E24               	movwf	(can_handle_interrupt@rcvd_msg_2164+2)^0,c
  6847  0005F8                     
  6848                           ; BSR set to: 55
  6849                           ;pic18f26k83_can.c: 150: memcpy(rcvd_msg.data, (const void *) &RXB1D0, rcvd_msg.data_len
      +                          );
  6850  0005F8  0E25               	movlw	low (can_handle_interrupt@rcvd_msg_2164+3)
  6851  0005FA  6E01               	movwf	i2memcpy@d1^0,c
  6852  0005FC  0E00               	movlw	high (can_handle_interrupt@rcvd_msg_2164+3)
  6853  0005FE  6E02               	movwf	(i2memcpy@d1+1)^0,c
  6854  000600  0EF6               	movlw	246
  6855  000602  6E03               	movwf	i2memcpy@s1^0,c
  6856  000604  0E37               	movlw	55
  6857  000606  6E04               	movwf	(i2memcpy@s1+1)^0,c
  6858  000608  C024  F005         	movff	can_handle_interrupt@rcvd_msg_2164+2,i2memcpy@n
  6859  00060C  6A06               	clrf	(i2memcpy@n+1)^0,c
  6860  00060E  ECA3  F00C         	call	i2_memcpy	;wreg free
  6861  000612                     
  6862                           ;pic18f26k83_can.c: 153: if ((0) != can_rcv_cb) {
  6863  000612  5031               	movf	_can_rcv_cb^0,w,c
  6864  000614  1032               	iorwf	(_can_rcv_cb+1)^0,w,c
  6865  000616  B4D8               	btfsc	status,2,c
  6866  000618  EF10  F003         	goto	i2u279_41
  6867  00061C  EF12  F003         	goto	i2u279_40
  6868  000620                     i2u279_41:
  6869  000620  EF23  F003         	goto	i2l4609
  6870  000624                     i2u279_40:
  6871  000624                     
  6872                           ;pic18f26k83_can.c: 154: can_rcv_cb(&rcvd_msg);
  6873  000624  0E22               	movlw	low can_handle_interrupt@rcvd_msg_2164
  6874  000626  6E0B               	movwf	can_msg_handler@msg^0,c
  6875  000628  0E00               	movlw	high can_handle_interrupt@rcvd_msg_2164
  6876  00062A  6E0C               	movwf	(can_msg_handler@msg+1)^0,c
  6877  00062C  D802               	call	i2u280_48
  6878  00062E  EF23  F003         	goto	i2u280_49
  6879  000632                     i2u280_48:
  6880  000632  0005               	push	
  6881  000634  6EFA               	movwf	pclath,c
  6882  000636  5031               	movf	_can_rcv_cb^0,w,c
  6883  000638  6EFD               	movwf	tosl,c
  6884  00063A  5032               	movf	(_can_rcv_cb+1)^0,w,c
  6885  00063C  6EFE               	movwf	tosh,c
  6886  00063E  50F8               	movf	tblptru,w,c
  6887  000640  6EFF               	movwf	tosu,c
  6888  000642  50FA               	movf	pclath,w,c
  6889  000644  0012               	return		;indir
  6890  000646                     i2u280_49:
  6891  000646                     i2l4609:
  6892                           
  6893                           ;pic18f26k83_can.c: 155: };pic18f26k83_can.c: 157: PIR5bits.RXB1IF = 0;
  6894  000646  0139               	movlb	57	; () banked
  6895  000648  93A5               	bcf	165,1,b	;volatile
  6896  00064A                     
  6897                           ; BSR set to: 57
  6898                           ;pic18f26k83_can.c: 158: RXB1CONbits.RXFUL = 0;
  6899  00064A  0137               	movlb	55	; () banked
  6900  00064C  9FF0               	bcf	240,7,b	;volatile
  6901                           
  6902                           ;pic18f26k83_can.c: 159: }
  6903  00064E  EF5B  F003         	goto	i2l794
  6904  000652                     i2l796:
  6905                           
  6906                           ; BSR set to: 57
  6907                           ;pic18f26k83_can.c: 163: else if (PIR5bits.TXB0IF) {
  6908  000652  A5A5               	btfss	165,2,b	;volatile
  6909  000654  EF2E  F003         	goto	i2u281_41
  6910  000658  EF30  F003         	goto	i2u281_40
  6911  00065C                     i2u281_41:
  6912  00065C  EF33  F003         	goto	i2l799
  6913  000660                     i2u281_40:
  6914  000660                     
  6915                           ; BSR set to: 57
  6916                           ;pic18f26k83_can.c: 164: PIR5bits.TXB0IF = 0;
  6917  000660  95A5               	bcf	165,2,b	;volatile
  6918                           
  6919                           ;pic18f26k83_can.c: 165: return;
  6920  000662  EF5B  F003         	goto	i2l794
  6921  000666                     i2l799:
  6922                           
  6923                           ; BSR set to: 57
  6924  000666  A7A5               	btfss	165,3,b	;volatile
  6925  000668  EF38  F003         	goto	i2u282_41
  6926  00066C  EF3A  F003         	goto	i2u282_40
  6927  000670                     i2u282_41:
  6928  000670  EF3D  F003         	goto	i2l801
  6929  000674                     i2u282_40:
  6930  000674                     
  6931                           ; BSR set to: 57
  6932                           ;pic18f26k83_can.c: 167: PIR5bits.TXB1IF = 0;
  6933  000674  97A5               	bcf	165,3,b	;volatile
  6934                           
  6935                           ;pic18f26k83_can.c: 168: return;
  6936  000676  EF5B  F003         	goto	i2l794
  6937  00067A                     i2l801:
  6938                           
  6939                           ; BSR set to: 57
  6940  00067A  A9A5               	btfss	165,4,b	;volatile
  6941  00067C  EF42  F003         	goto	i2u283_41
  6942  000680  EF44  F003         	goto	i2u283_40
  6943  000684                     i2u283_41:
  6944  000684  EF47  F003         	goto	i2l803
  6945  000688                     i2u283_40:
  6946  000688                     
  6947                           ; BSR set to: 57
  6948                           ;pic18f26k83_can.c: 170: PIR5bits.TXB2IF = 0;
  6949  000688  99A5               	bcf	165,4,b	;volatile
  6950                           
  6951                           ;pic18f26k83_can.c: 171: return;
  6952  00068A  EF5B  F003         	goto	i2l794
  6953  00068E                     i2l803:
  6954                           
  6955                           ; BSR set to: 57
  6956  00068E  AFA5               	btfss	165,7,b	;volatile
  6957  000690  EF4C  F003         	goto	i2u284_41
  6958  000694  EF4E  F003         	goto	i2u284_40
  6959  000698                     i2u284_41:
  6960  000698  EF51  F003         	goto	i2l805
  6961  00069C                     i2u284_40:
  6962  00069C                     
  6963                           ; BSR set to: 57
  6964                           ;pic18f26k83_can.c: 175: PIR5bits.IRXIF = 0;
  6965  00069C  9FA5               	bcf	165,7,b	;volatile
  6966                           
  6967                           ;pic18f26k83_can.c: 176: return;
  6968  00069E  EF5B  F003         	goto	i2l794
  6969  0006A2                     i2l805:
  6970                           
  6971                           ; BSR set to: 57
  6972  0006A2  ABA5               	btfss	165,5,b	;volatile
  6973  0006A4  EF56  F003         	goto	i2u285_41
  6974  0006A8  EF58  F003         	goto	i2u285_40
  6975  0006AC                     i2u285_41:
  6976  0006AC  EF5B  F003         	goto	i2l802
  6977  0006B0                     i2u285_40:
  6978  0006B0                     
  6979                           ; BSR set to: 57
  6980                           ;pic18f26k83_can.c: 180: PIR5bits.ERRIF = 0;
  6981  0006B0  9BA5               	bcf	165,5,b	;volatile
  6982                           
  6983                           ;pic18f26k83_can.c: 181: return;
  6984  0006B2  EF5B  F003         	goto	i2l794
  6985  0006B6                     i2l802:
  6986  0006B6                     i2l794:
  6987  0006B6  0012               	return		;funcret
  6988  0006B8                     __end_of_can_handle_interrupt:
  6989                           	callstack 0
  6990                           
  6991 ;; *************** function i2_memcpy *****************
  6992 ;; Defined at:
  6993 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\memcpy.c"
  6994 ;; Parameters:    Size  Location     Type
  6995 ;;  d1              2    0[COMRAM] PTR void 
  6996 ;;		 -> txb_heartbeat@msg_sent(11), can_handle_interrupt@rcvd_msg_2164(11), can_handle_interrupt@rcvd_msg(11), TXB0D0(1)
      +, 
  6997 ;;		 -> tx_pool(100), 
  6998 ;;  s1              2    2[COMRAM] PTR const void 
  6999 ;;		 -> vent_send_status@stat_msg(11), txb_heartbeat@msg_sent(11), check_bus_current_error@error_msg(11), check_battery_
      +voltage_error@batt_msg(11), 
  7000 ;;		 -> check_battery_voltage_error@error_msg(11), RXB1D0(1), RXB0D0(1), send_status_ok@board_stat_msg(11), 
  7001 ;;		 -> main@error_msg(11), tx_pool(100), 
  7002 ;;  n               2    4[COMRAM] unsigned int 
  7003 ;; Auto vars:     Size  Location     Type
  7004 ;;  s               2    8[COMRAM] PTR const unsigned char 
  7005 ;;		 -> vent_send_status@stat_msg(11), txb_heartbeat@msg_sent(11), check_bus_current_error@error_msg(11), check_battery_
      +voltage_error@batt_msg(11), 
  7006 ;;		 -> check_battery_voltage_error@error_msg(11), RXB1D0(1), RXB0D0(1), send_status_ok@board_stat_msg(11), 
  7007 ;;		 -> main@error_msg(11), tx_pool(100), 
  7008 ;;  d               2    6[COMRAM] PTR unsigned char 
  7009 ;;		 -> txb_heartbeat@msg_sent(11), can_handle_interrupt@rcvd_msg_2164(11), can_handle_interrupt@rcvd_msg(11), TXB0D0(1)
      +, 
  7010 ;;		 -> tx_pool(100), 
  7011 ;;  tmp             1   10[COMRAM] unsigned char 
  7012 ;; Return value:  Size  Location     Type
  7013 ;;                  2    0[COMRAM] PTR void 
  7014 ;; Registers used:
  7015 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7016 ;; Tracked objects:
  7017 ;;		On entry : 0/0
  7018 ;;		On exit  : 0/0
  7019 ;;		Unchanged: 0/0
  7020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7021 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7022 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7024 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7025 ;;Total ram usage:       11 bytes
  7026 ;; Hardware stack levels used: 1
  7027 ;; This function calls:
  7028 ;;		Nothing
  7029 ;; This function is called by:
  7030 ;;		_can_handle_interrupt
  7031 ;; This function uses a non-reentrant model
  7032 ;;
  7033                           
  7034                           	psect	text51
  7035  001946                     __ptext51:
  7036                           	callstack 0
  7037  001946                     i2_memcpy:
  7038                           	callstack 23
  7039  001946  C003  F009         	movff	i2memcpy@s1,i2memcpy@s
  7040  00194A  C004  F00A         	movff	i2memcpy@s1+1,i2memcpy@s+1
  7041  00194E  C001  F007         	movff	i2memcpy@d1,i2memcpy@d
  7042  001952  C002  F008         	movff	i2memcpy@d1+1,i2memcpy@d+1
  7043  001956  EFC2  F00C         	goto	i2l4233
  7044  00195A                     i2l4225:
  7045  00195A  0060  F027  FFD9   	movff	i2memcpy@s,fsr2l
  7046  001960  0060  F02B  FFDA   	movff	i2memcpy@s+1,fsr2h
  7047  001966  50DF               	movf	indf2,w,c
  7048  001968  6E0B               	movwf	i2memcpy@tmp^0,c
  7049  00196A  4A09               	infsnz	i2memcpy@s^0,f,c
  7050  00196C  2A0A               	incf	(i2memcpy@s+1)^0,f,c
  7051  00196E  0060  F01F  FFD9   	movff	i2memcpy@d,fsr2l
  7052  001974  0060  F023  FFDA   	movff	i2memcpy@d+1,fsr2h
  7053  00197A  0060  F02F  FFDF   	movff	i2memcpy@tmp,indf2
  7054  001980  4A07               	infsnz	i2memcpy@d^0,f,c
  7055  001982  2A08               	incf	(i2memcpy@d+1)^0,f,c
  7056  001984                     i2l4233:
  7057  001984  0605               	decf	i2memcpy@n^0,f,c
  7058  001986  A0D8               	btfss	status,0,c
  7059  001988  0606               	decf	(i2memcpy@n+1)^0,f,c
  7060  00198A  2805               	incf	i2memcpy@n^0,w,c
  7061  00198C  E106               	bnz	i2u253_41
  7062  00198E  2806               	incf	(i2memcpy@n+1)^0,w,c
  7063  001990  A4D8               	btfss	status,2,c
  7064  001992  EFCD  F00C         	goto	i2u253_41
  7065  001996  EFCF  F00C         	goto	i2u253_40
  7066  00199A                     i2u253_41:
  7067  00199A  EFAD  F00C         	goto	i2l4225
  7068  00199E                     i2u253_40:
  7069  00199E  0012               	return		;funcret
  7070  0019A0                     __end_ofi2_memcpy:
  7071                           	callstack 0
  7072                           
  7073 ;; *************** function _can_msg_handler *****************
  7074 ;; Defined at:
  7075 ;;		line 141 in file "main.c"
  7076 ;; Parameters:    Size  Location     Type
  7077 ;;  msg             2   10[COMRAM] PTR const struct .
  7078 ;;		 -> can_handle_interrupt@rcvd_msg_2164(11), can_handle_interrupt@rcvd_msg(11), 
  7079 ;; Auto vars:     Size  Location     Type
  7080 ;;  cmd_type        2   16[COMRAM] int 
  7081 ;;  msg_type        2   14[COMRAM] unsigned int 
  7082 ;; Return value:  Size  Location     Type
  7083 ;;                  1    wreg      void 
  7084 ;; Registers used:
  7085 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7086 ;; Tracked objects:
  7087 ;;		On entry : 0/0
  7088 ;;		On exit  : 0/0
  7089 ;;		Unchanged: 0/0
  7090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7091 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7092 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7093 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7094 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7095 ;;Total ram usage:        8 bytes
  7096 ;; Hardware stack levels used: 1
  7097 ;; Hardware stack levels required when called: 2
  7098 ;; This function calls:
  7099 ;;		_get_board_unique_id
  7100 ;;		_get_general_cmd_type
  7101 ;;		_get_message_type
  7102 ;;		_get_req_valve_state
  7103 ;;		i2_millis
  7104 ;; This function is called by:
  7105 ;;		_main
  7106 ;;		_can_handle_interrupt
  7107 ;; This function uses a non-reentrant model
  7108 ;;
  7109                           
  7110                           	psect	text52
  7111  0009B6                     __ptext52:
  7112                           	callstack 0
  7113  0009B6                     _can_msg_handler:
  7114                           	callstack 21
  7115  0009B6                     
  7116                           ;main.c: 142: uint16_t msg_type = get_message_type(msg);
  7117  0009B6  C00B  F001         	movff	can_msg_handler@msg,get_message_type@msg
  7118  0009BA  C00C  F002         	movff	can_msg_handler@msg+1,get_message_type@msg+1
  7119  0009BE  ECFD  F00C         	call	_get_message_type	;wreg free
  7120  0009C2  C001  F00F         	movff	?_get_message_type,can_msg_handler@msg_type
  7121  0009C6  C002  F010         	movff	?_get_message_type+1,can_msg_handler@msg_type+1
  7122  0009CA                     
  7123                           ;main.c: 149: if (get_board_unique_id(msg) == 0x0B) {
  7124  0009CA  C00B  F001         	movff	can_msg_handler@msg,get_board_unique_id@msg
  7125  0009CE  C00C  F002         	movff	can_msg_handler@msg+1,get_board_unique_id@msg+1
  7126  0009D2  EC59  F00E         	call	_get_board_unique_id	;wreg free
  7127  0009D6  0A0B               	xorlw	11
  7128  0009D8  A4D8               	btfss	status,2,c
  7129  0009DA  EFF1  F004         	goto	i2u223_41
  7130  0009DE  EFF3  F004         	goto	i2u223_40
  7131  0009E2                     i2u223_41:
  7132  0009E2  EF24  F005         	goto	i2l3999
  7133  0009E6                     i2u223_40:
  7134  0009E6  EF97  F005         	goto	i2l375
  7135  0009EA                     i2l3989:
  7136                           
  7137                           ;main.c: 155: cmd_type = get_general_cmd_type(msg);
  7138  0009EA  C00B  F005         	movff	can_msg_handler@msg,get_general_cmd_type@msg
  7139  0009EE  C00C  F006         	movff	can_msg_handler@msg+1,get_general_cmd_type@msg+1
  7140  0009F2  ECD0  F00C         	call	_get_general_cmd_type	;wreg free
  7141  0009F6  C005  F011         	movff	?_get_general_cmd_type,can_msg_handler@cmd_type
  7142  0009FA  C006  F012         	movff	?_get_general_cmd_type+1,can_msg_handler@cmd_type+1
  7143  0009FE                     
  7144                           ;main.c: 156: if (cmd_type == BUS_DOWN_WARNING) {
  7145  0009FE  5011               	movf	can_msg_handler@cmd_type^0,w,c
  7146  000A00  1012               	iorwf	(can_msg_handler@cmd_type+1)^0,w,c
  7147  000A02  A4D8               	btfss	status,2,c
  7148  000A04  EF06  F005         	goto	i2u224_41
  7149  000A08  EF08  F005         	goto	i2u224_40
  7150  000A0C                     i2u224_41:
  7151  000A0C  EF8D  F005         	goto	i2l4001
  7152  000A10                     i2u224_40:
  7153  000A10                     
  7154                           ;main.c: 157: requested_valve_state = VALVE_OPEN;
  7155  000A10  0E00               	movlw	0
  7156  000A12  0100               	movlb	0	; () banked
  7157  000A14  6FDA               	movwf	_requested_valve_state& (0+255),b
  7158  000A16  EF8D  F005         	goto	i2l4001
  7159  000A1A                     i2l378:
  7160                           
  7161                           ;main.c: 158: };main.c: 159: break;
  7162  000A1A  EF8D  F005         	goto	i2l4001
  7163  000A1E                     i2l3995:
  7164                           
  7165                           ;main.c: 164: requested_valve_state = get_req_valve_state(msg);
  7166  000A1E  C00B  F005         	movff	can_msg_handler@msg,get_req_valve_state@msg
  7167  000A22  C00C  F006         	movff	can_msg_handler@msg+1,get_req_valve_state@msg+1
  7168  000A26  ECFD  F009         	call	_get_req_valve_state	;wreg free
  7169  000A2A  5005               	movf	?_get_req_valve_state^0,w,c
  7170  000A2C  0100               	movlb	0	; () banked
  7171  000A2E  6FDA               	movwf	_requested_valve_state& (0+255),b
  7172                           
  7173                           ;main.c: 165: break;
  7174  000A30  EF8D  F005         	goto	i2l4001
  7175  000A34                     i2l381:
  7176                           
  7177                           ;main.c: 168: (LATC3 = 0);
  7178  000A34  96BC               	bcf	16316,3,c	;volatile
  7179                           
  7180                           ;main.c: 169: (LATC2 = 0);
  7181  000A36  94BC               	bcf	16316,2,c	;volatile
  7182                           
  7183                           ;main.c: 170: (LATC3 = 0);
  7184  000A38  96BC               	bcf	16316,3,c	;volatile
  7185                           
  7186                           ;main.c: 171: break;
  7187  000A3A  EF8D  F005         	goto	i2l4001
  7188  000A3E                     i2l382:
  7189                           
  7190                           ;main.c: 174: (LATC3 = 1);
  7191  000A3E  86BC               	bsf	16316,3,c	;volatile
  7192                           
  7193                           ;main.c: 175: (LATC2 = 1);
  7194  000A40  84BC               	bsf	16316,2,c	;volatile
  7195                           
  7196                           ;main.c: 176: (LATC3 = 1);
  7197  000A42  86BC               	bsf	16316,3,c	;volatile
  7198                           
  7199                           ;main.c: 177: break;
  7200  000A44  EF8D  F005         	goto	i2l4001
  7201  000A48                     i2l3999:
  7202  000A48  C00F  F00D         	movff	can_msg_handler@msg_type,??_can_msg_handler
  7203  000A4C  C010  F00E         	movff	can_msg_handler@msg_type+1,??_can_msg_handler+1
  7204                           
  7205                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 6 sub-sw
      +                          itches
  7206                           ; Switch size 1, requested type "simple"
  7207                           ; Number of cases is 6, Range of values is 0 to 7
  7208                           ; switch strategies available:
  7209                           ; Name         Instructions Cycles
  7210                           ; simple_byte           19    10 (average)
  7211                           ;	Chosen strategy is simple_byte
  7212  000A50  500E               	movf	(??_can_msg_handler+1)^0,w,c
  7213  000A52  0A00               	xorlw	0	; case 0
  7214  000A54  B4D8               	btfsc	status,2,c
  7215  000A56  EF43  F005         	goto	i2l7087
  7216  000A5A  0A01               	xorlw	1	; case 1
  7217  000A5C  B4D8               	btfsc	status,2,c
  7218  000A5E  EF4E  F005         	goto	i2l7089
  7219  000A62  0A05               	xorlw	5	; case 4
  7220  000A64  B4D8               	btfsc	status,2,c
  7221  000A66  EF5D  F005         	goto	i2l7091
  7222  000A6A  0A01               	xorlw	1	; case 5
  7223  000A6C  B4D8               	btfsc	status,2,c
  7224  000A6E  EF68  F005         	goto	i2l7093
  7225  000A72  0A03               	xorlw	3	; case 6
  7226  000A74  B4D8               	btfsc	status,2,c
  7227  000A76  EF77  F005         	goto	i2l7095
  7228  000A7A  0A01               	xorlw	1	; case 7
  7229  000A7C  B4D8               	btfsc	status,2,c
  7230  000A7E  EF82  F005         	goto	i2l7097
  7231  000A82  EF8D  F005         	goto	i2l4001
  7232  000A86                     i2l7087:
  7233                           
  7234                           ; Switch size 1, requested type "simple"
  7235                           ; Number of cases is 2, Range of values is 96 to 192
  7236                           ; switch strategies available:
  7237                           ; Name         Instructions Cycles
  7238                           ; simple_byte            7     4 (average)
  7239                           ;	Chosen strategy is simple_byte
  7240  000A86  500D               	movf	??_can_msg_handler^0,w,c
  7241  000A88  0A60               	xorlw	96	; case 96
  7242  000A8A  B4D8               	btfsc	status,2,c
  7243  000A8C  EFF5  F004         	goto	i2l3989
  7244  000A90  0AA0               	xorlw	160	; case 192
  7245  000A92  B4D8               	btfsc	status,2,c
  7246  000A94  EF0F  F005         	goto	i2l3995
  7247  000A98  EF8D  F005         	goto	i2l4001
  7248  000A9C                     i2l7089:
  7249                           
  7250                           ; Switch size 1, requested type "simple"
  7251                           ; Number of cases is 3, Range of values is 32 to 224
  7252                           ; switch strategies available:
  7253                           ; Name         Instructions Cycles
  7254                           ; simple_byte           10     6 (average)
  7255                           ;	Chosen strategy is simple_byte
  7256  000A9C  500D               	movf	??_can_msg_handler^0,w,c
  7257  000A9E  0A20               	xorlw	32	; case 32
  7258  000AA0  B4D8               	btfsc	status,2,c
  7259  000AA2  EF0D  F005         	goto	i2l378
  7260  000AA6  0AA0               	xorlw	160	; case 128
  7261  000AA8  B4D8               	btfsc	status,2,c
  7262  000AAA  EF0D  F005         	goto	i2l378
  7263  000AAE  0A60               	xorlw	96	; case 224
  7264  000AB0  B4D8               	btfsc	status,2,c
  7265  000AB2  EF8D  F005         	goto	i2l4001
  7266  000AB6  EF8D  F005         	goto	i2l4001
  7267  000ABA                     i2l7091:
  7268                           
  7269                           ; Switch size 1, requested type "simple"
  7270                           ; Number of cases is 2, Range of values is 96 to 192
  7271                           ; switch strategies available:
  7272                           ; Name         Instructions Cycles
  7273                           ; simple_byte            7     4 (average)
  7274                           ;	Chosen strategy is simple_byte
  7275  000ABA  500D               	movf	??_can_msg_handler^0,w,c
  7276  000ABC  0A60               	xorlw	96	; case 96
  7277  000ABE  B4D8               	btfsc	status,2,c
  7278  000AC0  EF8D  F005         	goto	i2l4001
  7279  000AC4  0AA0               	xorlw	160	; case 192
  7280  000AC6  B4D8               	btfsc	status,2,c
  7281  000AC8  EF8D  F005         	goto	i2l4001
  7282  000ACC  EF8D  F005         	goto	i2l4001
  7283  000AD0                     i2l7093:
  7284                           
  7285                           ; Switch size 1, requested type "simple"
  7286                           ; Number of cases is 3, Range of values is 32 to 224
  7287                           ; switch strategies available:
  7288                           ; Name         Instructions Cycles
  7289                           ; simple_byte           10     6 (average)
  7290                           ;	Chosen strategy is simple_byte
  7291  000AD0  500D               	movf	??_can_msg_handler^0,w,c
  7292  000AD2  0A20               	xorlw	32	; case 32
  7293  000AD4  B4D8               	btfsc	status,2,c
  7294  000AD6  EF8D  F005         	goto	i2l4001
  7295  000ADA  0AA0               	xorlw	160	; case 128
  7296  000ADC  B4D8               	btfsc	status,2,c
  7297  000ADE  EF8D  F005         	goto	i2l4001
  7298  000AE2  0A60               	xorlw	96	; case 224
  7299  000AE4  B4D8               	btfsc	status,2,c
  7300  000AE6  EF8D  F005         	goto	i2l4001
  7301  000AEA  EF8D  F005         	goto	i2l4001
  7302  000AEE                     i2l7095:
  7303                           
  7304                           ; Switch size 1, requested type "simple"
  7305                           ; Number of cases is 2, Range of values is 64 to 160
  7306                           ; switch strategies available:
  7307                           ; Name         Instructions Cycles
  7308                           ; simple_byte            7     4 (average)
  7309                           ;	Chosen strategy is simple_byte
  7310  000AEE  500D               	movf	??_can_msg_handler^0,w,c
  7311  000AF0  0A40               	xorlw	64	; case 64
  7312  000AF2  B4D8               	btfsc	status,2,c
  7313  000AF4  EF8D  F005         	goto	i2l4001
  7314  000AF8  0AE0               	xorlw	224	; case 160
  7315  000AFA  B4D8               	btfsc	status,2,c
  7316  000AFC  EF8D  F005         	goto	i2l4001
  7317  000B00  EF8D  F005         	goto	i2l4001
  7318  000B04                     i2l7097:
  7319                           
  7320                           ; Switch size 1, requested type "simple"
  7321                           ; Number of cases is 2, Range of values is 192 to 224
  7322                           ; switch strategies available:
  7323                           ; Name         Instructions Cycles
  7324                           ; simple_byte            7     4 (average)
  7325                           ;	Chosen strategy is simple_byte
  7326  000B04  500D               	movf	??_can_msg_handler^0,w,c
  7327  000B06  0AC0               	xorlw	192	; case 192
  7328  000B08  B4D8               	btfsc	status,2,c
  7329  000B0A  EF1F  F005         	goto	i2l382
  7330  000B0E  0A20               	xorlw	32	; case 224
  7331  000B10  B4D8               	btfsc	status,2,c
  7332  000B12  EF1A  F005         	goto	i2l381
  7333  000B16  EF8D  F005         	goto	i2l4001
  7334  000B1A                     i2l4001:
  7335                           
  7336                           ;main.c: 199: last_can_traffic_timestamp_ms = millis();
  7337  000B1A  ECFB  F00E         	call	i2_millis	;wreg free
  7338  000B1E  C001  F0D1         	movff	?i2_millis,_last_can_traffic_timestamp_ms
  7339  000B22  C002  F0D2         	movff	?i2_millis+1,_last_can_traffic_timestamp_ms+1
  7340  000B26  C003  F0D3         	movff	?i2_millis+2,_last_can_traffic_timestamp_ms+2
  7341  000B2A  C004  F0D4         	movff	?i2_millis+3,_last_can_traffic_timestamp_ms+3
  7342  000B2E                     i2l375:
  7343  000B2E  0012               	return		;funcret
  7344  000B30                     __end_of_can_msg_handler:
  7345                           	callstack 0
  7346                           
  7347 ;; *************** function i2_millis *****************
  7348 ;; Defined at:
  7349 ;;		line 24 in file "timer.c"
  7350 ;; Parameters:    Size  Location     Type
  7351 ;;		None
  7352 ;; Auto vars:     Size  Location     Type
  7353 ;;		None
  7354 ;; Return value:  Size  Location     Type
  7355 ;;                  4    0[COMRAM] unsigned long 
  7356 ;; Registers used:
  7357 ;;		None
  7358 ;; Tracked objects:
  7359 ;;		On entry : 0/0
  7360 ;;		On exit  : 0/0
  7361 ;;		Unchanged: 0/0
  7362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7363 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7366 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7367 ;;Total ram usage:        4 bytes
  7368 ;; Hardware stack levels used: 1
  7369 ;; This function calls:
  7370 ;;		Nothing
  7371 ;; This function is called by:
  7372 ;;		_can_msg_handler
  7373 ;; This function uses a non-reentrant model
  7374 ;;
  7375                           
  7376                           	psect	text53
  7377  001DF6                     __ptext53:
  7378                           	callstack 0
  7379  001DF6                     i2_millis:
  7380                           	callstack 22
  7381  001DF6                     
  7382                           ;timer.c: 25: return millis_counter;
  7383  001DF6  C02D  F001         	movff	_millis_counter,?i2_millis
  7384  001DFA  C02E  F002         	movff	_millis_counter+1,?i2_millis+1
  7385  001DFE  C02F  F003         	movff	_millis_counter+2,?i2_millis+2
  7386  001E02  C030  F004         	movff	_millis_counter+3,?i2_millis+3
  7387  001E06  0012               	return		;funcret
  7388  001E08                     __end_ofi2_millis:
  7389                           	callstack 0
  7390                           
  7391 ;; *************** function _get_req_valve_state *****************
  7392 ;; Defined at:
  7393 ;;		line 467 in file "canlib/can_common.c"
  7394 ;; Parameters:    Size  Location     Type
  7395 ;;  msg             2    4[COMRAM] PTR const struct .
  7396 ;;		 -> can_handle_interrupt@rcvd_msg_2164(11), can_handle_interrupt@rcvd_msg(11), 
  7397 ;; Auto vars:     Size  Location     Type
  7398 ;;  msg_type        2    8[COMRAM] unsigned int 
  7399 ;; Return value:  Size  Location     Type
  7400 ;;                  2    4[COMRAM] int 
  7401 ;; Registers used:
  7402 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7403 ;; Tracked objects:
  7404 ;;		On entry : 0/0
  7405 ;;		On exit  : 0/0
  7406 ;;		Unchanged: 0/0
  7407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7408 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7409 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7410 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7411 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7412 ;;Total ram usage:        6 bytes
  7413 ;; Hardware stack levels used: 1
  7414 ;; Hardware stack levels required when called: 1
  7415 ;; This function calls:
  7416 ;;		_get_message_type
  7417 ;; This function is called by:
  7418 ;;		_can_msg_handler
  7419 ;; This function uses a non-reentrant model
  7420 ;;
  7421                           
  7422                           	psect	text54
  7423  0013FA                     __ptext54:
  7424                           	callstack 0
  7425  0013FA                     _get_req_valve_state:
  7426                           	callstack 21
  7427  0013FA                     
  7428                           ;can_common.c: 469: if (!msg) { return -1; }
  7429  0013FA  5005               	movf	get_req_valve_state@msg^0,w,c
  7430  0013FC  1006               	iorwf	(get_req_valve_state@msg+1)^0,w,c
  7431  0013FE  A4D8               	btfss	status,2,c
  7432  001400  EF04  F00A         	goto	i2u199_41
  7433  001404  EF06  F00A         	goto	i2u199_40
  7434  001408                     i2u199_41:
  7435  001408  EF0A  F00A         	goto	i2l3793
  7436  00140C                     i2u199_40:
  7437  00140C                     i2l3791:
  7438  00140C  6805               	setf	?_get_req_valve_state^0,c
  7439  00140E  6806               	setf	(?_get_req_valve_state+1)^0,c
  7440  001410  EF5C  F00A         	goto	i2l544
  7441  001414                     i2l3793:
  7442                           
  7443                           ;can_common.c: 471: uint16_t msg_type = get_message_type(msg);
  7444  001414  C005  F001         	movff	get_req_valve_state@msg,get_message_type@msg
  7445  001418  C006  F002         	movff	get_req_valve_state@msg+1,get_message_type@msg+1
  7446  00141C  ECFD  F00C         	call	_get_message_type	;wreg free
  7447  001420  C001  F009         	movff	?_get_message_type,get_req_valve_state@msg_type
  7448  001424  C002  F00A         	movff	?_get_message_type+1,get_req_valve_state@msg_type+1
  7449                           
  7450                           ;can_common.c: 472: switch (msg_type) {
  7451  001428  EF30  F00A         	goto	i2l3805
  7452  00142C                     i2l3795:
  7453                           
  7454                           ;can_common.c: 474: case 0x4C0:;can_common.c: 475: return msg->data[4];
  7455  00142C  EE20 F007          	lfsr	2,7
  7456  001430  5005               	movf	get_req_valve_state@msg^0,w,c
  7457  001432  26D9               	addwf	fsr2l,f,c
  7458  001434  5006               	movf	(get_req_valve_state@msg+1)^0,w,c
  7459  001436  22DA               	addwfc	fsr2h,f,c
  7460  001438  50DF               	movf	indf2,w,c
  7461  00143A  6E07               	movwf	??_get_req_valve_state^0,c
  7462  00143C  5007               	movf	??_get_req_valve_state^0,w,c
  7463  00143E  6E05               	movwf	?_get_req_valve_state^0,c
  7464  001440  6A06               	clrf	(?_get_req_valve_state+1)^0,c
  7465  001442  EF5C  F00A         	goto	i2l544
  7466  001446                     i2l3799:
  7467                           
  7468                           ;can_common.c: 478: case 0x0C0:;can_common.c: 479: return msg->data[3];
  7469  001446  EE20 F006          	lfsr	2,6
  7470  00144A  5005               	movf	get_req_valve_state@msg^0,w,c
  7471  00144C  26D9               	addwf	fsr2l,f,c
  7472  00144E  5006               	movf	(get_req_valve_state@msg+1)^0,w,c
  7473  001450  22DA               	addwfc	fsr2h,f,c
  7474  001452  50DF               	movf	indf2,w,c
  7475  001454  6E07               	movwf	??_get_req_valve_state^0,c
  7476  001456  5007               	movf	??_get_req_valve_state^0,w,c
  7477  001458  6E05               	movwf	?_get_req_valve_state^0,c
  7478  00145A  6A06               	clrf	(?_get_req_valve_state+1)^0,c
  7479  00145C  EF5C  F00A         	goto	i2l544
  7480  001460                     i2l3805:
  7481  001460  C009  F007         	movff	get_req_valve_state@msg_type,??_get_req_valve_state
  7482  001464  C00A  F008         	movff	get_req_valve_state@msg_type+1,??_get_req_valve_state+1
  7483                           
  7484                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 3 sub-sw
      +                          itches
  7485                           ; Switch size 1, requested type "simple"
  7486                           ; Number of cases is 3, Range of values is 0 to 4
  7487                           ; switch strategies available:
  7488                           ; Name         Instructions Cycles
  7489                           ; simple_byte           10     6 (average)
  7490                           ;	Chosen strategy is simple_byte
  7491  001468  5008               	movf	(??_get_req_valve_state+1)^0,w,c
  7492  00146A  0A00               	xorlw	0	; case 0
  7493  00146C  B4D8               	btfsc	status,2,c
  7494  00146E  EF43  F00A         	goto	i2l7099
  7495  001472  0A01               	xorlw	1	; case 1
  7496  001474  B4D8               	btfsc	status,2,c
  7497  001476  EF4A  F00A         	goto	i2l7101
  7498  00147A  0A05               	xorlw	5	; case 4
  7499  00147C  B4D8               	btfsc	status,2,c
  7500  00147E  EF51  F00A         	goto	i2l7103
  7501  001482  EF06  F00A         	goto	i2l3791
  7502  001486                     i2l7099:
  7503                           
  7504                           ; Switch size 1, requested type "simple"
  7505                           ; Number of cases is 1, Range of values is 192 to 192
  7506                           ; switch strategies available:
  7507                           ; Name         Instructions Cycles
  7508                           ; simple_byte            4     3 (average)
  7509                           ;	Chosen strategy is simple_byte
  7510  001486  5007               	movf	??_get_req_valve_state^0,w,c
  7511  001488  0AC0               	xorlw	192	; case 192
  7512  00148A  B4D8               	btfsc	status,2,c
  7513  00148C  EF23  F00A         	goto	i2l3799
  7514  001490  EF06  F00A         	goto	i2l3791
  7515  001494                     i2l7101:
  7516                           
  7517                           ; Switch size 1, requested type "simple"
  7518                           ; Number of cases is 1, Range of values is 32 to 32
  7519                           ; switch strategies available:
  7520                           ; Name         Instructions Cycles
  7521                           ; simple_byte            4     3 (average)
  7522                           ;	Chosen strategy is simple_byte
  7523  001494  5007               	movf	??_get_req_valve_state^0,w,c
  7524  001496  0A20               	xorlw	32	; case 32
  7525  001498  B4D8               	btfsc	status,2,c
  7526  00149A  EF23  F00A         	goto	i2l3799
  7527  00149E  EF06  F00A         	goto	i2l3791
  7528  0014A2                     i2l7103:
  7529                           
  7530                           ; Switch size 1, requested type "simple"
  7531                           ; Number of cases is 2, Range of values is 96 to 192
  7532                           ; switch strategies available:
  7533                           ; Name         Instructions Cycles
  7534                           ; simple_byte            7     4 (average)
  7535                           ;	Chosen strategy is simple_byte
  7536  0014A2  5007               	movf	??_get_req_valve_state^0,w,c
  7537  0014A4  0A60               	xorlw	96	; case 96
  7538  0014A6  B4D8               	btfsc	status,2,c
  7539  0014A8  EF16  F00A         	goto	i2l3795
  7540  0014AC  0AA0               	xorlw	160	; case 192
  7541  0014AE  B4D8               	btfsc	status,2,c
  7542  0014B0  EF16  F00A         	goto	i2l3795
  7543  0014B4  EF06  F00A         	goto	i2l3791
  7544  0014B8                     i2l544:
  7545  0014B8  0012               	return		;funcret
  7546  0014BA                     __end_of_get_req_valve_state:
  7547                           	callstack 0
  7548                           
  7549 ;; *************** function _get_general_cmd_type *****************
  7550 ;; Defined at:
  7551 ;;		line 431 in file "canlib/can_common.c"
  7552 ;; Parameters:    Size  Location     Type
  7553 ;;  msg             2    4[COMRAM] PTR const struct .
  7554 ;;		 -> can_handle_interrupt@rcvd_msg_2164(11), can_handle_interrupt@rcvd_msg(11), 
  7555 ;; Auto vars:     Size  Location     Type
  7556 ;;  msg_type        2    7[COMRAM] unsigned int 
  7557 ;; Return value:  Size  Location     Type
  7558 ;;                  2    4[COMRAM] int 
  7559 ;; Registers used:
  7560 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7561 ;; Tracked objects:
  7562 ;;		On entry : 0/0
  7563 ;;		On exit  : 0/0
  7564 ;;		Unchanged: 0/0
  7565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7566 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7567 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7568 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7569 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7570 ;;Total ram usage:        5 bytes
  7571 ;; Hardware stack levels used: 1
  7572 ;; Hardware stack levels required when called: 1
  7573 ;; This function calls:
  7574 ;;		_get_message_type
  7575 ;; This function is called by:
  7576 ;;		_can_msg_handler
  7577 ;; This function uses a non-reentrant model
  7578 ;;
  7579                           
  7580                           	psect	text55
  7581  0019A0                     __ptext55:
  7582                           	callstack 0
  7583  0019A0                     _get_general_cmd_type:
  7584                           	callstack 21
  7585  0019A0                     
  7586                           ;can_common.c: 432: if (!msg) { return -1; }
  7587  0019A0  5005               	movf	get_general_cmd_type@msg^0,w,c
  7588  0019A2  1006               	iorwf	(get_general_cmd_type@msg+1)^0,w,c
  7589  0019A4  A4D8               	btfss	status,2,c
  7590  0019A6  EFD7  F00C         	goto	i2u197_41
  7591  0019AA  EFD9  F00C         	goto	i2u197_40
  7592  0019AE                     i2u197_41:
  7593  0019AE  EFDD  F00C         	goto	i2l3779
  7594  0019B2                     i2u197_40:
  7595  0019B2                     i2l3777:
  7596  0019B2  6805               	setf	?_get_general_cmd_type^0,c
  7597  0019B4  6806               	setf	(?_get_general_cmd_type+1)^0,c
  7598  0019B6  EFFC  F00C         	goto	i2l524
  7599  0019BA                     i2l3779:
  7600                           
  7601                           ;can_common.c: 434: uint16_t msg_type = get_message_type(msg);
  7602  0019BA  C005  F001         	movff	get_general_cmd_type@msg,get_message_type@msg
  7603  0019BE  C006  F002         	movff	get_general_cmd_type@msg+1,get_message_type@msg+1
  7604  0019C2  ECFD  F00C         	call	_get_message_type	;wreg free
  7605  0019C6  C001  F008         	movff	?_get_message_type,get_general_cmd_type@msg_type
  7606  0019CA  C002  F009         	movff	?_get_message_type+1,get_general_cmd_type@msg_type+1
  7607  0019CE                     
  7608                           ;can_common.c: 435: if (msg_type == 0x060) {
  7609  0019CE  0E60               	movlw	96
  7610  0019D0  1808               	xorwf	get_general_cmd_type@msg_type^0,w,c
  7611  0019D2  1009               	iorwf	(get_general_cmd_type@msg_type+1)^0,w,c
  7612  0019D4  A4D8               	btfss	status,2,c
  7613  0019D6  EFEF  F00C         	goto	i2u198_41
  7614  0019DA  EFF1  F00C         	goto	i2u198_40
  7615  0019DE                     i2u198_41:
  7616  0019DE  EFD9  F00C         	goto	i2l3777
  7617  0019E2                     i2u198_40:
  7618  0019E2                     
  7619                           ;can_common.c: 436: return msg->data[3];
  7620  0019E2  EE20 F006          	lfsr	2,6
  7621  0019E6  5005               	movf	get_general_cmd_type@msg^0,w,c
  7622  0019E8  26D9               	addwf	fsr2l,f,c
  7623  0019EA  5006               	movf	(get_general_cmd_type@msg+1)^0,w,c
  7624  0019EC  22DA               	addwfc	fsr2h,f,c
  7625  0019EE  50DF               	movf	indf2,w,c
  7626  0019F0  6E07               	movwf	??_get_general_cmd_type^0,c
  7627  0019F2  5007               	movf	??_get_general_cmd_type^0,w,c
  7628  0019F4  6E05               	movwf	?_get_general_cmd_type^0,c
  7629  0019F6  6A06               	clrf	(?_get_general_cmd_type+1)^0,c
  7630  0019F8                     i2l524:
  7631  0019F8  0012               	return		;funcret
  7632  0019FA                     __end_of_get_general_cmd_type:
  7633                           	callstack 0
  7634                           
  7635 ;; *************** function _get_message_type *****************
  7636 ;; Defined at:
  7637 ;;		line 507 in file "canlib/can_common.c"
  7638 ;; Parameters:    Size  Location     Type
  7639 ;;  msg             2    0[COMRAM] PTR const struct .
  7640 ;;		 -> can_handle_interrupt@rcvd_msg_2164(11), can_handle_interrupt@rcvd_msg(11), 
  7641 ;; Auto vars:     Size  Location     Type
  7642 ;;		None
  7643 ;; Return value:  Size  Location     Type
  7644 ;;                  2    0[COMRAM] unsigned int 
  7645 ;; Registers used:
  7646 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7647 ;; Tracked objects:
  7648 ;;		On entry : 0/0
  7649 ;;		On exit  : 0/0
  7650 ;;		Unchanged: 0/0
  7651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7652 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7654 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7655 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7656 ;;Total ram usage:        4 bytes
  7657 ;; Hardware stack levels used: 1
  7658 ;; This function calls:
  7659 ;;		Nothing
  7660 ;; This function is called by:
  7661 ;;		_can_msg_handler
  7662 ;;		_get_general_cmd_type
  7663 ;;		_get_req_valve_state
  7664 ;;		_get_fill_info
  7665 ;;		_get_reset_board_id
  7666 ;;		_get_curr_valve_state
  7667 ;;		_get_curr_arm_state
  7668 ;;		_get_req_arm_state
  7669 ;;		_get_timestamp
  7670 ;;		_is_sensor_data
  7671 ;;		_get_imu_data
  7672 ;;		_get_analog_data
  7673 ;;		_get_altitude_data
  7674 ;;		_get_pyro_voltage_data
  7675 ;;		_get_gps_time
  7676 ;;		_get_gps_lat
  7677 ;;		_get_gps_lon
  7678 ;;		_get_gps_alt
  7679 ;;		_get_gps_info
  7680 ;;		_get_radi_info
  7681 ;;		_message_debug_level
  7682 ;; This function uses a non-reentrant model
  7683 ;;
  7684                           
  7685                           	psect	text56
  7686  0019FA                     __ptext56:
  7687                           	callstack 0
  7688  0019FA                     _get_message_type:
  7689                           	callstack 21
  7690  0019FA                     
  7691                           ;can_common.c: 510: if (!msg) { return 0; }
  7692  0019FA  5001               	movf	get_message_type@msg^0,w,c
  7693  0019FC  1002               	iorwf	(get_message_type@msg+1)^0,w,c
  7694  0019FE  A4D8               	btfss	status,2,c
  7695  001A00  EF04  F00D         	goto	i2u190_41
  7696  001A04  EF06  F00D         	goto	i2u190_40
  7697  001A08                     i2u190_41:
  7698  001A08  EF0C  F00D         	goto	i2l3723
  7699  001A0C                     i2u190_40:
  7700  001A0C  0E00               	movlw	0
  7701  001A0E  6E02               	movwf	(?_get_message_type+1)^0,c
  7702  001A10  0E00               	movlw	0
  7703  001A12  6E01               	movwf	?_get_message_type^0,c
  7704  001A14  EF1E  F00D         	goto	i2l569
  7705  001A18                     i2l3723:
  7706                           
  7707                           ;can_common.c: 512: return (msg->sid & 0x7E0);
  7708  001A18  0060  F007  FFD9   	movff	get_message_type@msg,fsr2l
  7709  001A1E  0060  F00B  FFDA   	movff	get_message_type@msg+1,fsr2h
  7710  001A24  006F FF78  F003    	movff	postinc2,??_get_message_type
  7711  001A2A  006F FF74  F004    	movff	postdec2,??_get_message_type+1
  7712  001A30  0EE0               	movlw	224
  7713  001A32  1403               	andwf	??_get_message_type^0,w,c
  7714  001A34  6E01               	movwf	?_get_message_type^0,c
  7715  001A36  0E07               	movlw	7
  7716  001A38  1404               	andwf	(??_get_message_type+1)^0,w,c
  7717  001A3A  6E02               	movwf	(?_get_message_type+1)^0,c
  7718  001A3C                     i2l569:
  7719  001A3C  0012               	return		;funcret
  7720  001A3E                     __end_of_get_message_type:
  7721                           	callstack 0
  7722                           
  7723 ;; *************** function _get_board_unique_id *****************
  7724 ;; Defined at:
  7725 ;;		line 515 in file "canlib/can_common.c"
  7726 ;; Parameters:    Size  Location     Type
  7727 ;;  msg             2    0[COMRAM] PTR const struct .
  7728 ;;		 -> can_handle_interrupt@rcvd_msg_2164(11), can_handle_interrupt@rcvd_msg(11), 
  7729 ;; Auto vars:     Size  Location     Type
  7730 ;;		None
  7731 ;; Return value:  Size  Location     Type
  7732 ;;                  1    wreg      unsigned char 
  7733 ;; Registers used:
  7734 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7735 ;; Tracked objects:
  7736 ;;		On entry : 0/0
  7737 ;;		On exit  : 0/0
  7738 ;;		Unchanged: 0/0
  7739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7740 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7743 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7744 ;;Total ram usage:        2 bytes
  7745 ;; Hardware stack levels used: 1
  7746 ;; This function calls:
  7747 ;;		Nothing
  7748 ;; This function is called by:
  7749 ;;		_can_msg_handler
  7750 ;; This function uses a non-reentrant model
  7751 ;;
  7752                           
  7753                           	psect	text57
  7754  001CB2                     __ptext57:
  7755                           	callstack 0
  7756  001CB2                     _get_board_unique_id:
  7757                           	callstack 22
  7758  001CB2                     
  7759                           ;can_common.c: 518: if (!msg) { return 0; }
  7760  001CB2  5001               	movf	get_board_unique_id@msg^0,w,c
  7761  001CB4  1002               	iorwf	(get_board_unique_id@msg+1)^0,w,c
  7762  001CB6  A4D8               	btfss	status,2,c
  7763  001CB8  EF60  F00E         	goto	i2u196_41
  7764  001CBC  EF62  F00E         	goto	i2u196_40
  7765  001CC0                     i2u196_41:
  7766  001CC0  EF65  F00E         	goto	i2l3771
  7767  001CC4                     i2u196_40:
  7768  001CC4  0E00               	movlw	0
  7769  001CC6  EF6D  F00E         	goto	i2l573
  7770  001CCA                     i2l3771:
  7771                           
  7772                           ;can_common.c: 520: return ((uint8_t) (msg->sid & 0x1F));
  7773  001CCA  0060  F007  FFD9   	movff	get_board_unique_id@msg,fsr2l
  7774  001CD0  0060  F00B  FFDA   	movff	get_board_unique_id@msg+1,fsr2h
  7775  001CD6  50DF               	movf	indf2,w,c
  7776  001CD8  0B1F               	andlw	31
  7777  001CDA                     i2l573:
  7778  001CDA  0012               	return		;funcret
  7779  001CDC                     __end_of_get_board_unique_id:
  7780                           	callstack 0
  7781                           
  7782                           ;
  7783                           ; Interrupt Vector Table @ 0x8
  7784                           ;
  7785                           
  7786                           	psect	ivt0x8
  7787  000008                     __pivt0x8:
  7788                           	callstack 0
  7789  000008                     ivt0x8_base:
  7790                           	callstack 0
  7791                           
  7792                           ; high-priority vector
  7793  000008  EF5F  F00D         	goto	_interrupt_handler
  7794  000018                     	org	16
  7795                           
  7796                           ; low-priority vector
  7797  000018  00FF               	reset	
  7798  0000                     
  7799                           	psect	text58
  7800  000000                     __ptext58:
  7801                           	callstack 0
  7802  000000                     
  7803                           	psect	rparam
  7804  0000                     
  7805                           	psect	idloc
  7806                           
  7807                           ;Config register IDLOC0 @ 0x200000
  7808                           ;	unspecified, using default values
  7809  200000                     	org	2097152
  7810  200000  0FFF               	dw	4095
  7811                           
  7812                           ;Config register IDLOC1 @ 0x200002
  7813                           ;	unspecified, using default values
  7814  200002                     	org	2097154
  7815  200002  0FFF               	dw	4095
  7816                           
  7817                           ;Config register IDLOC2 @ 0x200004
  7818                           ;	unspecified, using default values
  7819  200004                     	org	2097156
  7820  200004  0FFF               	dw	4095
  7821                           
  7822                           ;Config register IDLOC3 @ 0x200006
  7823                           ;	unspecified, using default values
  7824  200006                     	org	2097158
  7825  200006  0FFF               	dw	4095
  7826                           
  7827                           ;Config register IDLOC4 @ 0x200008
  7828                           ;	unspecified, using default values
  7829  200008                     	org	2097160
  7830  200008  0FFF               	dw	4095
  7831                           
  7832                           ;Config register IDLOC5 @ 0x20000A
  7833                           ;	unspecified, using default values
  7834  20000A                     	org	2097162
  7835  20000A  0FFF               	dw	4095
  7836                           
  7837                           ;Config register IDLOC6 @ 0x20000C
  7838                           ;	unspecified, using default values
  7839  20000C                     	org	2097164
  7840  20000C  0FFF               	dw	4095
  7841                           
  7842                           ;Config register IDLOC7 @ 0x20000E
  7843                           ;	unspecified, using default values
  7844  20000E                     	org	2097166
  7845  20000E  0FFF               	dw	4095
  7846                           
  7847                           	psect	config
  7848                           
  7849                           ;Config register CONFIG1L @ 0x300000
  7850                           ;	External Oscillator Selection
  7851                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  7852                           ;	Reset Oscillator Selection
  7853                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC with HFFRQ = 4 MHz and CDIV = 4:1
  7854  300000                     	org	3145728
  7855  300000  EA                 	db	234
  7856                           
  7857                           ;Config register CONFIG1H @ 0x300001
  7858                           ;	Clock out Enable bit
  7859                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  7860                           ;	PRLOCKED One-Way Set Enable bit
  7861                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  7862                           ;	Clock Switch Enable bit
  7863                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  7864                           ;	Fail-Safe Clock Monitor Enable bit
  7865                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  7866  300001                     	org	3145729
  7867  300001  FF                 	db	255
  7868                           
  7869                           ;Config register CONFIG2L @ 0x300002
  7870                           ;	MCLR Enable bit
  7871                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  7872                           ;	Power-up timer selection bits
  7873                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  7874                           ;	Multi-vector enable bit
  7875                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
  7876                           ;	IVTLOCK bit One-way set enable bit
  7877                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  7878                           ;	Low Power BOR Enable bit
  7879                           ;	LPBOREN = OFF, ULPBOR disabled
  7880                           ;	Brown-out Reset Enable bits
  7881                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  7882  300002                     	org	3145730
  7883  300002  F7                 	db	247
  7884                           
  7885                           ;Config register CONFIG2H @ 0x300003
  7886                           ;	Brown-out Reset Voltage Selection bits
  7887                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  7888                           ;	ZCD Disable bit
  7889                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  7890                           ;	PPSLOCK bit One-Way Set Enable bit
  7891                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  7892                           ;	Stack Full/Underflow Reset Enable bit
  7893                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7894                           ;	Debugger Enable bit
  7895                           ;	DEBUG = OFF, Background debugger disabled
  7896                           ;	Extended Instruction Set Enable bit
  7897                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  7898  300003                     	org	3145731
  7899  300003  FF                 	db	255
  7900                           
  7901                           ;Config register CONFIG3L @ 0x300004
  7902                           ;	WDT Period selection bits
  7903                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  7904                           ;	WDT operating mode
  7905                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  7906  300004                     	org	3145732
  7907  300004  9F                 	db	159
  7908                           
  7909                           ;Config register CONFIG3H @ 0x300005
  7910                           ;	WDT Window Select bits
  7911                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  7912                           ;	WDT input clock selector
  7913                           ;	WDTCCS = SC, Software Control
  7914  300005                     	org	3145733
  7915  300005  FF                 	db	255
  7916                           
  7917                           ;Config register CONFIG4L @ 0x300006
  7918                           ;	Boot Block Size selection bits
  7919                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  7920                           ;	Boot Block enable bit
  7921                           ;	BBEN = OFF, Boot block disabled
  7922                           ;	Storage Area Flash enable bit
  7923                           ;	SAFEN = OFF, SAF disabled
  7924                           ;	Application Block write protection bit
  7925                           ;	WRTAPP = OFF, Application Block not write protected
  7926  300006                     	org	3145734
  7927  300006  FF                 	db	255
  7928                           
  7929                           ;Config register CONFIG4H @ 0x300007
  7930                           ;	Configuration Register Write Protection bit
  7931                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
  7932                           ;	Boot Block Write Protection bit
  7933                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
  7934                           ;	Data EEPROM Write Protection bit
  7935                           ;	WRTD = OFF, Data EEPROM not write-protected
  7936                           ;	SAF Write protection bit
  7937                           ;	WRTSAF = OFF, SAF not Write Protected
  7938                           ;	Low Voltage Programming Enable bit
  7939                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  7940  300007                     	org	3145735
  7941  300007  FF                 	db	255
  7942                           
  7943                           ;Config register CONFIG5L @ 0x300008
  7944                           ;	PFM and Data EEPROM Code Protection bit
  7945                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  7946  300008                     	org	3145736
  7947  300008  FF                 	db	255
  7948                           
  7949                           ;Config register CONFIG5H @ 0x300009
  7950                           ;	unspecified, using default values
  7951  300009                     	org	3145737
  7952  300009  FF                 	db	255
  7953                           tosu	equ	0x3FFF
  7954                           tosh	equ	0x3FFE
  7955                           tosl	equ	0x3FFD
  7956                           stkptr	equ	0x3FFC
  7957                           pclatu	equ	0x3FFB
  7958                           pclath	equ	0x3FFA
  7959                           pcl	equ	0x3FF9
  7960                           tblptru	equ	0x3FF8
  7961                           tblptrh	equ	0x3FF7
  7962                           tblptrl	equ	0x3FF6
  7963                           tablat	equ	0x3FF5
  7964                           prodh	equ	0x3FF4
  7965                           prodl	equ	0x3FF3
  7966                           indf0	equ	0x3FEF
  7967                           postinc0	equ	0x3FEE
  7968                           postdec0	equ	0x3FED
  7969                           preinc0	equ	0x3FEC
  7970                           plusw0	equ	0x3FEB
  7971                           fsr0h	equ	0x3FEA
  7972                           fsr0l	equ	0x3FE9
  7973                           wreg	equ	0x3FE8
  7974                           indf1	equ	0x3FE7
  7975                           postinc1	equ	0x3FE6
  7976                           postdec1	equ	0x3FE5
  7977                           preinc1	equ	0x3FE4
  7978                           plusw1	equ	0x3FE3
  7979                           fsr1h	equ	0x3FE2
  7980                           fsr1l	equ	0x3FE1
  7981                           bsr	equ	0x3FE0
  7982                           indf2	equ	0x3FDF
  7983                           postinc2	equ	0x3FDE
  7984                           postdec2	equ	0x3FDD
  7985                           preinc2	equ	0x3FDC
  7986                           plusw2	equ	0x3FDB
  7987                           fsr2h	equ	0x3FDA
  7988                           fsr2l	equ	0x3FD9
  7989                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         131
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     44      51
    BANK0           160    109     133
    BANK1           256      0     100
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    Absolute function$0	PTR const struct . size(2) Largest target is 11
		 -> can_handle_interrupt@rcvd_msg_2164(COMRAM[11]), can_handle_interrupt@rcvd_msg(COMRAM[11]), 

    receive_callback$0	PTR const struct . size(2) Largest target is 11
		 -> can_handle_interrupt@rcvd_msg_2164(COMRAM[11]), can_handle_interrupt@rcvd_msg(COMRAM[11]), 

    can_send_fp$0	PTR const struct . size(2) Largest target is 11
		 -> txb_heartbeat@msg_sent(BANK0[11]), 

    S2308$0$0	PTR const struct . size(2) Largest target is 11
		 -> txb_heartbeat@msg_sent(BANK0[11]), 

    can_rcv_cb$0	PTR const struct . size(2) Largest target is 11
		 -> can_handle_interrupt@rcvd_msg_2164(COMRAM[11]), can_handle_interrupt@rcvd_msg(COMRAM[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 100
		 -> txb_heartbeat@msg_sent(BANK0[11]), can_handle_interrupt@rcvd_msg_2164(COMRAM[11]), can_handle_interrupt@rcvd_msg(COMRAM[11]), TXB0D0(SFR[1]), 
		 -> tx_pool(BANK1[100]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 100
		 -> txb_heartbeat@msg_sent(BANK0[11]), can_handle_interrupt@rcvd_msg_2164(COMRAM[11]), can_handle_interrupt@rcvd_msg(COMRAM[11]), TXB0D0(SFR[1]), 
		 -> tx_pool(BANK1[100]), 

    memcpy@s1	PTR const void  size(2) Largest target is 100
		 -> vent_send_status@stat_msg(BANK0[11]), txb_heartbeat@msg_sent(BANK0[11]), check_bus_current_error@error_msg(BANK0[11]), check_battery_voltage_error@batt_msg(BANK0[11]), 
		 -> check_battery_voltage_error@error_msg(BANK0[11]), RXB1D0(SFR[1]), RXB0D0(SFR_9[1]), send_status_ok@board_stat_msg(BANK0[11]), 
		 -> main@error_msg(BANK0[11]), tx_pool(BANK1[100]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 100
		 -> vent_send_status@stat_msg(BANK0[11]), txb_heartbeat@msg_sent(BANK0[11]), check_bus_current_error@error_msg(BANK0[11]), check_battery_voltage_error@batt_msg(BANK0[11]), 
		 -> check_battery_voltage_error@error_msg(BANK0[11]), RXB1D0(SFR[1]), RXB0D0(SFR_9[1]), send_status_ok@board_stat_msg(BANK0[11]), 
		 -> main@error_msg(BANK0[11]), tx_pool(BANK1[100]), 

    srb_peek@ctx.memory_pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK1[100]), 

    srb_pop@element	PTR void  size(2) Largest target is 11
		 -> txb_heartbeat@msg_sent(BANK0[11]), 

    srb_pop@ctx.memory_pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK1[100]), 

    srb_pop@ctx	PTR struct . size(2) Largest target is 11
		 -> buf(BANK0[10]), 

    srb_is_empty@ctx.memory_pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK1[100]), 

    srb_is_empty@ctx	PTR const struct . size(2) Largest target is 11
		 -> buf(BANK0[10]), 

    srb_is_full@ctx.memory_pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK1[100]), 

    srb_is_full@ctx	PTR const struct . size(2) Largest target is 11
		 -> buf(BANK0[10]), 

    srb_push@element	PTR const void  size(2) Largest target is 11
		 -> vent_send_status@stat_msg(BANK0[11]), check_bus_current_error@error_msg(BANK0[11]), check_battery_voltage_error@batt_msg(BANK0[11]), check_battery_voltage_error@error_msg(BANK0[11]), 
		 -> send_status_ok@board_stat_msg(BANK0[11]), main@error_msg(BANK0[11]), 

    srb_push@ctx.memory_pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK1[100]), 

    srb_push@ctx	PTR struct . size(2) Largest target is 11
		 -> buf(BANK0[10]), 

    srb_init@ctx.memory_pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK1[100]), 

    srb_init@pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK1[100]), 

    srb_init@ctx	PTR struct . size(2) Largest target is 11
		 -> buf(BANK0[10]), 

    get_offset_bytes@ctx.memory_pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK1[100]), 

    get_offset_bytes@ctx	PTR const struct . size(2) Largest target is 11
		 -> buf(BANK0[10]), 

    txb_enqueue@msg	PTR const struct . size(2) Largest target is 11
		 -> vent_send_status@stat_msg(BANK0[11]), check_bus_current_error@error_msg(BANK0[11]), check_battery_voltage_error@batt_msg(BANK0[11]), check_battery_voltage_error@error_msg(BANK0[11]), 
		 -> send_status_ok@board_stat_msg(BANK0[11]), main@error_msg(BANK0[11]), 

    txb_init@pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK1[100]), 

    txb_init@can_tx_ready	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> can_send_rdy(), 

    txb_init@can_send_fp	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> can_send(), 

    S2308$can_tx_ready	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> can_send_rdy(), 

    ctx.can_tx_ready	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> can_send_rdy(), 

    S2308$can_send_fp	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> can_send(), 

    ctx.can_send_fp	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> can_send(), 

    S2296$memory_pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK1[100]), 

    buf.memory_pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK1[100]), 

    can_generate_timing_params@timing	PTR struct . size(2) Largest target is 7
		 -> main@can_setup(BANK0[7]), 

    sp__memcpy	PTR void  size(2) Largest target is 100
		 -> txb_heartbeat@msg_sent(BANK0[11]), can_handle_interrupt@rcvd_msg_2164(COMRAM[11]), can_handle_interrupt@rcvd_msg(COMRAM[11]), TXB0D0(SFR[1]), 
		 -> tx_pool(BANK1[100]), 

    can_send@message	PTR const struct . size(2) Largest target is 11
		 -> txb_heartbeat@msg_sent(BANK0[11]), 

    can_init@timing	PTR const struct . size(2) Largest target is 7
		 -> main@can_setup(BANK0[7]), 

    can_init@receive_callback	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> can_msg_handler(), 

    can_rcv_cb	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> Absolute function(), can_msg_handler(), 

    sp__build_radio_cmd_can_message	PTR const unsigned char  size(2) Largest target is 0

    sp__build_printf_can_message	PTR const unsigned char  size(2) Largest target is 0

    get_board_unique_id@msg	PTR const struct . size(2) Largest target is 11
		 -> can_handle_interrupt@rcvd_msg_2164(COMRAM[11]), can_handle_interrupt@rcvd_msg(COMRAM[11]), 

    get_message_type@msg	PTR const struct . size(2) Largest target is 11
		 -> can_handle_interrupt@rcvd_msg_2164(COMRAM[11]), can_handle_interrupt@rcvd_msg(COMRAM[11]), 

    get_req_valve_state@msg	PTR const struct . size(2) Largest target is 11
		 -> can_handle_interrupt@rcvd_msg_2164(COMRAM[11]), can_handle_interrupt@rcvd_msg(COMRAM[11]), 

    get_general_cmd_type@msg	PTR const struct . size(2) Largest target is 11
		 -> can_handle_interrupt@rcvd_msg_2164(COMRAM[11]), can_handle_interrupt@rcvd_msg(COMRAM[11]), 

    build_analog_data_msg@output	PTR struct . size(2) Largest target is 11
		 -> check_battery_voltage_error@batt_msg(BANK0[11]), 

    build_board_stat_msg@output	PTR struct . size(2) Largest target is 11
		 -> check_bus_current_error@error_msg(BANK0[11]), check_battery_voltage_error@error_msg(BANK0[11]), send_status_ok@board_stat_msg(BANK0[11]), main@error_msg(BANK0[11]), 

    build_board_stat_msg@error_data	PTR unsigned char  size(2) Largest target is 2
		 -> check_bus_current_error@curr_data(BANK0[2]), check_battery_voltage_error@batt_data(BANK0[2]), NULL(NULL[0]), 

    build_valve_stat_msg@output	PTR struct . size(2) Largest target is 11
		 -> vent_send_status@stat_msg(BANK0[11]), 

    write_timestamp_3bytes@output	PTR struct . size(2) Largest target is 11
		 -> vent_send_status@stat_msg(BANK0[11]), check_bus_current_error@error_msg(BANK0[11]), check_battery_voltage_error@error_msg(BANK0[11]), send_status_ok@board_stat_msg(BANK0[11]), 
		 -> main@error_msg(BANK0[11]), 

    write_timestamp_2bytes@output	PTR struct . size(2) Largest target is 11
		 -> check_battery_voltage_error@batt_msg(BANK0[11]), 

    can_msg_handler@msg	PTR const struct . size(2) Largest target is 11
		 -> can_handle_interrupt@rcvd_msg_2164(COMRAM[11]), can_handle_interrupt@rcvd_msg(COMRAM[11]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _interrupt_handler in COMRAM

    _interrupt_handler->_can_handle_interrupt
    _can_handle_interrupt->_can_msg_handler
    _can_msg_handler->_get_req_valve_state
    _get_req_valve_state->_get_message_type
    _get_general_cmd_type->_get_message_type

Critical Paths under _main in BANK0

    _main->_check_battery_voltage_error
    _vent_send_status->_txb_enqueue
    _build_valve_stat_msg->_write_timestamp_3bytes
    _txb_init->_srb_init
    _srb_init->___lwdiv
    _txb_heartbeat->_srb_pop
    _srb_pop->_get_offset_bytes
    _can_send->_memcpy
    _send_status_ok->_txb_enqueue
    _check_bus_current_error->_txb_enqueue
    _check_battery_voltage_error->___fttol
    _txb_enqueue->_srb_push
    _srb_push->_get_offset_bytes
    _get_offset_bytes->___wmul
    _build_board_stat_msg->_write_timestamp_3bytes
    _build_analog_data_msg->_millis
    _build_analog_data_msg->_write_timestamp_2bytes
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___lwtoft

Critical Paths under _interrupt_handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupt_handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupt_handler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupt_handler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interrupt_handler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interrupt_handler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interrupt_handler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interrupt_handler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interrupt_handler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interrupt_handler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interrupt_handler in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _interrupt_handler in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _interrupt_handler in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _interrupt_handler in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                33    28      5   67843
                                             76 BANK0     33    28      5
   _ADCC_DisableContinuousConversion
                    _ADCC_Initialize
                     _FVR_Initialize
                           _LED_init
              _OSCILLATOR_Initialize
                  _SYSTEM_Initialize
               _build_board_stat_msg
         _can_generate_timing_params
                           _can_init
        _check_battery_voltage_error
            _check_bus_current_error
              _check_valve_pin_error
           _is_batt_voltage_critical
                             _millis
                     _send_status_ok
                        _timer0_init
                        _txb_enqueue
                      _txb_heartbeat
                           _txb_init
                         _valve_init
                         _vent_close
                          _vent_open
                   _vent_send_status
 ---------------------------------------------------------------------------------
 (1) _vent_send_status                                    15    15      0    8632
                                             24 BANK0     15    15      0
               _build_valve_stat_msg
             _get_valve_closed_state
               _get_valve_open_state
                             _millis
                        _txb_enqueue
 ---------------------------------------------------------------------------------
 (2) _get_valve_open_state                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _get_valve_closed_state                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _build_valve_stat_msg                                12     2     10    3888
                                              6 BANK0     12     2     10
                             _millis (ARG)
             _write_timestamp_3bytes
 ---------------------------------------------------------------------------------
 (1) _vent_open                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _vent_close                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _valve_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _txb_init                                             8     0      8    1724
                                             15 BANK0      8     0      8
                           _srb_init
 ---------------------------------------------------------------------------------
 (2) _srb_init                                             8     0      8    1240
                                              7 BANK0      8     0      8
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (1) _txb_heartbeat                                       11    11      0    5789
                                             22 BANK0     11    11      0
                           _can_send *
                       _can_send_rdy *
                       _srb_is_empty
                            _srb_pop
 ---------------------------------------------------------------------------------
 (2) _srb_pop                                             10     6      4    3459
                                             12 BANK0     10     6      4
                   _get_offset_bytes
                             _memcpy
                       _srb_is_empty
 ---------------------------------------------------------------------------------
 (3) _srb_is_empty                                         6     4      2     332
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _can_send_rdy                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _can_send                                             4     2      2    1900
                                             11 BANK0      4     2      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _send_status_ok                                      11    11      0    9877
                                             24 BANK0     11    11      0
               _build_board_stat_msg
                             _millis
                        _txb_enqueue
 ---------------------------------------------------------------------------------
 (1) _is_batt_voltage_critical                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_valve_pin_error                                1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _check_bus_current_error                             21    21      0   10750
                                             24 BANK0     21    21      0
           _ADCC_GetSingleConversion
                            ___lwdiv
               _build_board_stat_msg
                             _millis
                        _txb_enqueue
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     601
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _check_battery_voltage_error                         35    35      0   19316
                                             41 BANK0     35    35      0
           _ADCC_GetSingleConversion
                            ___ftmul
                            ___fttol
                           ___lwtoft
              _build_analog_data_msg
               _build_board_stat_msg
                             _millis
                        _txb_enqueue
 ---------------------------------------------------------------------------------
 (2) _txb_enqueue                                          2     0      2    4368
                                             22 BANK0      2     0      2
                        _srb_is_full
                           _srb_push
 ---------------------------------------------------------------------------------
 (3) _srb_push                                            10     6      4    3462
                                             12 BANK0     10     6      4
                   _get_offset_bytes
                             _memcpy
                        _srb_is_full
 ---------------------------------------------------------------------------------
 (4) _srb_is_full                                          6     4      2     335
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              11     5      6    1618
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (4) _get_offset_bytes                                     6     2      4    1016
                                              6 BANK0      6     2      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     352
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _millis                                               4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _build_board_stat_msg                                15     5     10    5399
                                              6 BANK0     15     5     10
                             _millis (ARG)
             _write_timestamp_3bytes
 ---------------------------------------------------------------------------------
 (3) _write_timestamp_3bytes                               6     0      6    3066
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) _build_analog_data_msg                                9     0      9    1185
                                              4 BANK0      9     0      9
                             _millis (ARG)
             _write_timestamp_2bytes
 ---------------------------------------------------------------------------------
 (3) _write_timestamp_2bytes                               4     0      4     484
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    3314
                                              8 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     328
                                             26 BANK0     15    11      4
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    4001
                                             11 BANK0     15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    3193
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _ADCC_GetSingleConversion                             5     3      2      31
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _can_init                                             5     1      4     428
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (1) _can_generate_timing_params                          10     4      6    1079
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                    _ADCC_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADCC_DisableContinuousConversion                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _interrupt_handler                                    0     0      0    6134
               _can_handle_interrupt
            _timer0_handle_interrupt
 ---------------------------------------------------------------------------------
 (7) _timer0_handle_interrupt                              0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _can_handle_interrupt                                26    26      0    6134
                                             18 COMRAM    26    26      0
                   Absolute function *
                    _can_msg_handler *
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (8) i2_memcpy                                            11     5      6     299
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (8) _can_msg_handler                                      8     6      2    5633
                                             10 COMRAM     8     6      2
                _get_board_unique_id
               _get_general_cmd_type
                   _get_message_type
                _get_req_valve_state
                           i2_millis
 ---------------------------------------------------------------------------------
 (9) i2_millis                                             4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (9) _get_req_valve_state                                  6     4      2    1827
                                              4 COMRAM     6     4      2
                   _get_message_type
 ---------------------------------------------------------------------------------
 (9) _get_general_cmd_type                                 5     3      2    1805
                                              4 COMRAM     5     3      2
                   _get_message_type
 ---------------------------------------------------------------------------------
 (10) _get_message_type                                    4     2      2    1640
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (9) _get_board_unique_id                                  2     0      2     120
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_DisableContinuousConversion
   _ADCC_Initialize
   _FVR_Initialize
   _LED_init
   _OSCILLATOR_Initialize
   _SYSTEM_Initialize
     _ADCC_Initialize
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _build_board_stat_msg
     _millis (ARG)
     _write_timestamp_3bytes (ARG)
   _can_generate_timing_params
   _can_init
   _check_battery_voltage_error
     _ADCC_GetSingleConversion
     ___ftmul
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
       ___lwtoft (ARG)
     ___lwtoft
     _build_analog_data_msg
       _millis (ARG)
       _write_timestamp_2bytes (ARG)
     _build_board_stat_msg
     _millis
     _txb_enqueue
       _srb_is_full
       _srb_push
         _get_offset_bytes
           ___wmul
         _memcpy
         _srb_is_full
   _check_bus_current_error
     _ADCC_GetSingleConversion
     ___lwdiv
     _build_board_stat_msg
     _millis
     _txb_enqueue
   _check_valve_pin_error
   _is_batt_voltage_critical
   _millis
   _send_status_ok
     _build_board_stat_msg
     _millis
     _txb_enqueue
   _timer0_init
   _txb_enqueue
   _txb_heartbeat
     _can_send *
       _memcpy
     _can_send_rdy *
     _srb_is_empty *
     _srb_pop *
       _get_offset_bytes
       _memcpy
       _srb_is_empty
   _txb_init
     _srb_init
       ___lwdiv
   _valve_init
   _vent_close
   _vent_open
   _vent_send_status
     _build_valve_stat_msg
       _millis (ARG)
       _write_timestamp_3bytes (ARG)
     _get_valve_closed_state
     _get_valve_open_state
     _millis
     _txb_enqueue

 _interrupt_handler (ROOT)
   _can_handle_interrupt
     Absolute function(Fake) *
     _can_msg_handler *
       _get_board_unique_id
       _get_general_cmd_type
         _get_message_type
       _get_message_type
       _get_req_valve_state
         _get_message_type
       i2_millis
     i2_memcpy *
   _timer0_handle_interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      35        0.0%
BANK15             100      0       0      36        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      64       8       39.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6D      85       5       83.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2C      33       1       53.7%
BITSFR_9             0      0       0     200        0.0%
SFR_9                0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11C       6        0.0%
DATA                 0      0     11C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Nov 28 14:28:41 2021

                        ??_get_message_type 0003                                srb_init@pool 0069  
         __size_of_is_batt_voltage_critical 0006                   ?_is_batt_voltage_critical 0001  
                                        l35 1B72                                          l80 1CAC  
                                        l81 1CAC                                          l73 1DBA  
                                        l83 1CB0                                          l76 1C8C  
                                        l86 1D70                     ?_get_valve_closed_state 0001  
                    __end_of_FVR_Initialize 1E2E                         ___wmul@multiplicand 0062  
             __size_of_get_general_cmd_type 005A       timer0_handle_interrupt@internal_count 0033  
                    __size_of_txb_heartbeat 0088                       build_board_stat_msg@i 0073  
                                       l410 1D8E                                         l180 1ABC  
                                       l237 1E44                                         l165 1944  
                                       l253 1E2C                                         l421 1D00  
                                       l407 1DF4                                         l424 1C20  
                                       l177 1A92                                         l362 04BE  
                                       l355 03DA                                         l453 13F8  
                                       l481 17B8                                         l466 109A  
                                       l812 02C4                                         l396 1A7E  
                                       l911 1262                                         l832 1E24  
                                       l904 188C                                         l923 1B36  
                                       l907 16A8                                         l780 0E88  
                                       l861 1E3E                                         l918 161E  
                                       l870 1E48                                         l776 09B4  
                                       l928 117E                                         l961 1E32  
                                       l858 083A                                         l786 1DA4  
                                       l970 1DE2                                         l891 1BE6  
                                       l867 156C                                         l964 1E38  
                                       l982 1C84                                         l958 1E16  
                                       l887 1C58                                         l967 1DCE  
                                       l896 1730                                         l979 1334  
            check_valve_pin_error@req_state 0001                                         _buf 00DB  
                                       _ctx 00CD                     __size_of_PMD_Initialize 0024  
              write_timestamp_3bytes@output 0064                                         tosl 003FFD  
                                       wreg 003FE8                        _get_valve_open_state 1DBC  
                               _txb_enqueue 1BAE                              srb_is_full@ctx 0060  
                  ??_write_timestamp_2bytes 002D                    ??_write_timestamp_3bytes 002D  
             check_bus_current_error@F22980 00D5                                        l1254 0F92  
                                      l1335 0C54                                        l1265 0F5C  
                                      l1356 0D76                                        l1461 1826  
                                      l4201 0D16                                        l4121 1DD0  
                                      l4211 0D46                                        l1483 1D26  
                                      l1468 182E                                        l4213 0D56  
                                      l4117 1DBC                                        l4215 0D66  
                                      l4207 0D2A                                        l1647 18E8  
                                      l4241 1DB6                                        l6001 0C2A  
                                      l4209 0D36                                        l4243 1E40  
                                      l4235 1DA6                                        l6011 001E  
                                      l6003 0C30                                        l4251 1D8A  
                                      l4245 1E18                                        l4237 1DAE  
                                      l6021 0062                                        l6013 0022  
                                      l4181 0CBC                                        l4173 0C56  
                                      l4253 1D8C                                        l4239 1DB2  
                                      l6031 00A6                                        l6023 0072  
                                      l6015 0032                                        l4191 0CEA  
                                      l4183 0CBE                                        l4175 0C7C  
                                      l6007 1D02                                        l4247 1D72  
                                      l6041 00F6                                        l6033 00B6  
                                      l6025 0082                                        l6017 0042  
                                      l6201 0996                                        l4185 0CCA  
                                      l4249 1D7A                                        l4089 1D90  
                                      l6051 013A                                        l6035 00C6  
                                      l6019 0052                                        l6203 0998  
                                      l4187 0CD8                                        l4179 0C90  
                                      l6211 1C32                                        l6061 017E  
                                      l6053 014A                                        l6045 010A  
                                      l6037 00D6                                        l6029 0096  
                                      l6205 099A                                        l4197 0D02  
                                      l4189 0CDC                                        l6221 073E  
                                      l6213 06B8                                        l4533 1E46  
                                      l6301 12C0                                        l3911 1B44  
                                      l6071 01CE                                        l6063 018E  
                                      l6055 015A                                        l6047 011A  
                                      l6039 00E6                                        l6207 099E  
                                      l6151 084C                                        l4199 0D0C  
                                      l6231 077A                                        l6223 0752  
                                      l6215 06C6                                        l6303 12C8  
                                      l6311 12F4                                        l3921 1C86  
                                      l3913 1B46                                        l6073 01DE  
                                      l6065 019E                                        l6057 016A  
                                      l6049 012A                                        l6161 08B4  
                                      l6153 0862                                        l6241 07CC  
                                      l6233 0786                                        l6225 075C  
                                      l6217 0710                                        l6321 170C  
                                      l6209 1C22                                        l4457 1E08  
                                      l6313 1326                                        l6305 12D8  
                                      l6401 04D8                                        l3923 1C9A  
                                      l3915 1B52                                        l6067 01AE  
                                      l6171 096E                                        l6163 08DA  
                                      l6155 0866                                        l6147 083C  
                                      l6243 07E4                                        l6235 078E  
                                      l6227 0760                                        l6251 07F6  
                                      l6219 0728                                        l6315 16AA  
                                      l4571 1E34                                        l4459 1E2E  
                                      l6307 12E8                                        l6331 02DA  
                                      l6323 02C6                                        l3925 18EA  
                                      l3917 1B54                                        l3909 1B38  
                                      l6069 01BE                                        l6181 097E  
                                      l6173 0970                                        l6165 0902  
                                      l6157 086A                                        l6149 0844  
                                      l5701 18C8                                        l6253 0824  
                                      l6245 07EC                                        l6237 0792  
                                      l6229 0764                                        l6261 14BA  
                                      l6317 16C8                                        l6309 12F0  
                                      l6341 02EC                                        l6333 02DE  
                                      l6325 02CE                                        l3927 1E26  
                                      l3919 1D4E                                        l7071 0276  
                                      l6079 01F2                                        l6191 098C  
                                      l6183 0982                                        l6175 0972  
                                      l6167 092A                                        l6159 0892  
                                      l5703 18CC                                        l5711 1616  
                                      l6255 0832                                        l6247 07F0  
                                      l6239 07BE                                        l6271 1526  
                                      l6263 14E6                                        l4567 1E3A  
                                      l6319 16F6                                        l6351 0328  
                                      l6343 02EE                                        l6335 02E2  
                                      l6327 02D2                                        l7081 024C  
                                      l7065 0222                                        l7073 0292  
                                      l6193 098E                                        l6185 0984  
                                      l6177 0976                                        l6169 094C  
                                      l5721 1830                                        l5705 156E  
                                      l6257 0838                                        l5801 17D6  
                                      l6273 152A                                        l6265 1504  
                                      l6281 156A                                        l6361 0370  
                                      l6353 034E                                        l6345 02F0  
                                      l6337 02E4                                        l6329 02D6  
                                      l7083 0268                                        l7067 023E  
                                      l7075 02A8                                        l6195 0990  
                                      l6187 0986                                        l6179 097A  
                                      l5731 1CDC                                        l5723 1854  
                                      l5707 15B4                                        l5811 1810  
                                      l5803 17DE                                        l6275 1556  
                                      l6267 1518                                        l6291 1278  
                                      l6371 03C6                                        l6363 03A8  
                                      l6355 0362                                        l6347 02F4  
                                      l6339 02E6                                        l7085 0284  
                                      l7069 025A                                        l7077 02B6  
                                      l6197 0992                                        l6189 0988  
                                      l5821 1A8A                                        l5901 175E  
                                      l5733 1BE8                                        l5709 15F8  
                                      l5717 161C                                        l5741 11CE  
                                      l5813 1818                                        l5805 17E6  
                                      l6277 1564                                        l6269 1522  
                                      l6285 1A3E                                        l6293 1288  
                                      l6381 0442                                        l6373 03D6  
                                      l6365 03AC                                        l6357 0366  
                                      l6349 0312                                        l7079 0230  
                                      l6199 0994                                        l5823 1A8E  
                                      l5903 1772                                        l5831 1DE4  
                                      l5727 1860                                        l5743 1218  
                                      l5735 1180                                        l5815 181A  
                                      l5807 17F4                                        l6287 1A70  
                                      l5751 1B2E                                        l6295 1298  
                                      l6391 04A2                                        l6383 044A  
                                      l6375 03E2                                        l6367 03B4  
                                      l6359 036A                                        l5825 1A90  
                                      l5761 0E8A                                        l5905 1786  
                                      l5833 0F94                                        l5745 124E  
                                      l5817 1820                                        l5809 17FA  
                                      l5921 0DCE                                        l5913 0D78  
                                      l6297 12A0                                        l6289 1268  
                                      l6393 04B4                                        l6385 045A  
                                      l6377 041C                                        l6369 03BC  
                                      l5827 1AA0                                        l5819 1A84  
                                      l5771 0ECA                                        l5763 0E9C  
                                      l5907 1796                                        l5851 1016  
                                      l5843 0FD2                                        l5835 0FA6  
                                      l5739 11A0                                        l5931 0E54  
                                      l5923 0DD4                                        l6299 12B0  
                                      l6395 04B6                                        l6387 0462  
                                      l6379 0430                                        l5781 0F3E  
                                      l5773 0EF4                                        l5765 0EB0  
                                      l5909 17A8                                        l5861 1088  
                                      l5853 102A                                        l5693 188E  
                                      l5933 0E84                                        l5925 0E06  
                                      l5917 0D8C                                        l5757 1B34  
                                      l5749 1AFC                                        l5941 1680  
                                      l6397 04C0                                        l6389 0494  
                                      l5791 0F84                                        l5783 0F4C  
                                      l5775 0EF6                                        l5855 1036  
                                      l5847 0FE6                                        l5839 0FBC  
                                      l5687 1C5A                                        l5695 18A2  
                                      l5927 0E30                                        l5919 0DAA  
                                      l5951 10EA                                        l5943 1694  
                                      l5935 1620                                        l6399 04C4  
                                      l5793 0F86                                        l5785 0F6A  
                                      l5777 0F0A                                        l5769 0EC0  
                                      l5961 0B56                                        l5857 1060  
                                      l5849 0FFA                                        l5689 1C7C  
                                      l5697 18B2                                        l5865 1BAE  
                                      l5929 0E32                                        l5953 1134  
                                      l5945 109C                                        l5937 1638  
                                      l5873 1336                                        l5787 0F6C  
                                      l5779 0F34                                        l5971 0B9A  
                                      l5859 1064                                        l5699 18B6  
                                      l5955 116A                                        l5939 1652  
                                      l5891 13E8                                        l5883 1382  
                                      l5789 0F74                                        l5981 0BBC  
                                      l5973 0BA0                                        l5965 0B66  
                                      l5869 1BD0                                        l5797 17BA  
                                      l5949 10BC                                        l5885 13A6  
                                      l5877 134E                                        l5991 0BF6  
                                      l5983 0BC8                                        l5975 0BAC  
                                      l5967 0B8A                                        l5959 0B30  
                                      l5895 1732                                        l5799 17C4  
                                      l5887 13C2                                        l5879 1366  
                                      l5993 0BFC                                        l5985 0BCC  
                                      l5977 0BAE                                        l5889 13D6  
                                      l5995 0C00                                        l5987 0BDA  
                                      l5979 0BB0                                        l5899 174A  
                                      l5997 0C0E                                        l5989 0BE6  
                                      l5999 0C1A                                        u2140 1C9A  
                                      u2141 1C96                                        _LATA 003FBA  
                                      u2150 1CAC                                        _LATB 003FBB  
                                      u2151 1CA8                                        _LATC 003FBC  
                                      u4000 1366                                        u4001 1362  
                                      u2330 1DA2                                        u4010 137E  
                                      u2331 1D9C                                        u4011 137A  
                                      u4100 0B56                                        u2500 0D26  
                                      u4020 1746                                        u2340 1DA4  
                                      u4101 0B52                                        u2501 0D22  
                                      u4021 1742                                        u2510 0D46  
                                      u4030 0D88                                        u4111 0B76  
                                      u2511 0D42                                        u4031 0D84  
                                      u4120 0B8A                                        u2520 0D56  
                                      u4200 07E4                                        u4040 0DAA  
                                      u4121 0B86                                        u2521 0D52  
                                      u4201 07E0                                        u4041 0DA6  
                                      u4130 0BDA                                        u4210 1504  
                                      u4050 0DCA                                        u2370 1DCC  
                                      u4131 0BD6                                        u2451 0C68  
                                      u4211 1500                                        u4051 0DC6  
                                      u2371 1DC6                                        u4140 0C0E  
                                      u2460 0C7C                                        u4300 16F6  
                                      u2380 1DE0                                        u4220 1288  
                                      u4141 0C0A                                        u2461 0C78  
                                      u4301 16F2                                        u2381 1DDA  
                                      u4221 1284                                        u4150 0862  
                                      u2470 0CB0                                        u4070 10B8  
                                      u4230 1298                                        u4151 085E  
                                      u4071 10B4                                        u4231 1294  
                                      u4160 09B4                                        u2480 0CEA  
                                      u4080 116A                                        u2376 1DCE  
                                      u4240 12B0                                        u4320 03A8  
                                      u4161 09B0                                        u2481 0CE6  
                                      u4065 0E20                                        u4081 1166  
                                      u4241 12AC                                        u4321 03A4  
                                      u2490 0CFE                                        u4170 0728  
                                      u2386 1DE2                                        u4250 12C0  
                                      u4330 03D6                                        u4091 0B42  
                                      u2491 0CFA                                        u2475 0CA8  
                                      u4171 0724                                        u4251 12BC  
                                      u4331 03D2                                        u4180 073E  
                                      u4260 12D8                                        u4340 041C  
                                      u4181 073A                                        u4261 12D4  
                                      u4341 0418                                        u4190 077A  
                                      u4318 171C                                        u4270 12E8  
                                      u4350 0430                                        u4191 0776  
                                      u4319 1730                                        u4271 12E4  
                                      u4351 042C                                        u3800 1B2E  
                                      u4280 16C8                                        u4360 0442  
                                      u3801 1B2A                                        u4281 16C4  
                                      u4361 043E                                        u3810 0E9C  
                                      u3730 18E8                                        u4370 045A  
                                      u3811 0E98                                        u3731 18E4  
                                      u4371 0456                                        u3820 0EB0  
                                      u3740 15B4                                        u3900 17F4  
                                      u4380 04B4                                        _PMD0 0039C0  
                                      u3821 0EAC                                        u3741 15B0  
                                      u3901 17F0                                        u4381 04B0  
                                      _PMD1 0039C1                                        u3830 0EF0  
                                      u3750 15F8                                        u3910 1810  
                                      _PMD2 0039C2                                        u3831 0EEC  
                                      u3751 15F4                                        u3911 180C  
                                      _PMD3 0039C3                                        u3920 1AA0  
                                      u3840 0F30                                        u3760 1616  
                                      _PMD4 0039C4                                        u3921 1A9C  
                                      u3841 0F2C                                        u3761 1612  
                                      _PMD5 0039C5                                        u3850 0F4C  
                                      u3930 0FA6                                        u3770 1854  
                                      u4298 16D2                                        _PMD6 0039C6  
                                      u3851 0F48                                        u3931 0FA2  
                                      u3771 1850                                        u4299 16E6  
                                      _PMD7 0039C7                                        u3860 0F5C  
                                      u3940 0FB8                                        u3780 119C  
                                      u3861 0F58                                        u3941 0FB4  
                                      u3781 1198                                        u3870 0F6A  
                                      u3950 0FCE                                        u3790 124E  
                                      u3871 0F66                                        u3951 0FCA  
                                      u3791 124A                                        u3880 0F84  
                                      u3960 0FE2                                        u3881 0F80  
                                      u3961 0FDE                                        u3970 1088  
                                      u3890 17D6                                        u3971 1084  
                                      u3891 17D2                                        u3980 1BCC  
                                      u3981 1BC8                                        _PIR5 0039A5  
                                      u3990 134A                                        u3991 1346  
                                      _WPUA 003A41                                        _WPUB 003A51  
                                      _WPUC 003A61                                        _WPUE 003A81  
              __end_of_build_board_stat_msg 109C                                        _main 02C6  
                              ___ftpack@arg 0060         check_battery_voltage_error@batt_msg 009F  
       check_battery_voltage_error@batt_raw 008D                                ___ftpack@exp 0063  
                             srb_pop@offset 0074                                        fsr1h 003FE2  
                                      fsr2h 003FDA                                        indf1 003FE7  
                                      indf2 003FDF                                        fsr1l 003FE1  
                                      fsr2l 003FD9                                        prodh 003FF4  
                                      prodl 003FF3                                        start 001A  
                              ___ftmul@cntr 0078                 build_analog_data_msg@output 006B  
                              ___param_bank 000000                                ___ftmul@sign 0079  
                           srb_is_empty@ctx 0060                         get_offset_bytes@ctx 0066  
            __end_of_get_valve_closed_state 1DE4                                ___fttol@exp1 0088  
                              ___fttol@lval 0084                             ?_FVR_Initialize 0001  
            __size_of_OSCILLATOR_Initialize 002C               __end_of_OSCILLATOR_Initialize 1CB2  
                          __end_of_LED_init 1E26                                       _ADCAP 003EF5  
                                     _ADACT 003EFE                                       ?_main 00AC  
                                     _ADCLK 003EFF                                       _ADCNT 003EEB  
                                     _ADPCH 003EF1                                       _ADREF 003EFD  
                                     _ADRPT 003EEC                             __end_of___ftmul 0C56  
                           __end_of___fttol 0D78                                       _LATC2 01FDE2  
                                     _LATC3 01FDE3                                       _LATB5 01FDDD  
                                     _LATC4 01FDE4                             __end_of___lwdiv 1830  
                                     i2l407 1E06                                       i2l416 1D4C  
                                     i2l371 1AFA                                       i2l524 19F8  
                                     i2l381 0A34                                       i2l382 0A3E  
                                     i2l375 0B2E                                       i2l544 14B8  
                                     i2l801 067A                                       i2l378 0A1A  
                                     i2l802 06B6                                       i2l803 068E  
                                     i2l573 1CDA                                       i2l805 06A2  
                                     i2l569 1A3C                                       i2l791 0500  
                                     i2l792 05AA                                       i2l794 06B6  
                                     i2l796 0652                                       i2l789 0504  
                                     i2l799 0666                    __end_of_vent_send_status 1336  
                    ?_build_analog_data_msg 0064                                       _TRISA 003FC2  
                                     _TRISB 003FC3                                       _TRISC 003FC4  
                     ?_get_valve_open_state 0001                                  i2memcpy@d1 0001  
                                i2memcpy@s1 0003                              srb_pop@element 006E  
                            txb_enqueue@msg 0076                               ___ftpack@sign 0064  
       __end_of_check_battery_voltage_error 083C                 _check_battery_voltage_error 06B8  
                                     pclath 003FFA                             __end_of_srb_pop 1180  
                             _txb_heartbeat 16AA                                       status 003FD8  
                   __size_of_send_status_ok 0042                            __end_ofi2_memcpy 19A0  
                          __end_ofi2_millis 1E08                         _get_board_unique_id 1CB2  
             ??_check_battery_voltage_error 002D                             __initialization 1B74  
                             main@can_setup 00C6                                __end_of_main 04E4  
                  ?_check_bus_current_error 0001            can_generate_timing_params@timing 0064  
                                    ??_main 00B1                               ___fttol@sign1 0083  
                             __activetblptr 000002                         get_message_type@msg 0001  
                         srb_init@pool_size 006B                        ?_get_board_unique_id 0001  
                                    _ADACCH 003EE9                                      _ADACCL 003EE8  
                                    _ADACCU 003EEA                                      _ADACQH 003EF4  
                                    _ADACQL 003EF3                       __size_of_can_send_rdy 0016  
                                    _ADCON0 003EF8                                      _ADCON1 003EF9  
                                    _ADCON2 003EFA                                      _ADCON3 003EFB  
                                    _ADERRH 003EE3                                      _ADERRL 003EE2  
                                    _ADLTHH 003EDF                                      _ADLTHL 003EDE  
           __size_of_write_timestamp_2bytes 0026                                      _ADRESH 003EF0  
                                    _ADRESL 003EEF                                      _ADPREH 003EF7  
                                    _ADPREL 003EF6             __size_of_write_timestamp_3bytes 003A  
                                    _ADSTAT 003EFC                                      _ADUTHH 003EE1  
                                    _ADUTHL 003EE0                                      _ANSELA 003A40  
                                    _ANSELB 003A50                                      _ANSELC 003A60  
                          __end_of___ftpack 0F94                                      _RC1PPS 003A11  
                                    _ODCONA 003A42                                      _ODCONB 003A52  
                                    _ODCONC 003A62                                      i2l4001 0B1A  
                                    i2l1647 199E                                      i2l4231 1980  
                                    i2l4223 1946                                      i2l2631 1D28  
                                    i2l4225 195A                                      i2l4233 1984  
                                    i2l2633 1D3C                                      i2l4227 196A  
                                    i2l4229 196E                                      i2l4601 05B8  
                                    i2l3723 1A18                                      i2l4611 064A  
                                    i2l4603 05F8                                      i2l3717 19FA  
                                    i2l7101 1494                                      i2l3805 1460  
                                    i2l4621 0688                                      i2l4613 0660  
                                    i2l4605 0612                                      i2l3719 1A0C  
                                    i2l7103 14A2                                      i2l4607 0624  
                                    i2l4625 069C                                      i2l4617 0674  
                                    i2l4609 0646                                      i2l3771 1CCA  
                                    i2l3907 1DF6                                      i2l3765 1CB2  
                                    i2l3781 19CE                                      i2l4629 06B0  
                                    i2l4581 04E4                                      i2l4741 1AD4  
                                    i2l3767 1CC4                                      i2l3783 19E2  
                                    i2l3775 19A0                                      i2l3791 140C  
                                    i2l4591 057E                                      i2l4583 04F2  
                                    i2l4743 1AE4                                      i2l3777 19B2  
                                    i2l3793 1414                                      i2l4593 05A0  
                                    i2l4585 0514                                      i2l4745 1AF2  
                                    i2l4737 1ABE                                      i2l3779 19BA  
                                    i2l3795 142C                                      i2l7091 0ABA  
                                    i2l4595 05A4                                      i2l4587 0552  
                                    i2l4747 1AF6                                      i2l4739 1AD0  
                                    i2l3789 13FA                                      i2l7093 0AD0  
                                    i2l4589 056C                                      i2l3799 1446  
                                    i2l7095 0AEE                                      i2l7087 0A86  
                                    i2l3991 09FE                                      i2l3983 09B6  
                                    i2l7097 0B04                                      i2l7089 0A9C  
                                    i2l3993 0A10                                      i2l3985 09CA  
                                    i2l7099 1486                                      i2l3995 0A1E  
                                    i2l3989 09EA                                      i2l3999 0A48  
                                    _FVRCON 003EC1                              ?_txb_heartbeat 0001  
                          __end_of___lwtoft 1D28                                      _RXB0D0 003F86  
                                    _RXB1D0 0037F6                                      _TXB0D0 0037E6  
                          __end_of_can_init 09B6                                      _TRISC0 01FE20  
                                    _TRISC1 01FE21                                      _TRISB3 01FE1B  
                                    _TRISC2 01FE22                                      _TRISB4 01FE1C  
                                    _TRISC3 01FE23                                      _TRISB5 01FE1D  
                                    _TRISC4 01FE24                            __end_of_can_send 0E8A  
         can_handle_interrupt@rcvd_msg_2164 0022                               main@error_msg 00BB  
        build_board_stat_msg@error_data_len 006D                  build_valve_stat_msg@output 006E  
                            can_init@timing 0060     can_generate_timing_params@can_frequency 0060  
                               i2memcpy@tmp 000B                                      ___wmul 1C5A  
                                 ??___ftmul 0071                                ?_timer0_init 0001  
                                 ??___fttol 007E                                   ??___lwdiv 002D  
                            srb_push@offset 0074                                      _memcpy 188E  
                                    _millis 1DE4                                      clear_0 1B7A  
                                    clear_1 1B86                                      clear_2 1B92  
                                    isa$std 000001                        _build_board_stat_msg 0F94  
                              _can_send_rdy 1D90                       ___ftmul@f3_as_product 0075  
                     ??_get_board_unique_id 0003                             _ADCC_Initialize 18EA  
                    ??_get_valve_open_state 002D                              _PMD_Initialize 1D4E  
                          __end_of_srb_init 16AA                            __end_of_srb_push 1264  
                                    tblptru 003FF8                                ?_srb_is_full 0060  
                                 ??_srb_pop 0070               __size_of_can_handle_interrupt 01D4  
         __size_of_ADCC_GetSingleConversion 003E                   ?_ADCC_GetSingleConversion 0060  
                          __end_of_txb_init 1C5A                       _check_valve_pin_error 1E46  
                             main@status_ok 00BA                           _SYSTEM_Initialize 1DA6  
               __end_of_get_req_valve_state 14BA                                  __accesstop 0060  
            build_board_stat_msg@error_data 006B                     __end_of__initialization 1BA4  
            build_board_stat_msg@error_code 006A                          ?_SYSTEM_Initialize 0001  
              __end_of_build_valve_stat_msg 13FA                               ___rparam_used 000001  
                                 ?_LED_init 0001                     get_general_cmd_type@msg 0005  
          _check_battery_voltage_error$2273 0090                                  ___ftmul@f1 006B  
                                ___ftmul@f2 006E                                  ___fttol@f1 007A  
                            __pcstackCOMRAM 0001                      _write_timestamp_2bytes 1CDC  
                    _write_timestamp_3bytes 1BE8                         ??_SYSTEM_Initialize 002D  
                              txb_init@pool 006F           check_battery_voltage_error@F22970 00D7  
                vent_send_status@curr_state 0079                    ?_timer0_handle_interrupt 0001  
          check_bus_current_error@curr_data 007E                       ?_build_board_stat_msg 0066  
                    __end_of_PMD_Initialize 1D72            check_bus_current_error@error_msg 0082  
                                ___lwtoft@c 0068                       get_offset_bytes@index 0068  
                 __size_of_get_offset_bytes 005E                   __size_of_get_message_type 0044  
                                 ?i2_memcpy 0001                                   ?i2_millis 0001  
                              ?_txb_enqueue 0076                                  _can_rcv_cb 0031  
                 __end_of_SYSTEM_Initialize 1DBC                             ??_txb_heartbeat 002D  
              __end_of_get_general_cmd_type 19FA                                  __pbssBANK0 00CD  
                                __pbssBANK1 0100                              _send_status_ok 1A3E  
          check_bus_current_error@timestamp 0078                                  ??_LED_init 002D  
                                   IVTBASEH 003FD6                                     IVTBASEL 003FD5  
                                   IVTBASEU 003FD7                      get_board_unique_id@msg 0001  
                          ??_FVR_Initialize 002D                                     ?___wmul 0060  
                   __end_of_ADCC_Initialize 1946                  vent_send_status@valve_open 007A  
                                   _ADFLTRH 003EE7                                     _ADFLTRL 003EE6  
                                   ?_memcpy 0060                                     ?_millis 0060  
                                   _ADPREVH 003EEE                                     _ADPREVL 003EED  
                   ??_build_analog_data_msg 002D                                   ?___ftpack 0060  
                                   _ADSTPTH 003EE5                                     _ADSTPTL 003EE4  
                  __size_of_can_msg_handler 017A                             ?_PMD_Initialize 0001  
                                   _ANSELC0 01D300                                     _ANSELB3 01D283  
                                   _ANSELB4 01D284                          fp__can_msg_handler 0000  
                                 ?___lwtoft 0068                                   ?_can_init 0060  
                                 ?_can_send 006B                           ?_vent_send_status 0001  
                                ??i2_memcpy 0007                                  ??i2_millis 0005  
                                   _OSCCON1 0039D9                                     _OSCCON2 0039DA  
                        __size_of_vent_open 0006                      ?_check_valve_pin_error 0001  
                                   i2u97_40 1D3C                                     i2u97_41 1D38  
                        ??_vent_send_status 002D                      __end_of_send_status_ok 1A80  
                                   __Hparam 0000                    _is_batt_voltage_critical 1E3A  
                                   __Lparam 0000             write_timestamp_3bytes@timestamp 0060  
                                 ?_srb_init 0067                                   ?_srb_push 006C  
                           __size_of___wmul 002C                                     ___ftmul 0B30  
                                   ___fttol 0C56                                     ___lwdiv 17BA  
                    ??_build_board_stat_msg 0070                                   ?_txb_init 006F  
                           srb_push@element 006E                                     __pcinit 1B74  
                           __size_of_memcpy 005C                                  ??___ftpack 0065  
                           __size_of_millis 0012                                     __ramtop 1000  
                      __size_of_timer0_init 001E                                     __ptext0 02C6  
                                   __ptext1 1264                                     __ptext2 1DBC  
                                   __ptext3 1DD0                                     __ptext4 1336  
                                   __ptext5 1E2E                                     __ptext6 1E34  
                                   __ptext7 1E08                                     __ptext8 1C22  
                                   __ptext9 1620                                  ??___lwtoft 002D  
                                ??_can_init 0064                       _OSCILLATOR_Initialize 1C86  
                                ??_can_send 006D                        _build_valve_stat_msg 1336  
                  ??_PIN_MANAGER_Initialize 002D            __size_of_check_bus_current_error 00B4  
                                   _srb_pop 109C                  build_board_stat_msg@output 006E  
                __size_of_SYSTEM_Initialize 0016                                     _tx_pool 0100  
                      end_of_initialization 1BA4                        __size_of_srb_is_full 00B2  
                           ?_send_status_ok 0001                                     memcpy@d 0067  
                                   memcpy@n 0064                                     memcpy@s 0069  
                             __Lmediumconst 0000         __size_of_can_generate_timing_params 02A8  
                             ?_srb_is_empty 0060                           __end_of_vent_open 1E34  
                                ??_srb_init 002D                                     postdec1 003FE5  
                                   postdec2 003FDD                                  ??_srb_push 0070  
                                   postinc0 003FEE                                     postinc1 003FE6  
                                   postinc2 003FDE                            ?_ADCC_Initialize 0001  
                                _valve_init 1E08            __end_of_ADCC_GetSingleConversion 1ABE  
                                ??_txb_init 002D                        _get_general_cmd_type 19A0  
                                 _PORTBbits 003FCB                            _get_offset_bytes 1830  
     check_battery_voltage_error@error_code 008F                            _get_message_type 19FA  
                     ?_build_valve_stat_msg 0066                get_general_cmd_type@msg_type 0008  
                                _vent_close 1E34                                 srb_init@ctx 0067  
                         ??_can_msg_handler 000D                        __size_of_txb_enqueue 003A  
          build_analog_data_msg@sensor_data 0069                    ??_get_valve_closed_state 002D  
                               srb_push@ctx 006C                     ?_write_timestamp_2bytes 0060  
                   ?_write_timestamp_3bytes 0060                    _battery_voltage_critical 00D9  
                            ??_srb_is_empty 0062                __end_of_can_handle_interrupt 06B8  
                               ___ftmul@exp 0074                           __size_of_LED_init 000E  
                   can_msg_handler@cmd_type 0011                 __end_of_get_board_unique_id 1CDC  
                     ?_get_general_cmd_type 0005                              __end_of___wmul 1C86  
                           can_send@message 006B                                   i2memcpy@d 0007  
                                 i2memcpy@n 0005                                   i2memcpy@s 0009  
                               _ECANCONbits 003F91                              __end_of_memcpy 18EA  
                    ?_OSCILLATOR_Initialize 0001                              __end_of_millis 1DF6  
                       start_initialization 1B74                     can_msg_handler@msg_type 000F  
             __size_of_get_valve_open_state 0014             __size_of_PIN_MANAGER_Initialize 003C  
                     _requested_valve_state 00DA                           __size_ofi2_memcpy 005A  
               get_req_valve_state@msg_type 0009                           __size_ofi2_millis 0012  
          __size_of_timer0_handle_interrupt 0026                                  ivt0x8_base 0008  
                               _CANSTATbits 003F8E                          can_msg_handler@msg 000B  
          build_valve_stat_msg@message_type 006C              __end_of_write_timestamp_2bytes 1D02  
            __end_of_write_timestamp_3bytes 1C22                __size_of_get_req_valve_state 00C0  
        __end_of_can_generate_timing_params 02C6                  _can_generate_timing_params 001E  
                          ??_PMD_Initialize 002D                                    ??___wmul 002D  
       check_bus_current_error@curr_draw_mA 0080                                 ?_valve_init 0001  
                                  ??_memcpy 002D                                    ??_millis 002D  
                    ??_build_valve_stat_msg 0070              __size_of_build_analog_data_msg 0088  
             __end_of_build_analog_data_msg 17BA                     ??_check_valve_pin_error 002D  
                  _ADCC_GetSingleConversion 1A80                           __size_of___ftpack 010A  
                   _check_bus_current_error 14BA                                 ?_vent_close 0001  
                               __pbssCOMRAM 002D                           __size_of___lwtoft 0026  
                             __pcstackBANK0 0060                                 _BRGCON1bits 003703  
                         __size_of_can_init 017A                                 _BRGCON2bits 003704  
                               _BRGCON3bits 003705                           __size_of_can_send 0112  
                           main@blue_led_on 00B9               _last_can_traffic_timestamp_ms 00D1  
                ??_is_batt_voltage_critical 002D                ?_check_battery_voltage_error 0001  
                     __end_of_txb_heartbeat 1732                    vent_send_status@stat_msg 007C  
                    get_req_valve_state@msg 0005             __size_of_get_valve_closed_state 0014  
                 __size_of_vent_send_status 00D2    __end_of_ADCC_DisableContinuousConversion 1E46  
 __size_of_ADCC_DisableContinuousConversion 0006          ??_ADCC_DisableContinuousConversion 002D  
         ?_ADCC_DisableContinuousConversion 0001            _ADCC_DisableContinuousConversion 1E40  
             build_board_stat_msg@timestamp 0066                            ___lwdiv@dividend 0060  
                    _PIN_MANAGER_Initialize 1B38                             fp__can_send_rdy 0000  
           ADCC_GetSingleConversion@channel 0064                      ??_get_general_cmd_type 0007  
                                  ?___ftmul 006B                                    ?___fttol 007A  
                                  ?___lwdiv 0060                           __size_of_srb_init 008A  
                         __size_of_srb_push 00E4                           __size_of_txb_init 0038  
                         _interrupt_handler 1ABE                                 _COMSTATbits 003F90  
      check_battery_voltage_error@batt_data 0092  check_battery_voltage_error@batt_voltage_mV 00AA  
                          ??_send_status_ok 002D                          ?_interrupt_handler 0001  
                                  _CANRXPPS 003AED         build_valve_stat_msg@req_valve_state 006B  
                      __end_of_srb_is_empty 1B38                                    ?_srb_pop 006C  
                      _can_handle_interrupt 04E4                            ___lwdiv@quotient 0065  
                       ??_interrupt_handler 002D                         __size_of_valve_init 0010  
                            ___wmul@product 0064                    __end_of_get_offset_bytes 188E  
                                  _LED_init 1E18                                    _PIE3bits 003993  
                                  _PIE5bits 003995                    __end_of_get_message_type 1A3E  
             build_valve_stat_msg@timestamp 0066                                    i2u300_40 1AF2  
                                  i2u300_41 1AEE                                    i2u223_40 09E6  
                                  i2u223_41 09E2                                    i2u224_40 0A10  
                                  i2u224_41 0A0C                                    i2u253_40 199E  
                                  i2u253_41 199A                                    i2u190_40 1A0C  
                                  i2u190_41 1A08                                    i2u271_40 04F2  
                                  i2u271_41 04EE                                    i2u272_40 0500  
                                  i2u272_41 04FC                                    i2u281_40 0660  
                                  i2u280_48 0632                                    i2u273_40 0514  
                                  i2u281_41 065C                                    i2u280_49 0646  
                                  i2u273_41 0510                                    i2u282_40 0674  
                                  i2u282_41 0670                                    i2u274_45 051E  
                                  i2u283_40 0688                                    i2u275_40 057E  
                                  i2u283_41 0684                                    i2u275_41 057A  
                                  i2u196_40 1CC4                                    i2u284_40 069C  
                                  i2u196_41 1CC0                                    i2u284_41 0698  
                       __size_of_vent_close 0006                                    i2u197_40 19B2  
                                  i2u285_40 06B0                                    i2u277_40 05B8  
                                  i2u276_48 058C                                    i2u197_41 19AE  
                                  i2u285_41 06AC                                    i2u277_41 05B4  
                                  i2u276_49 05A0                                    _PIR3bits 0039A3  
                                  i2u198_40 19E2                                    i2u198_41 19DE  
                                  i2u278_45 05C2                                    i2u199_40 140C  
                                  i2u279_40 0624                                    i2u199_41 1408  
                                  i2u279_41 0620                                    _PIR5bits 0039A5  
                                  i2u298_40 1AD0                                    i2u298_41 1ACC  
                                  i2u299_40 1AE4                                    i2u299_41 1AE0  
                                  _RXB0SIDH 003F81                                    _RXB0SIDL 003F82  
                                  _RXB1SIDH 0037F1                                    _RXB1SIDL 0037F2  
                             ??_timer0_init 002D                                    _TXB0SIDH 0037E1  
                                  _TXB0SIDL 0037E2                                    _RXM0SIDH 0037B8  
                                  _RXM0SIDL 0037B9                                    _RXM1SIDH 0037BC  
                                  _RXM1SIDL 0037BD        check_battery_voltage_error@error_msg 0094  
                           main@last_millis 00B5                             _can_msg_handler 09B6  
                 __end_of_interrupt_handler 1AFC                                   _vent_open 1E2E  
                 ??_check_bus_current_error 002D                               ?_can_send_rdy 0001  
                                _ADCON0bits 003EF8                                  _ADCON1bits 003EF9  
                                _ADCON2bits 003EFA               __size_of_build_board_stat_msg 0108  
                                _ADCON3bits 003EFB                           ___wmul@multiplier 0060  
                    _get_valve_closed_state 1DD0                                  srb_pop@ctx 006C  
                   __size_of_FVR_Initialize 0008                                    i2_memcpy 1946  
                                  i2_millis 1DF6                               ??_srb_is_full 0062  
                     ?_can_handle_interrupt 0001                        srb_init@element_size 006D  
                   _timer0_handle_interrupt 1D28                                 _INTCON0bits 003FD2  
                                _CANCONbits 003F8F        check_battery_voltage_error@timestamp 0089  
              send_status_ok@board_stat_msg 0078                                  _ADSTATbits 003EFC  
                                  __Hrparam 0000                                   memcpy@tmp 0066  
                                  __Lrparam 0000                     ??_OSCILLATOR_Initialize 002D  
                                _CIOCONbits 003700                            __size_of___ftmul 0126  
                          __size_of___fttol 0122                            __size_of___lwdiv 0076  
      __size_of_check_battery_voltage_error 0184                                  ?_vent_open 0001  
                            ??_can_send_rdy 002D                                    ___ftpack 0E8A  
              ??_can_generate_timing_params 0066                                    ___lwtoft 1D02  
                         txb_init@pool_size 0071                         __end_of_timer0_init 1D90  
                                  _can_init 083C                                    _can_send 0D78  
                                _T0CON0bits 003FB8                                  _T0CON1bits 003FB9  
                  __size_of_ADCC_Initialize 005C                               ??_txb_enqueue 002D  
                                  __pivt0x8 0008                             ___lwdiv@divisor 0062  
                           ___lwdiv@counter 0064                         _get_req_valve_state 13FA  
                                  __ptext10 16AA                                    __ptext11 109C  
                                  __ptext20 17BA                                    __ptext12 1AFC  
                                  __ptext21 06B8                                    __ptext13 1D90  
                                  __ptext30 1BE8                                    __ptext22 1BAE  
                                  __ptext14 0D78                                    __ptext31 1732  
                                  __ptext23 1180                                    __ptext15 1D72  
                                  __ptext40 1DA6                                    __ptext32 1CDC  
                                  __ptext24 156E                                    __ptext16 1A3E  
                                  __ptext41 1D4E                                    __ptext33 1D02  
                                  __ptext25 188E                                    __ptext17 1E3A  
                                  __ptext50 04E4                                    __ptext42 1B38  
                                  __ptext34 0C56                                    __ptext26 1830  
                                  __ptext18 1E46                                    __ptext51 1946  
                                  __ptext43 1C86                                    __ptext35 0B30  
                                  __ptext27 1C5A                                    __ptext19 14BA  
                                  __ptext52 09B6                                    __ptext44 1E26  
                                  __ptext36 0E8A                                    __ptext28 1DE4  
                                  __ptext53 1DF6                                    __ptext45 18EA  
                                  __ptext37 1A80                                    __ptext29 0F94  
                                  __ptext54 13FA                                    __ptext46 1E18  
                                  __ptext38 083C                                    __ptext55 19A0  
                                  __ptext47 1E40                                    __ptext39 001E  
                                  __ptext56 19FA                                    __ptext48 1ABE  
                                  __ptext57 1CB2                                    __ptext49 1D28  
                                  __ptext58 0000            __end_of_is_batt_voltage_critical 1E40  
                          __size_of_srb_pop 00E4                                 _OSCCON3bits 0039DB  
                     txb_heartbeat@msg_sent 0076             __end_of_check_bus_current_error 156E  
                       __end_of_srb_is_full 1620                               __size_of_main 021E  
       check_bus_current_error@sense_raw_mV 007C                            _vent_send_status 1264  
           write_timestamp_2bytes@timestamp 0060                __end_of_get_valve_open_state 1DD0  
                   __end_of_can_msg_handler 0B30                   vent_send_status@req_state 0078  
                      ?_get_req_valve_state 0005                                    isa$xinst 000000  
                                  _srb_init 1620                    can_init@receive_callback 0062  
               ?_can_generate_timing_params 0060                  ??_ADCC_GetSingleConversion 0062  
                                  _srb_push 1180                                ??_valve_init 002D  
            build_analog_data_msg@sensor_id 0068                                    _txb_init 1C22  
                                  main@argc 00AC                                    main@argv 00AE  
                __size_of_interrupt_handler 003E              build_analog_data_msg@timestamp 0064  
                            _millis_counter 002D                                 _RXB0DLCbits 003F85  
                     __size_of_srb_is_empty 003C                                 _RXB1DLCbits 0037F5  
                               _RXB0CONbits 003F80             build_valve_stat_msg@valve_state 006A  
                 ??_timer0_handle_interrupt 0001                                 _RXB1CONbits 0037F0  
                              ??_vent_close 002D                      ??_can_handle_interrupt 0013  
              __size_of_get_board_unique_id 002A              __size_of_check_valve_pin_error 0004  
                                  memcpy@d1 0060                                  _FVRCONbits 003EC1  
             __end_of_check_valve_pin_error 1E4A                                    memcpy@s1 0062  
                      txb_init@can_tx_ready 0075                                    intlevel2 0000  
              can_handle_interrupt@rcvd_msg 0017                         __end_of_txb_enqueue 1BE8  
                        __end_of_valve_init 1E18                     ?_PIN_MANAGER_Initialize 0001  
                               _TXB0DLCbits 0037E5                                 _TXB0CONbits 0037E0  
                     ??_get_req_valve_state 0007                          __end_of_vent_close 1E3A  
                              _srb_is_empty 1AFC                         txb_init@can_send_fp 0073  
                               _timer0_init 1D72                                 ??_vent_open 002D  
                            _FVR_Initialize 1E26                write_timestamp_2bytes@output 0062  
             __size_of_build_valve_stat_msg 00C4                       _build_analog_data_msg 1732  
              vent_send_status@valve_closed 007B                                 _srb_is_full 156E  
                               fp__can_send 0000              __end_of_PIN_MANAGER_Initialize 1B74  
                         ??_ADCC_Initialize 002D                        __end_of_can_send_rdy 1DA6  
           __end_of_timer0_handle_interrupt 1D4E                           ?_get_offset_bytes 0066  
                         ?_get_message_type 0001                            ?_can_msg_handler 000B  
                        ??_get_offset_bytes 006A  
