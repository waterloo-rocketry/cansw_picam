

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Nov 28 13:44:58 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F26K83
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1
    55                           	psect	text44,global,reloc=2,class=CODE,delta=1
    56                           	psect	text45,global,reloc=2,class=CODE,delta=1
    57                           	psect	text46,global,reloc=2,class=CODE,delta=1
    58                           	psect	text47,global,reloc=2,class=CODE,delta=1
    59                           	psect	text48,global,reloc=2,class=CODE,delta=1
    60                           	psect	text49,global,reloc=2,class=CODE,delta=1
    61                           	psect	text50,global,reloc=2,class=CODE,delta=1
    62                           	psect	text51,global,reloc=2,class=CODE,delta=1
    63                           	psect	text52,global,reloc=2,class=CODE,delta=1
    64                           	psect	text53,global,reloc=2,class=CODE,delta=1
    65                           	psect	text54,global,reloc=2,class=CODE,delta=1
    66                           	psect	text55,global,reloc=2,class=CODE,delta=1
    67                           	psect	text56,global,reloc=2,class=CODE,delta=1
    68                           	psect	text57,global,reloc=2,class=CODE,delta=1
    69                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    70                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    71                           	psect	text58,global,reloc=2,class=CODE,delta=1
    72                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    73                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    74                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    75  0000                     
    76                           ; Version 2.32
    77                           ; Generated 02/02/2021 GMT
    78                           ; 
    79                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    80                           ; All rights reserved.
    81                           ; 
    82                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    83                           ; 
    84                           ; Redistribution and use in source and binary forms, with or without modification, are
    85                           ; permitted provided that the following conditions are met:
    86                           ; 
    87                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    88                           ;        conditions and the following disclaimer.
    89                           ; 
    90                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    91                           ;        of conditions and the following disclaimer in the documentation and/or other
    92                           ;        materials provided with the distribution. Publication is not required when
    93                           ;        this file is used in an embedded application.
    94                           ; 
    95                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    96                           ;        software without specific prior written permission.
    97                           ; 
    98                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    99                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   100                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   101                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   102                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   103                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   104                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   105                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   106                           ; 
   107                           ; 
   108                           ; Code-generator required, PIC18F26K83 Definitions
   109                           ; 
   110                           ; SFR Addresses
   111  0000                     _RXB1CONbits	set	14320
   112  0000                     _RXB1DLCbits	set	14325
   113  0000                     _RXB1SIDL	set	14322
   114  0000                     _RXB1SIDH	set	14321
   115  0000                     _TXB0DLCbits	set	14309
   116  0000                     _TXB0SIDL	set	14306
   117  0000                     _TXB0SIDH	set	14305
   118  0000                     _TXB0CONbits	set	14304
   119  0000                     _RXM1SIDL	set	14269
   120  0000                     _RXM1SIDH	set	14268
   121  0000                     _RXM0SIDL	set	14265
   122  0000                     _RXM0SIDH	set	14264
   123  0000                     _BRGCON3bits	set	14085
   124  0000                     _BRGCON2bits	set	14084
   125  0000                     _BRGCON1bits	set	14083
   126  0000                     _CIOCONbits	set	14080
   127  0000                     _RXB1D0	set	14326
   128  0000                     _TXB0D0	set	14310
   129  0000                     _PIR5bits	set	14757
   130  0000                     _PIE5bits	set	14741
   131  0000                     _PIR3bits	set	14755
   132  0000                     _PIE3bits	set	14739
   133  0000                     _PIR5	set	14757
   134  0000                     _PMD7	set	14791
   135  0000                     _PMD6	set	14790
   136  0000                     _PMD5	set	14789
   137  0000                     _PMD4	set	14788
   138  0000                     _PMD3	set	14787
   139  0000                     _PMD2	set	14786
   140  0000                     _PMD1	set	14785
   141  0000                     _PMD0	set	14784
   142  0000                     _OSCCON2	set	14810
   143  0000                     _OSCCON3bits	set	14811
   144  0000                     _OSCCON1	set	14809
   145  0000                     _CANRXPPS	set	15085
   146  0000                     _RC1PPS	set	14865
   147  0000                     _ODCONC	set	14946
   148  0000                     _ODCONB	set	14930
   149  0000                     _ODCONA	set	14914
   150  0000                     _WPUC	set	14945
   151  0000                     _WPUA	set	14913
   152  0000                     _WPUB	set	14929
   153  0000                     _WPUE	set	14977
   154  0000                     _ANSELA	set	14912
   155  0000                     _ANSELB	set	14928
   156  0000                     _ANSELC	set	14944
   157  0000                     _ANSELB3	set	119427
   158  0000                     _ANSELB4	set	119428
   159  0000                     _ANSELC0	set	119552
   160  0000                     _FVRCONbits	set	16065
   161  0000                     _FVRCON	set	16065
   162  0000                     _ADCON1bits	set	16121
   163  0000                     _ADERRL	set	16098
   164  0000                     _ADERRH	set	16099
   165  0000                     _ADPREVL	set	16109
   166  0000                     _ADPREVH	set	16110
   167  0000                     _ADFLTRL	set	16102
   168  0000                     _ADFLTRH	set	16103
   169  0000                     _ADSTATbits	set	16124
   170  0000                     _ADACCL	set	16104
   171  0000                     _ADACCH	set	16105
   172  0000                     _ADCON2bits	set	16122
   173  0000                     _ADCNT	set	16107
   174  0000                     _ADCON3bits	set	16123
   175  0000                     _ADRESL	set	16111
   176  0000                     _ADRESH	set	16112
   177  0000                     _ADCON0bits	set	16120
   178  0000                     _ADCON0	set	16120
   179  0000                     _ADCLK	set	16127
   180  0000                     _ADACT	set	16126
   181  0000                     _ADREF	set	16125
   182  0000                     _ADSTAT	set	16124
   183  0000                     _ADCON3	set	16123
   184  0000                     _ADCON2	set	16122
   185  0000                     _ADCON1	set	16121
   186  0000                     _ADPREH	set	16119
   187  0000                     _ADPREL	set	16118
   188  0000                     _ADCAP	set	16117
   189  0000                     _ADACQH	set	16116
   190  0000                     _ADACQL	set	16115
   191  0000                     _ADPCH	set	16113
   192  0000                     _ADRPT	set	16108
   193  0000                     _ADACCU	set	16106
   194  0000                     _ADSTPTH	set	16101
   195  0000                     _ADSTPTL	set	16100
   196  0000                     _ADUTHH	set	16097
   197  0000                     _ADUTHL	set	16096
   198  0000                     _ADLTHH	set	16095
   199  0000                     _ADLTHL	set	16094
   200  0000                     _PORTBbits	set	16331
   201  0000                     _RXB0DLCbits	set	16261
   202  0000                     _RXB0SIDL	set	16258
   203  0000                     _RXB0SIDH	set	16257
   204  0000                     _COMSTATbits	set	16272
   205  0000                     _RXB0CONbits	set	16256
   206  0000                     _ECANCONbits	set	16273
   207  0000                     _CANSTATbits	set	16270
   208  0000                     _CANCONbits	set	16271
   209  0000                     _T0CON1bits	set	16313
   210  0000                     _T0CON0bits	set	16312
   211  0000                     _INTCON0bits	set	16338
   212  0000                     _TRISC	set	16324
   213  0000                     _TRISB	set	16323
   214  0000                     _TRISA	set	16322
   215  0000                     _LATC	set	16316
   216  0000                     _LATB	set	16315
   217  0000                     _LATA	set	16314
   218  0000                     _RXB0D0	set	16262
   219  0000                     _TRISB3	set	130587
   220  0000                     _TRISB4	set	130588
   221  0000                     _LATB5	set	130525
   222  0000                     _TRISB5	set	130589
   223  0000                     _TRISC4	set	130596
   224  0000                     _TRISC3	set	130595
   225  0000                     _TRISC2	set	130594
   226  0000                     _LATC3	set	130531
   227  0000                     _LATC4	set	130532
   228  0000                     _LATC2	set	130530
   229  0000                     _TRISC0	set	130592
   230  0000                     _TRISC1	set	130593
   231                           
   232                           ; #config settings
   233                           
   234                           	psect	cinit
   235  001B74                     __pcinit:
   236                           	callstack 0
   237  001B74                     start_initialization:
   238                           	callstack 0
   239  001B74                     __initialization:
   240                           	callstack 0
   241                           
   242                           ; Clear objects allocated to BANK1 (100 bytes)
   243  001B74  EE00  F100         	lfsr	0,__pbssBANK1
   244  001B78  0E64               	movlw	100
   245  001B7A                     clear_0:
   246  001B7A  6AEE               	clrf	postinc0,c
   247  001B7C  06E8               	decf	wreg,f,c
   248  001B7E  E1FD               	bnz	clear_0
   249                           
   250                           ; Clear objects allocated to BANK0 (24 bytes)
   251  001B80  EE00  F0CD         	lfsr	0,__pbssBANK0
   252  001B84  0E18               	movlw	24
   253  001B86                     clear_1:
   254  001B86  6AEE               	clrf	postinc0,c
   255  001B88  06E8               	decf	wreg,f,c
   256  001B8A  E1FD               	bnz	clear_1
   257                           
   258                           ; Clear objects allocated to COMRAM (7 bytes)
   259  001B8C  EE00  F02D         	lfsr	0,__pbssCOMRAM
   260  001B90  0E07               	movlw	7
   261  001B92                     clear_2:
   262  001B92  6AEE               	clrf	postinc0,c
   263  001B94  06E8               	decf	wreg,f,c
   264  001B96  E1FD               	bnz	clear_2
   265                           
   266                           ;
   267                           ; Setup IVTBASE
   268                           ;
   269  001B98  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   270  001B9A  6ED5               	movwf	213,c
   271  001B9C  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   272  001B9E  6ED6               	movwf	214,c
   273  001BA0  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   274  001BA2  6ED7               	movwf	215,c
   275  001BA4                     end_of_initialization:
   276                           	callstack 0
   277  001BA4                     __end_of__initialization:
   278                           	callstack 0
   279  001BA4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   280  001BA6  6EF8               	movwf	tblptru,c
   281  001BA8  0100               	movlb	0
   282  001BAA  EF63  F001         	goto	_main	;jump to C main() function
   283                           
   284                           	psect	bssCOMRAM
   285  00002D                     __pbssCOMRAM:
   286                           	callstack 0
   287  00002D                     _millis_counter:
   288                           	callstack 0
   289  00002D                     	ds	4
   290  000031                     _can_rcv_cb:
   291                           	callstack 0
   292  000031                     	ds	2
   293  000033                     timer0_handle_interrupt@internal_count:
   294                           	callstack 0
   295  000033                     	ds	1
   296                           
   297                           	psect	bssBANK0
   298  0000CD                     __pbssBANK0:
   299                           	callstack 0
   300  0000CD                     _ctx:
   301                           	callstack 0
   302  0000CD                     	ds	4
   303  0000D1                     _last_can_traffic_timestamp_ms:
   304                           	callstack 0
   305  0000D1                     	ds	4
   306  0000D5                     	ds	2
   307  0000D7                     	ds	2
   308  0000D9                     _battery_voltage_critical:
   309                           	callstack 0
   310  0000D9                     	ds	1
   311  0000DA                     _requested_valve_state:
   312                           	callstack 0
   313  0000DA                     	ds	1
   314  0000DB                     _buf:
   315                           	callstack 0
   316  0000DB                     	ds	10
   317                           
   318                           	psect	bssBANK1
   319  000100                     __pbssBANK1:
   320                           	callstack 0
   321  000100                     _tx_pool:
   322                           	callstack 0
   323  000100                     	ds	100
   324                           
   325                           	psect	cstackBANK0
   326  000060                     __pcstackBANK0:
   327                           	callstack 0
   328  000060                     ?_ADCC_GetSingleConversion:
   329                           	callstack 0
   330  000060                     ?___wmul:
   331                           	callstack 0
   332  000060                     ?___lwdiv:
   333                           	callstack 0
   334  000060                     ?___ftpack:
   335                           	callstack 0
   336  000060                     ?_millis:
   337                           	callstack 0
   338  000060                     write_timestamp_2bytes@timestamp:
   339                           	callstack 0
   340  000060                     can_init@timing:
   341                           	callstack 0
   342  000060                     srb_is_full@ctx:
   343                           	callstack 0
   344  000060                     srb_is_empty@ctx:
   345                           	callstack 0
   346  000060                     ___wmul@multiplier:
   347                           	callstack 0
   348  000060                     ___lwdiv@dividend:
   349                           	callstack 0
   350  000060                     memcpy@d1:
   351                           	callstack 0
   352  000060                     ___ftpack@arg:
   353                           	callstack 0
   354  000060                     write_timestamp_3bytes@timestamp:
   355                           	callstack 0
   356  000060                     can_generate_timing_params@can_frequency:
   357                           	callstack 0
   358                           
   359                           ; 4 bytes @ 0x0
   360  000060                     	ds	2
   361  000062                     ??_srb_is_full:
   362  000062                     ??_ADCC_GetSingleConversion:
   363  000062                     write_timestamp_2bytes@output:
   364                           	callstack 0
   365  000062                     can_init@receive_callback:
   366                           	callstack 0
   367  000062                     ___wmul@multiplicand:
   368                           	callstack 0
   369  000062                     ___lwdiv@divisor:
   370                           	callstack 0
   371  000062                     memcpy@s1:
   372                           	callstack 0
   373                           
   374                           ; 2 bytes @ 0x2
   375  000062                     	ds	1
   376  000063                     ___ftpack@exp:
   377                           	callstack 0
   378                           
   379                           ; 1 bytes @ 0x3
   380  000063                     	ds	1
   381  000064                     ??_can_init:
   382  000064                     ADCC_GetSingleConversion@channel:
   383                           	callstack 0
   384  000064                     ___ftpack@sign:
   385                           	callstack 0
   386  000064                     ___lwdiv@counter:
   387                           	callstack 0
   388  000064                     write_timestamp_3bytes@output:
   389                           	callstack 0
   390  000064                     can_generate_timing_params@timing:
   391                           	callstack 0
   392  000064                     ___wmul@product:
   393                           	callstack 0
   394  000064                     memcpy@n:
   395                           	callstack 0
   396  000064                     build_analog_data_msg@timestamp:
   397                           	callstack 0
   398                           
   399                           ; 4 bytes @ 0x4
   400  000064                     	ds	1
   401  000065                     ??___ftpack:
   402  000065                     ___lwdiv@quotient:
   403                           	callstack 0
   404                           
   405                           ; 2 bytes @ 0x5
   406  000065                     	ds	1
   407  000066                     ??_can_generate_timing_params:
   408  000066                     ?_get_offset_bytes:
   409                           	callstack 0
   410  000066                     memcpy@tmp:
   411                           	callstack 0
   412  000066                     get_offset_bytes@ctx:
   413                           	callstack 0
   414  000066                     build_valve_stat_msg@timestamp:
   415                           	callstack 0
   416  000066                     build_board_stat_msg@timestamp:
   417                           	callstack 0
   418                           
   419                           ; 4 bytes @ 0x6
   420  000066                     	ds	1
   421  000067                     srb_init@ctx:
   422                           	callstack 0
   423  000067                     memcpy@d:
   424                           	callstack 0
   425                           
   426                           ; 2 bytes @ 0x7
   427  000067                     	ds	1
   428  000068                     ?___lwtoft:
   429                           	callstack 0
   430  000068                     build_analog_data_msg@sensor_id:
   431                           	callstack 0
   432  000068                     get_offset_bytes@index:
   433                           	callstack 0
   434  000068                     ___lwtoft@c:
   435                           	callstack 0
   436                           
   437                           ; 2 bytes @ 0x8
   438  000068                     	ds	1
   439  000069                     build_analog_data_msg@sensor_data:
   440                           	callstack 0
   441  000069                     srb_init@pool:
   442                           	callstack 0
   443  000069                     memcpy@s:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0x9
   447  000069                     	ds	1
   448  00006A                     build_valve_stat_msg@valve_state:
   449                           	callstack 0
   450  00006A                     build_board_stat_msg@error_code:
   451                           	callstack 0
   452                           
   453                           ; 1 bytes @ 0xA
   454  00006A                     	ds	1
   455  00006B                     ?___ftmul:
   456                           	callstack 0
   457  00006B                     build_valve_stat_msg@req_valve_state:
   458                           	callstack 0
   459  00006B                     build_board_stat_msg@error_data:
   460                           	callstack 0
   461  00006B                     build_analog_data_msg@output:
   462                           	callstack 0
   463  00006B                     can_send@message:
   464                           	callstack 0
   465  00006B                     srb_init@pool_size:
   466                           	callstack 0
   467  00006B                     ___ftmul@f1:
   468                           	callstack 0
   469                           
   470                           ; 3 bytes @ 0xB
   471  00006B                     	ds	1
   472  00006C                     build_valve_stat_msg@message_type:
   473                           	callstack 0
   474  00006C                     srb_push@ctx:
   475                           	callstack 0
   476  00006C                     srb_pop@ctx:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0xC
   480  00006C                     	ds	1
   481  00006D                     ??_can_send:
   482  00006D                     build_board_stat_msg@error_data_len:
   483                           	callstack 0
   484  00006D                     srb_init@element_size:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0xD
   488  00006D                     	ds	1
   489  00006E                     build_valve_stat_msg@output:
   490                           	callstack 0
   491  00006E                     build_board_stat_msg@output:
   492                           	callstack 0
   493  00006E                     srb_push@element:
   494                           	callstack 0
   495  00006E                     srb_pop@element:
   496                           	callstack 0
   497  00006E                     ___ftmul@f2:
   498                           	callstack 0
   499                           
   500                           ; 3 bytes @ 0xE
   501  00006E                     	ds	1
   502  00006F                     txb_init@pool:
   503                           	callstack 0
   504                           
   505                           ; 2 bytes @ 0xF
   506  00006F                     	ds	1
   507  000070                     ??_build_board_stat_msg:
   508  000070                     ??_srb_push:
   509  000070                     ??_srb_pop:
   510  000070                     ??_build_valve_stat_msg:
   511                           
   512                           ; 1 bytes @ 0x10
   513  000070                     	ds	1
   514  000071                     ??___ftmul:
   515  000071                     txb_init@pool_size:
   516                           	callstack 0
   517                           
   518                           ; 2 bytes @ 0x11
   519  000071                     	ds	2
   520  000073                     build_board_stat_msg@i:
   521                           	callstack 0
   522  000073                     txb_init@can_send_fp:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x13
   526  000073                     	ds	1
   527  000074                     ___ftmul@exp:
   528                           	callstack 0
   529  000074                     srb_push@offset:
   530                           	callstack 0
   531  000074                     srb_pop@offset:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0x14
   535  000074                     	ds	1
   536  000075                     txb_init@can_tx_ready:
   537                           	callstack 0
   538  000075                     ___ftmul@f3_as_product:
   539                           	callstack 0
   540                           
   541                           ; 3 bytes @ 0x15
   542  000075                     	ds	1
   543  000076                     txb_enqueue@msg:
   544                           	callstack 0
   545  000076                     txb_heartbeat@msg_sent:
   546                           	callstack 0
   547                           
   548                           ; 11 bytes @ 0x16
   549  000076                     	ds	2
   550  000078                     vent_send_status@req_state:
   551                           	callstack 0
   552  000078                     ___ftmul@cntr:
   553                           	callstack 0
   554  000078                     check_bus_current_error@timestamp:
   555                           	callstack 0
   556  000078                     send_status_ok@board_stat_msg:
   557                           	callstack 0
   558                           
   559                           ; 11 bytes @ 0x18
   560  000078                     	ds	1
   561  000079                     vent_send_status@curr_state:
   562                           	callstack 0
   563  000079                     ___ftmul@sign:
   564                           	callstack 0
   565                           
   566                           ; 1 bytes @ 0x19
   567  000079                     	ds	1
   568  00007A                     ?___fttol:
   569                           	callstack 0
   570  00007A                     vent_send_status@valve_open:
   571                           	callstack 0
   572  00007A                     ___fttol@f1:
   573                           	callstack 0
   574                           
   575                           ; 3 bytes @ 0x1A
   576  00007A                     	ds	1
   577  00007B                     vent_send_status@valve_closed:
   578                           	callstack 0
   579                           
   580                           ; 1 bytes @ 0x1B
   581  00007B                     	ds	1
   582  00007C                     check_bus_current_error@sense_raw_mV:
   583                           	callstack 0
   584  00007C                     vent_send_status@stat_msg:
   585                           	callstack 0
   586                           
   587                           ; 11 bytes @ 0x1C
   588  00007C                     	ds	2
   589  00007E                     ??___fttol:
   590  00007E                     check_bus_current_error@curr_data:
   591                           	callstack 0
   592                           
   593                           ; 2 bytes @ 0x1E
   594  00007E                     	ds	2
   595  000080                     check_bus_current_error@curr_draw_mA:
   596                           	callstack 0
   597                           
   598                           ; 2 bytes @ 0x20
   599  000080                     	ds	2
   600  000082                     check_bus_current_error@error_msg:
   601                           	callstack 0
   602                           
   603                           ; 11 bytes @ 0x22
   604  000082                     	ds	1
   605  000083                     ___fttol@sign1:
   606                           	callstack 0
   607                           
   608                           ; 1 bytes @ 0x23
   609  000083                     	ds	1
   610  000084                     ___fttol@lval:
   611                           	callstack 0
   612                           
   613                           ; 4 bytes @ 0x24
   614  000084                     	ds	4
   615  000088                     ___fttol@exp1:
   616                           	callstack 0
   617                           
   618                           ; 1 bytes @ 0x28
   619  000088                     	ds	1
   620  000089                     check_battery_voltage_error@timestamp:
   621                           	callstack 0
   622                           
   623                           ; 4 bytes @ 0x29
   624  000089                     	ds	4
   625  00008D                     check_battery_voltage_error@batt_raw:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x2D
   629  00008D                     	ds	2
   630  00008F                     check_battery_voltage_error@error_code:
   631                           	callstack 0
   632                           
   633                           ; 1 bytes @ 0x2F
   634  00008F                     	ds	1
   635  000090                     _check_battery_voltage_error$2260:
   636                           	callstack 0
   637                           
   638                           ; 2 bytes @ 0x30
   639  000090                     	ds	2
   640  000092                     check_battery_voltage_error@batt_data:
   641                           	callstack 0
   642                           
   643                           ; 2 bytes @ 0x32
   644  000092                     	ds	2
   645  000094                     check_battery_voltage_error@error_msg:
   646                           	callstack 0
   647                           
   648                           ; 11 bytes @ 0x34
   649  000094                     	ds	11
   650  00009F                     check_battery_voltage_error@batt_msg:
   651                           	callstack 0
   652                           
   653                           ; 11 bytes @ 0x3F
   654  00009F                     	ds	11
   655  0000AA                     check_battery_voltage_error@batt_voltage_mV:
   656                           	callstack 0
   657                           
   658                           ; 2 bytes @ 0x4A
   659  0000AA                     	ds	2
   660  0000AC                     
   661                           ; 2 bytes @ 0x4C
   662  0000AC                     	ds	2
   663  0000AE                     
   664                           ; 3 bytes @ 0x4E
   665  0000AE                     	ds	3
   666  0000B1                     ??_main:
   667                           
   668                           ; 1 bytes @ 0x51
   669  0000B1                     	ds	4
   670  0000B5                     main@last_millis:
   671                           	callstack 0
   672                           
   673                           ; 4 bytes @ 0x55
   674  0000B5                     	ds	4
   675  0000B9                     main@blue_led_on:
   676                           	callstack 0
   677                           
   678                           ; 1 bytes @ 0x59
   679  0000B9                     	ds	1
   680  0000BA                     main@status_ok:
   681                           	callstack 0
   682                           
   683                           ; 1 bytes @ 0x5A
   684  0000BA                     	ds	1
   685  0000BB                     main@error_msg:
   686                           	callstack 0
   687                           
   688                           ; 11 bytes @ 0x5B
   689  0000BB                     	ds	11
   690  0000C6                     main@can_setup:
   691                           	callstack 0
   692                           
   693                           ; 7 bytes @ 0x66
   694  0000C6                     	ds	7
   695                           
   696                           	psect	cstackCOMRAM
   697  000001                     __pcstackCOMRAM:
   698                           	callstack 0
   699  000001                     ?_get_message_type:
   700                           	callstack 0
   701  000001                     ?i2_millis:
   702                           	callstack 0
   703  000001                     get_message_type@msg:
   704                           	callstack 0
   705  000001                     get_board_unique_id@msg:
   706                           	callstack 0
   707  000001                     i2memcpy@d1:
   708                           	callstack 0
   709                           
   710                           ; 2 bytes @ 0x0
   711  000001                     	ds	2
   712  000003                     ??_get_message_type:
   713  000003                     i2memcpy@s1:
   714                           	callstack 0
   715                           
   716                           ; 2 bytes @ 0x2
   717  000003                     	ds	2
   718  000005                     ?_get_general_cmd_type:
   719                           	callstack 0
   720  000005                     ?_get_req_valve_state:
   721                           	callstack 0
   722  000005                     get_general_cmd_type@msg:
   723                           	callstack 0
   724  000005                     get_req_valve_state@msg:
   725                           	callstack 0
   726  000005                     i2memcpy@n:
   727                           	callstack 0
   728                           
   729                           ; 2 bytes @ 0x4
   730  000005                     	ds	2
   731  000007                     ??_get_general_cmd_type:
   732  000007                     ??_get_req_valve_state:
   733  000007                     i2memcpy@d:
   734                           	callstack 0
   735                           
   736                           ; 2 bytes @ 0x6
   737  000007                     	ds	1
   738  000008                     get_general_cmd_type@msg_type:
   739                           	callstack 0
   740                           
   741                           ; 2 bytes @ 0x7
   742  000008                     	ds	1
   743  000009                     get_req_valve_state@msg_type:
   744                           	callstack 0
   745  000009                     i2memcpy@s:
   746                           	callstack 0
   747                           
   748                           ; 2 bytes @ 0x8
   749  000009                     	ds	2
   750  00000B                     i2memcpy@tmp:
   751                           	callstack 0
   752  00000B                     can_msg_handler@msg:
   753                           	callstack 0
   754                           
   755                           ; 2 bytes @ 0xA
   756  00000B                     	ds	2
   757  00000D                     ??_can_msg_handler:
   758                           
   759                           ; 1 bytes @ 0xC
   760  00000D                     	ds	2
   761  00000F                     can_msg_handler@msg_type:
   762                           	callstack 0
   763                           
   764                           ; 2 bytes @ 0xE
   765  00000F                     	ds	2
   766  000011                     can_msg_handler@cmd_type:
   767                           	callstack 0
   768                           
   769                           ; 2 bytes @ 0x10
   770  000011                     	ds	2
   771  000013                     ??_can_handle_interrupt:
   772                           
   773                           ; 1 bytes @ 0x12
   774  000013                     	ds	4
   775  000017                     can_handle_interrupt@rcvd_msg:
   776                           	callstack 0
   777                           
   778                           ; 11 bytes @ 0x16
   779  000017                     	ds	11
   780  000022                     can_handle_interrupt@rcvd_msg_2151:
   781                           	callstack 0
   782                           
   783                           ; 11 bytes @ 0x21
   784  000022                     	ds	11
   785  00002D                     
   786                           ; 1 bytes @ 0x2C
   787 ;;
   788 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   789 ;;
   790 ;; *************** function _main *****************
   791 ;; Defined at:
   792 ;;		line 33 in file "main.c"
   793 ;; Parameters:    Size  Location     Type
   794 ;;  argc            2   76[BANK0 ] int 
   795 ;;  argv            3   78[BANK0 ] PTR PTR unsigned char 
   796 ;; Auto vars:     Size  Location     Type
   797 ;;  error_msg      11   91[BANK0 ] struct .
   798 ;;  status_ok       1   90[BANK0 ] unsigned char 
   799 ;;  can_setup       7  102[BANK0 ] struct .
   800 ;;  last_millis     4   85[BANK0 ] unsigned long 
   801 ;;  blue_led_on     1   89[BANK0 ] unsigned char 
   802 ;; Return value:  Size  Location     Type
   803 ;;                  2   76[BANK0 ] int 
   804 ;; Registers used:
   805 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
   806 ;; Tracked objects:
   807 ;;		On entry : 0/0
   808 ;;		On exit  : 0/0
   809 ;;		Unchanged: 0/0
   810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   811 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   812 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   813 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   814 ;;      Totals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   815 ;;Total ram usage:       33 bytes
   816 ;; Hardware stack levels required when called: 10
   817 ;; This function calls:
   818 ;;		_ADCC_DisableContinuousConversion
   819 ;;		_ADCC_Initialize
   820 ;;		_FVR_Initialize
   821 ;;		_LED_init
   822 ;;		_OSCILLATOR_Initialize
   823 ;;		_SYSTEM_Initialize
   824 ;;		_build_board_stat_msg
   825 ;;		_can_generate_timing_params
   826 ;;		_can_init
   827 ;;		_check_battery_voltage_error
   828 ;;		_check_bus_current_error
   829 ;;		_check_valve_pin_error
   830 ;;		_is_batt_voltage_critical
   831 ;;		_millis
   832 ;;		_send_status_ok
   833 ;;		_timer0_init
   834 ;;		_txb_enqueue
   835 ;;		_txb_heartbeat
   836 ;;		_txb_init
   837 ;;		_valve_init
   838 ;;		_vent_close
   839 ;;		_vent_open
   840 ;;		_vent_send_status
   841 ;; This function is called by:
   842 ;;		Startup code after reset
   843 ;; This function uses a non-reentrant model
   844 ;;
   845                           
   846                           	psect	text0
   847  0002C6                     __ptext0:
   848                           	callstack 0
   849  0002C6                     _main:
   850                           	callstack 21
   851  0002C6                     
   852                           ;main.c: 35: SYSTEM_Initialize();
   853  0002C6  ECD3  F00E         	call	_SYSTEM_Initialize	;wreg free
   854                           
   855                           ;main.c: 36: OSCILLATOR_Initialize();
   856  0002CA  EC43  F00E         	call	_OSCILLATOR_Initialize	;wreg free
   857  0002CE                     
   858                           ;main.c: 38: FVR_Initialize();
   859  0002CE  EC13  F00F         	call	_FVR_Initialize	;wreg free
   860  0002D2                     
   861                           ;main.c: 39: ADCC_Initialize();
   862  0002D2  EC75  F00C         	call	_ADCC_Initialize	;wreg free
   863  0002D6                     
   864                           ;main.c: 40: ADCC_DisableContinuousConversion();
   865  0002D6  EC20  F00F         	call	_ADCC_DisableContinuousConversion	;wreg free
   866  0002DA                     
   867                           ;main.c: 42: LED_init();
   868  0002DA  EC0C  F00F         	call	_LED_init	;wreg free
   869  0002DE                     
   870                           ;main.c: 45: timer0_init();
   871  0002DE  ECB9  F00E         	call	_timer0_init	;wreg free
   872  0002E2                     
   873                           ;main.c: 48: INTCON0bits.GIE = 1;
   874  0002E2  8ED2               	bsf	210,7,c	;volatile
   875  0002E4                     
   876                           ;main.c: 51: TRISC1 = 0;
   877  0002E4  92C4               	bcf	16324,1,c	;volatile
   878  0002E6                     
   879                           ;main.c: 52: RC1PPS = 0x33;
   880  0002E6  0E33               	movlw	51
   881  0002E8  013A               	movlb	58	; () banked
   882  0002EA  6F11               	movwf	17,b	;volatile
   883  0002EC                     
   884                           ; BSR set to: 58
   885                           ;main.c: 55: TRISC0 = 1;
   886  0002EC  80C4               	bsf	16324,0,c	;volatile
   887  0002EE                     
   888                           ; BSR set to: 58
   889                           ;main.c: 56: ANSELC0 = 0;
   890  0002EE  9160               	bcf	96,0,b	;volatile
   891  0002F0                     
   892                           ; BSR set to: 58
   893                           ;main.c: 57: CANRXPPS = 0x10;
   894  0002F0  0E10               	movlw	16
   895  0002F2  6FED               	movwf	237,b	;volatile
   896  0002F4                     
   897                           ; BSR set to: 58
   898                           ;main.c: 60: can_timing_t can_setup;;main.c: 61: can_generate_timing_params(12000000, &c
      +                          an_setup);
   899  0002F4  0E00               	movlw	0
   900  0002F6  0100               	movlb	0	; () banked
   901  0002F8  6F60               	movwf	can_generate_timing_params@can_frequency& (0+255),b
   902  0002FA  0E1B               	movlw	27
   903  0002FC  6F61               	movwf	(can_generate_timing_params@can_frequency+1)& (0+255),b
   904  0002FE  0EB7               	movlw	183
   905  000300  6F62               	movwf	(can_generate_timing_params@can_frequency+2)& (0+255),b
   906  000302  0E00               	movlw	0
   907  000304  6F63               	movwf	(can_generate_timing_params@can_frequency+3)& (0+255),b
   908  000306  0EC6               	movlw	low main@can_setup
   909  000308  6F64               	movwf	can_generate_timing_params@timing& (0+255),b
   910  00030A  0E00               	movlw	high main@can_setup
   911  00030C  6F65               	movwf	(can_generate_timing_params@timing+1)& (0+255),b
   912  00030E  EC0F  F000         	call	_can_generate_timing_params	;wreg free
   913  000312                     
   914                           ;main.c: 62: can_init(&can_setup, can_msg_handler);
   915  000312  0EC6               	movlw	low main@can_setup
   916  000314  0100               	movlb	0	; () banked
   917  000316  6F60               	movwf	can_init@timing& (0+255),b
   918  000318  0E00               	movlw	high main@can_setup
   919  00031A  6F61               	movwf	(can_init@timing+1)& (0+255),b
   920  00031C  0EB6               	movlw	low _can_msg_handler
   921  00031E  6F62               	movwf	can_init@receive_callback& (0+255),b
   922  000320  0E09               	movlw	high _can_msg_handler
   923  000322  6F63               	movwf	(can_init@receive_callback+1)& (0+255),b
   924  000324  EC1E  F004         	call	_can_init	;wreg free
   925  000328                     
   926                           ;main.c: 64: txb_init(tx_pool, sizeof(tx_pool), can_send, can_send_rdy);
   927  000328  0E00               	movlw	low _tx_pool
   928  00032A  0100               	movlb	0	; () banked
   929  00032C  6F6F               	movwf	txb_init@pool& (0+255),b
   930  00032E  0E01               	movlw	high _tx_pool
   931  000330  6F70               	movwf	(txb_init@pool+1)& (0+255),b
   932  000332  0E00               	movlw	0
   933  000334  6F72               	movwf	(txb_init@pool_size+1)& (0+255),b
   934  000336  0E64               	movlw	100
   935  000338  6F71               	movwf	txb_init@pool_size& (0+255),b
   936  00033A  0E78               	movlw	low _can_send
   937  00033C  6F73               	movwf	txb_init@can_send_fp& (0+255),b
   938  00033E  0E0D               	movlw	high _can_send
   939  000340  6F74               	movwf	(txb_init@can_send_fp+1)& (0+255),b
   940  000342  0E90               	movlw	low _can_send_rdy
   941  000344  6F75               	movwf	txb_init@can_tx_ready& (0+255),b
   942  000346  0E1D               	movlw	high _can_send_rdy
   943  000348  6F76               	movwf	(txb_init@can_tx_ready+1)& (0+255),b
   944  00034A  EC11  F00E         	call	_txb_init	;wreg free
   945  00034E                     
   946                           ;main.c: 67: uint32_t last_millis = millis();
   947  00034E  ECF2  F00E         	call	_millis	;wreg free
   948  000352  C060  F0B5         	movff	?_millis,main@last_millis
   949  000356  C061  F0B6         	movff	?_millis+1,main@last_millis+1
   950  00035A  C062  F0B7         	movff	?_millis+2,main@last_millis+2
   951  00035E  C063  F0B8         	movff	?_millis+3,main@last_millis+3
   952  000362                     
   953                           ;main.c: 70: valve_init();
   954  000362  EC04  F00F         	call	_valve_init	;wreg free
   955  000366                     
   956                           ;main.c: 72: vent_open();
   957  000366  EC17  F00F         	call	_vent_open	;wreg free
   958  00036A                     
   959                           ;main.c: 74: bool blue_led_on = 0;
   960  00036A  0E00               	movlw	0
   961  00036C  0100               	movlb	0	; () banked
   962  00036E  6FB9               	movwf	main@blue_led_on& (0+255),b
   963  000370                     l6363:
   964                           
   965                           ;main.c: 76: if (millis() - last_millis > 250) {
   966  000370  ECF2  F00E         	call	_millis	;wreg free
   967  000374  0100               	movlb	0	; () banked
   968  000376  51B5               	movf	main@last_millis& (0+255),w,b
   969  000378  5D60               	subwf	?_millis& (0+255),w,b
   970  00037A  6FB1               	movwf	??_main& (0+255),b
   971  00037C  51B6               	movf	(main@last_millis+1)& (0+255),w,b
   972  00037E  5961               	subwfb	(?_millis+1)& (0+255),w,b
   973  000380  6FB2               	movwf	(??_main+1)& (0+255),b
   974  000382  51B7               	movf	(main@last_millis+2)& (0+255),w,b
   975  000384  5962               	subwfb	(?_millis+2)& (0+255),w,b
   976  000386  6FB3               	movwf	(??_main+2)& (0+255),b
   977  000388  51B8               	movf	(main@last_millis+3)& (0+255),w,b
   978  00038A  5963               	subwfb	(?_millis+3)& (0+255),w,b
   979  00038C  6FB4               	movwf	(??_main+3)& (0+255),b
   980  00038E  51B4               	movf	(??_main+3)& (0+255),w,b
   981  000390  11B3               	iorwf	(??_main+2)& (0+255),w,b
   982  000392  11B2               	iorwf	(??_main+1)& (0+255),w,b
   983  000394  E109               	bnz	u4320
   984  000396  0EFB               	movlw	251
   985  000398  5DB1               	subwf	??_main& (0+255),w,b
   986  00039A  A0D8               	btfss	status,0,c
   987  00039C  EFD2  F001         	goto	u4321
   988  0003A0  EFD4  F001         	goto	u4320
   989  0003A4                     u4321:
   990  0003A4  EF6C  F002         	goto	l6403
   991  0003A8                     u4320:
   992  0003A8                     
   993                           ; BSR set to: 0
   994                           ;main.c: 79: bool status_ok = 1;
   995  0003A8  0E01               	movlw	1
   996  0003AA  6FBA               	movwf	main@status_ok& (0+255),b
   997  0003AC                     
   998                           ; BSR set to: 0
   999                           ;main.c: 80: status_ok &= check_battery_voltage_error();
  1000  0003AC  EC5C  F003         	call	_check_battery_voltage_error	;wreg free
  1001  0003B0  0100               	movlb	0	; () banked
  1002  0003B2  17BA               	andwf	main@status_ok& (0+255),f,b
  1003  0003B4                     
  1004                           ; BSR set to: 0
  1005                           ;main.c: 81: status_ok &= check_bus_current_error();
  1006  0003B4  EC5D  F00A         	call	_check_bus_current_error	;wreg free
  1007  0003B8  0100               	movlb	0	; () banked
  1008  0003BA  17BA               	andwf	main@status_ok& (0+255),f,b
  1009  0003BC                     
  1010                           ; BSR set to: 0
  1011                           ;main.c: 82: status_ok &= check_valve_pin_error(requested_valve_state);
  1012  0003BC  51DA               	movf	_requested_valve_state& (0+255),w,b
  1013  0003BE  EC23  F00F         	call	_check_valve_pin_error
  1014  0003C2  0100               	movlb	0	; () banked
  1015  0003C4  17BA               	andwf	main@status_ok& (0+255),f,b
  1016  0003C6                     
  1017                           ; BSR set to: 0
  1018                           ;main.c: 85: if (status_ok) { send_status_ok(); }
  1019  0003C6  51BA               	movf	main@status_ok& (0+255),w,b
  1020  0003C8  B4D8               	btfsc	status,2,c
  1021  0003CA  EFE9  F001         	goto	u4331
  1022  0003CE  EFEB  F001         	goto	u4330
  1023  0003D2                     u4331:
  1024  0003D2  EFED  F001         	goto	l357
  1025  0003D6                     u4330:
  1026  0003D6                     
  1027                           ; BSR set to: 0
  1028  0003D6  EC1F  F00D         	call	_send_status_ok	;wreg free
  1029  0003DA                     l357:
  1030                           
  1031                           ;main.c: 88: vent_send_status(requested_valve_state);
  1032  0003DA  0100               	movlb	0	; () banked
  1033  0003DC  51DA               	movf	_requested_valve_state& (0+255),w,b
  1034  0003DE  EC32  F009         	call	_vent_send_status
  1035  0003E2                     
  1036                           ;main.c: 95: if ((millis() - last_can_traffic_timestamp_ms > 1000);main.c: 96: || is_bat
      +                          t_voltage_critical();main.c: 97: || (requested_valve_state == VALVE_OPEN)) {
  1037  0003E2  ECF2  F00E         	call	_millis	;wreg free
  1038  0003E6  0100               	movlb	0	; () banked
  1039  0003E8  51D1               	movf	_last_can_traffic_timestamp_ms& (0+255),w,b
  1040  0003EA  5D60               	subwf	?_millis& (0+255),w,b
  1041  0003EC  6FB1               	movwf	??_main& (0+255),b
  1042  0003EE  51D2               	movf	(_last_can_traffic_timestamp_ms+1)& (0+255),w,b
  1043  0003F0  5961               	subwfb	(?_millis+1)& (0+255),w,b
  1044  0003F2  6FB2               	movwf	(??_main+1)& (0+255),b
  1045  0003F4  51D3               	movf	(_last_can_traffic_timestamp_ms+2)& (0+255),w,b
  1046  0003F6  5962               	subwfb	(?_millis+2)& (0+255),w,b
  1047  0003F8  6FB3               	movwf	(??_main+2)& (0+255),b
  1048  0003FA  51D4               	movf	(_last_can_traffic_timestamp_ms+3)& (0+255),w,b
  1049  0003FC  5963               	subwfb	(?_millis+3)& (0+255),w,b
  1050  0003FE  6FB4               	movwf	(??_main+3)& (0+255),b
  1051  000400  51B4               	movf	(??_main+3)& (0+255),w,b
  1052  000402  11B3               	iorwf	(??_main+2)& (0+255),w,b
  1053  000404  E109               	bnz	u4341
  1054  000406  0EE9               	movlw	233
  1055  000408  5DB1               	subwf	??_main& (0+255),w,b
  1056  00040A  0E03               	movlw	3
  1057  00040C  59B2               	subwfb	(??_main+1)& (0+255),w,b
  1058  00040E  B0D8               	btfsc	status,0,c
  1059  000410  EF0C  F002         	goto	u4341
  1060  000414  EF0E  F002         	goto	u4340
  1061  000418                     u4341:
  1062  000418  EF21  F002         	goto	l6383
  1063  00041C                     u4340:
  1064  00041C                     
  1065                           ; BSR set to: 0
  1066  00041C  EC1D  F00F         	call	_is_batt_voltage_critical	;wreg free
  1067  000420  0900               	iorlw	0
  1068  000422  A4D8               	btfss	status,2,c
  1069  000424  EF16  F002         	goto	u4351
  1070  000428  EF18  F002         	goto	u4350
  1071  00042C                     u4351:
  1072  00042C  EF21  F002         	goto	l6383
  1073  000430                     u4350:
  1074  000430  0100               	movlb	0	; () banked
  1075  000432  51DA               	movf	_requested_valve_state& (0+255),w,b
  1076  000434  A4D8               	btfss	status,2,c
  1077  000436  EF1F  F002         	goto	u4361
  1078  00043A  EF21  F002         	goto	u4360
  1079  00043E                     u4361:
  1080  00043E  EF25  F002         	goto	l6385
  1081  000442                     u4360:
  1082  000442                     l6383:
  1083                           
  1084                           ;main.c: 98: vent_open();
  1085  000442  EC17  F00F         	call	_vent_open	;wreg free
  1086                           
  1087                           ;main.c: 99: } else if (requested_valve_state == VALVE_CLOSED) {
  1088  000446  EF51  F002         	goto	l6393
  1089  00044A                     l6385:
  1090                           
  1091                           ; BSR set to: 0
  1092  00044A  05DA               	decf	_requested_valve_state& (0+255),w,b
  1093  00044C  A4D8               	btfss	status,2,c
  1094  00044E  EF2B  F002         	goto	u4371
  1095  000452  EF2D  F002         	goto	u4370
  1096  000456                     u4371:
  1097  000456  EF31  F002         	goto	l6389
  1098  00045A                     u4370:
  1099  00045A                     
  1100                           ; BSR set to: 0
  1101                           ;main.c: 100: vent_close();
  1102  00045A  EC1A  F00F         	call	_vent_close	;wreg free
  1103                           
  1104                           ;main.c: 101: } else {
  1105  00045E  EF51  F002         	goto	l6393
  1106  000462                     l6389:
  1107                           
  1108                           ; BSR set to: 0
  1109                           ;main.c: 103: can_msg_t error_msg;;main.c: 104: build_board_stat_msg(millis(), E_CODING_
      +                          SCREWUP, (0), 0, &error_msg);
  1110  000462  ECF2  F00E         	call	_millis	;wreg free
  1111  000466  C060  F066         	movff	?_millis,build_board_stat_msg@timestamp
  1112  00046A  C061  F067         	movff	?_millis+1,build_board_stat_msg@timestamp+1
  1113  00046E  C062  F068         	movff	?_millis+2,build_board_stat_msg@timestamp+2
  1114  000472  C063  F069         	movff	?_millis+3,build_board_stat_msg@timestamp+3
  1115  000476  0E13               	movlw	19
  1116  000478  0100               	movlb	0	; () banked
  1117  00047A  6F6A               	movwf	build_board_stat_msg@error_code& (0+255),b
  1118  00047C  0E00               	movlw	0
  1119  00047E  6F6B               	movwf	build_board_stat_msg@error_data& (0+255),b
  1120  000480  0E00               	movlw	0
  1121  000482  6F6C               	movwf	(build_board_stat_msg@error_data+1)& (0+255),b
  1122  000484  0E00               	movlw	0
  1123  000486  6F6D               	movwf	build_board_stat_msg@error_data_len& (0+255),b
  1124  000488  0EBB               	movlw	low main@error_msg
  1125  00048A  6F6E               	movwf	build_board_stat_msg@output& (0+255),b
  1126  00048C  0E00               	movlw	high main@error_msg
  1127  00048E  6F6F               	movwf	(build_board_stat_msg@output+1)& (0+255),b
  1128  000490  ECCA  F007         	call	_build_board_stat_msg	;wreg free
  1129  000494                     
  1130                           ;main.c: 105: txb_enqueue(&error_msg);
  1131  000494  0EBB               	movlw	low main@error_msg
  1132  000496  0100               	movlb	0	; () banked
  1133  000498  6F76               	movwf	txb_enqueue@msg& (0+255),b
  1134  00049A  0E00               	movlw	high main@error_msg
  1135  00049C  6F77               	movwf	(txb_enqueue@msg+1)& (0+255),b
  1136  00049E  ECD7  F00D         	call	_txb_enqueue	;wreg free
  1137  0004A2                     l6393:
  1138                           
  1139                           ;main.c: 106: };main.c: 109: if (blue_led_on) {
  1140  0004A2  0100               	movlb	0	; () banked
  1141  0004A4  51B9               	movf	main@blue_led_on& (0+255),w,b
  1142  0004A6  B4D8               	btfsc	status,2,c
  1143  0004A8  EF58  F002         	goto	u4381
  1144  0004AC  EF5A  F002         	goto	u4380
  1145  0004B0                     u4381:
  1146  0004B0  EF5F  F002         	goto	l364
  1147  0004B4                     u4380:
  1148  0004B4                     
  1149                           ; BSR set to: 0
  1150                           ;main.c: 110: (LATC2 = 1);
  1151  0004B4  84BC               	bsf	16316,2,c	;volatile
  1152  0004B6                     
  1153                           ; BSR set to: 0
  1154                           ;main.c: 111: blue_led_on = 0;
  1155  0004B6  0E00               	movlw	0
  1156  0004B8  6FB9               	movwf	main@blue_led_on& (0+255),b
  1157                           
  1158                           ;main.c: 112: } else {
  1159  0004BA  EF62  F002         	goto	l6401
  1160  0004BE                     l364:
  1161                           
  1162                           ; BSR set to: 0
  1163                           ;main.c: 113: (LATC2 = 0);
  1164  0004BE  94BC               	bcf	16316,2,c	;volatile
  1165  0004C0                     
  1166                           ; BSR set to: 0
  1167                           ;main.c: 114: blue_led_on = 1;
  1168  0004C0  0E01               	movlw	1
  1169  0004C2  6FB9               	movwf	main@blue_led_on& (0+255),b
  1170  0004C4                     l6401:
  1171                           
  1172                           ; BSR set to: 0
  1173                           ;main.c: 115: };main.c: 118: last_millis = millis();
  1174  0004C4  ECF2  F00E         	call	_millis	;wreg free
  1175  0004C8  C060  F0B5         	movff	?_millis,main@last_millis
  1176  0004CC  C061  F0B6         	movff	?_millis+1,main@last_millis+1
  1177  0004D0  C062  F0B7         	movff	?_millis+2,main@last_millis+2
  1178  0004D4  C063  F0B8         	movff	?_millis+3,main@last_millis+3
  1179  0004D8                     l6403:
  1180                           
  1181                           ;main.c: 119: };main.c: 121: txb_heartbeat();
  1182  0004D8  EC55  F00B         	call	_txb_heartbeat	;wreg free
  1183  0004DC  EFB8  F001         	goto	l6363
  1184  0004E0  EF0D  F000         	goto	start
  1185  0004E4                     __end_of_main:
  1186                           	callstack 0
  1187                           
  1188 ;; *************** function _vent_send_status *****************
  1189 ;; Defined at:
  1190 ;;		line 46 in file "valve.c"
  1191 ;; Parameters:    Size  Location     Type
  1192 ;;  req_state       1    wreg     enum E22442
  1193 ;; Auto vars:     Size  Location     Type
  1194 ;;  req_state       1   24[BANK0 ] enum E22442
  1195 ;;  stat_msg       11   28[BANK0 ] struct .
  1196 ;;  valve_closed    1   27[BANK0 ] unsigned char 
  1197 ;;  valve_open      1   26[BANK0 ] unsigned char 
  1198 ;;  curr_state      1   25[BANK0 ] enum E22442
  1199 ;; Return value:  Size  Location     Type
  1200 ;;                  1    wreg      void 
  1201 ;; Registers used:
  1202 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1203 ;; Tracked objects:
  1204 ;;		On entry : 0/0
  1205 ;;		On exit  : 0/0
  1206 ;;		Unchanged: 0/0
  1207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1209 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1211 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1212 ;;Total ram usage:       15 bytes
  1213 ;; Hardware stack levels used: 1
  1214 ;; Hardware stack levels required when called: 9
  1215 ;; This function calls:
  1216 ;;		_build_valve_stat_msg
  1217 ;;		_get_valve_closed_state
  1218 ;;		_get_valve_open_state
  1219 ;;		_millis
  1220 ;;		_txb_enqueue
  1221 ;; This function is called by:
  1222 ;;		_main
  1223 ;; This function uses a non-reentrant model
  1224 ;;
  1225                           
  1226                           	psect	text1
  1227  001264                     __ptext1:
  1228                           	callstack 0
  1229  001264                     _vent_send_status:
  1230                           	callstack 21
  1231                           
  1232                           ;incstack = 0
  1233                           ;vent_send_status@req_state stored from wreg
  1234  001264  0100               	movlb	0	; () banked
  1235  001266  6F78               	movwf	vent_send_status@req_state& (0+255),b
  1236  001268                     
  1237                           ;valve.c: 48: enum VALVE_STATE curr_state;;valve.c: 50: bool valve_open = get_valve_open
      +                          _state();
  1238  001268  ECDE  F00E         	call	_get_valve_open_state	;wreg free
  1239  00126C  0100               	movlb	0	; () banked
  1240  00126E  6F7A               	movwf	vent_send_status@valve_open& (0+255),b
  1241                           
  1242                           ;valve.c: 51: bool valve_closed = get_valve_closed_state();
  1243  001270  ECE8  F00E         	call	_get_valve_closed_state	;wreg free
  1244  001274  0100               	movlb	0	; () banked
  1245  001276  6F7B               	movwf	vent_send_status@valve_closed& (0+255),b
  1246  001278                     
  1247                           ; BSR set to: 0
  1248                           ;valve.c: 54: if (valve_open && !valve_closed){
  1249  001278  517A               	movf	vent_send_status@valve_open& (0+255),w,b
  1250  00127A  B4D8               	btfsc	status,2,c
  1251  00127C  EF42  F009         	goto	u4221
  1252  001280  EF44  F009         	goto	u4220
  1253  001284                     u4221:
  1254  001284  EF50  F009         	goto	l6299
  1255  001288                     u4220:
  1256  001288                     
  1257                           ; BSR set to: 0
  1258  001288  517B               	movf	vent_send_status@valve_closed& (0+255),w,b
  1259  00128A  A4D8               	btfss	status,2,c
  1260  00128C  EF4A  F009         	goto	u4231
  1261  001290  EF4C  F009         	goto	u4230
  1262  001294                     u4231:
  1263  001294  EF50  F009         	goto	l6299
  1264  001298                     u4230:
  1265  001298                     
  1266                           ; BSR set to: 0
  1267                           ;valve.c: 55: curr_state = VALVE_OPEN;
  1268  001298  0E00               	movlw	0
  1269  00129A  6F79               	movwf	vent_send_status@curr_state& (0+255),b
  1270                           
  1271                           ;valve.c: 56: }
  1272  00129C  EF7A  F009         	goto	l6313
  1273  0012A0                     l6299:
  1274                           
  1275                           ; BSR set to: 0
  1276                           ;valve.c: 59: else if (!valve_open && valve_closed){
  1277  0012A0  517A               	movf	vent_send_status@valve_open& (0+255),w,b
  1278  0012A2  A4D8               	btfss	status,2,c
  1279  0012A4  EF56  F009         	goto	u4241
  1280  0012A8  EF58  F009         	goto	u4240
  1281  0012AC                     u4241:
  1282  0012AC  EF64  F009         	goto	l6305
  1283  0012B0                     u4240:
  1284  0012B0                     
  1285                           ; BSR set to: 0
  1286  0012B0  517B               	movf	vent_send_status@valve_closed& (0+255),w,b
  1287  0012B2  B4D8               	btfsc	status,2,c
  1288  0012B4  EF5E  F009         	goto	u4251
  1289  0012B8  EF60  F009         	goto	u4250
  1290  0012BC                     u4251:
  1291  0012BC  EF64  F009         	goto	l6305
  1292  0012C0                     u4250:
  1293  0012C0                     
  1294                           ; BSR set to: 0
  1295                           ;valve.c: 60: curr_state = VALVE_CLOSED;
  1296  0012C0  0E01               	movlw	1
  1297  0012C2  6F79               	movwf	vent_send_status@curr_state& (0+255),b
  1298                           
  1299                           ;valve.c: 61: }
  1300  0012C4  EF7A  F009         	goto	l6313
  1301  0012C8                     l6305:
  1302                           
  1303                           ; BSR set to: 0
  1304                           ;valve.c: 64: else if (!valve_open && !valve_closed){
  1305  0012C8  517A               	movf	vent_send_status@valve_open& (0+255),w,b
  1306  0012CA  A4D8               	btfss	status,2,c
  1307  0012CC  EF6A  F009         	goto	u4261
  1308  0012D0  EF6C  F009         	goto	u4260
  1309  0012D4                     u4261:
  1310  0012D4  EF78  F009         	goto	l6311
  1311  0012D8                     u4260:
  1312  0012D8                     
  1313                           ; BSR set to: 0
  1314  0012D8  517B               	movf	vent_send_status@valve_closed& (0+255),w,b
  1315  0012DA  A4D8               	btfss	status,2,c
  1316  0012DC  EF72  F009         	goto	u4271
  1317  0012E0  EF74  F009         	goto	u4270
  1318  0012E4                     u4271:
  1319  0012E4  EF78  F009         	goto	l6311
  1320  0012E8                     u4270:
  1321  0012E8                     
  1322                           ; BSR set to: 0
  1323                           ;valve.c: 65: curr_state = VALVE_UNK;
  1324  0012E8  0E02               	movlw	2
  1325  0012EA  6F79               	movwf	vent_send_status@curr_state& (0+255),b
  1326                           
  1327                           ;valve.c: 66: }
  1328  0012EC  EF7A  F009         	goto	l6313
  1329  0012F0                     l6311:
  1330                           
  1331                           ; BSR set to: 0
  1332                           ;valve.c: 69: else {;valve.c: 70: curr_state = VALVE_ILLEGAL;
  1333  0012F0  0E03               	movlw	3
  1334  0012F2  6F79               	movwf	vent_send_status@curr_state& (0+255),b
  1335  0012F4                     l6313:
  1336                           
  1337                           ; BSR set to: 0
  1338                           ;valve.c: 71: };valve.c: 73: can_msg_t stat_msg;;valve.c: 74: build_valve_stat_msg(milli
      +                          s(), curr_state, req_state,;valve.c: 75: 0x460, &stat_msg);
  1339  0012F4  ECF2  F00E         	call	_millis	;wreg free
  1340  0012F8  C060  F066         	movff	?_millis,build_valve_stat_msg@timestamp
  1341  0012FC  C061  F067         	movff	?_millis+1,build_valve_stat_msg@timestamp+1
  1342  001300  C062  F068         	movff	?_millis+2,build_valve_stat_msg@timestamp+2
  1343  001304  C063  F069         	movff	?_millis+3,build_valve_stat_msg@timestamp+3
  1344  001308  C079  F06A         	movff	vent_send_status@curr_state,build_valve_stat_msg@valve_state
  1345  00130C  C078  F06B         	movff	vent_send_status@req_state,build_valve_stat_msg@req_valve_state
  1346  001310  0E04               	movlw	4
  1347  001312  0100               	movlb	0	; () banked
  1348  001314  6F6D               	movwf	(build_valve_stat_msg@message_type+1)& (0+255),b
  1349  001316  0E60               	movlw	96
  1350  001318  6F6C               	movwf	build_valve_stat_msg@message_type& (0+255),b
  1351  00131A  0E7C               	movlw	low vent_send_status@stat_msg
  1352  00131C  6F6E               	movwf	build_valve_stat_msg@output& (0+255),b
  1353  00131E  0E00               	movlw	high vent_send_status@stat_msg
  1354  001320  6F6F               	movwf	(build_valve_stat_msg@output+1)& (0+255),b
  1355  001322  EC9B  F009         	call	_build_valve_stat_msg	;wreg free
  1356  001326                     
  1357                           ;valve.c: 76: txb_enqueue(&stat_msg);
  1358  001326  0E7C               	movlw	low vent_send_status@stat_msg
  1359  001328  0100               	movlb	0	; () banked
  1360  00132A  6F76               	movwf	txb_enqueue@msg& (0+255),b
  1361  00132C  0E00               	movlw	high vent_send_status@stat_msg
  1362  00132E  6F77               	movwf	(txb_enqueue@msg+1)& (0+255),b
  1363  001330  ECD7  F00D         	call	_txb_enqueue	;wreg free
  1364  001334  0012               	return		;funcret
  1365  001336                     __end_of_vent_send_status:
  1366                           	callstack 0
  1367                           
  1368 ;; *************** function _get_valve_open_state *****************
  1369 ;; Defined at:
  1370 ;;		line 38 in file "valve.c"
  1371 ;; Parameters:    Size  Location     Type
  1372 ;;		None
  1373 ;; Auto vars:     Size  Location     Type
  1374 ;;		None
  1375 ;; Return value:  Size  Location     Type
  1376 ;;                  1    wreg      unsigned char 
  1377 ;; Registers used:
  1378 ;;		wreg
  1379 ;; Tracked objects:
  1380 ;;		On entry : 0/0
  1381 ;;		On exit  : 0/0
  1382 ;;		Unchanged: 0/0
  1383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1388 ;;Total ram usage:        0 bytes
  1389 ;; Hardware stack levels used: 1
  1390 ;; Hardware stack levels required when called: 5
  1391 ;; This function calls:
  1392 ;;		Nothing
  1393 ;; This function is called by:
  1394 ;;		_vent_send_status
  1395 ;; This function uses a non-reentrant model
  1396 ;;
  1397                           
  1398                           	psect	text2
  1399  001DBC                     __ptext2:
  1400                           	callstack 0
  1401  001DBC                     _get_valve_open_state:
  1402                           	callstack 24
  1403  001DBC                     
  1404                           ;valve.c: 39: return PORTBbits.RB4;
  1405  001DBC  B8CB               	btfsc	203,4,c	;volatile
  1406  001DBE  EFE3  F00E         	goto	u2371
  1407  001DC2  EFE6  F00E         	goto	u2370
  1408  001DC6                     u2371:
  1409  001DC6  0E01               	movlw	1
  1410  001DC8  EFE7  F00E         	goto	u2376
  1411  001DCC                     u2370:
  1412  001DCC  0E00               	movlw	0
  1413  001DCE                     u2376:
  1414  001DCE  0012               	return		;funcret
  1415  001DD0                     __end_of_get_valve_open_state:
  1416                           	callstack 0
  1417                           
  1418 ;; *************** function _get_valve_closed_state *****************
  1419 ;; Defined at:
  1420 ;;		line 42 in file "valve.c"
  1421 ;; Parameters:    Size  Location     Type
  1422 ;;		None
  1423 ;; Auto vars:     Size  Location     Type
  1424 ;;		None
  1425 ;; Return value:  Size  Location     Type
  1426 ;;                  1    wreg      unsigned char 
  1427 ;; Registers used:
  1428 ;;		wreg
  1429 ;; Tracked objects:
  1430 ;;		On entry : 0/0
  1431 ;;		On exit  : 0/0
  1432 ;;		Unchanged: 0/0
  1433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1438 ;;Total ram usage:        0 bytes
  1439 ;; Hardware stack levels used: 1
  1440 ;; Hardware stack levels required when called: 5
  1441 ;; This function calls:
  1442 ;;		Nothing
  1443 ;; This function is called by:
  1444 ;;		_vent_send_status
  1445 ;; This function uses a non-reentrant model
  1446 ;;
  1447                           
  1448                           	psect	text3
  1449  001DD0                     __ptext3:
  1450                           	callstack 0
  1451  001DD0                     _get_valve_closed_state:
  1452                           	callstack 24
  1453  001DD0                     
  1454                           ;valve.c: 43: return PORTBbits.RB3;
  1455  001DD0  B6CB               	btfsc	203,3,c	;volatile
  1456  001DD2  EFED  F00E         	goto	u2381
  1457  001DD6  EFF0  F00E         	goto	u2380
  1458  001DDA                     u2381:
  1459  001DDA  0E01               	movlw	1
  1460  001DDC  EFF1  F00E         	goto	u2386
  1461  001DE0                     u2380:
  1462  001DE0  0E00               	movlw	0
  1463  001DE2                     u2386:
  1464  001DE2  0012               	return		;funcret
  1465  001DE4                     __end_of_get_valve_closed_state:
  1466                           	callstack 0
  1467                           
  1468 ;; *************** function _build_valve_stat_msg *****************
  1469 ;; Defined at:
  1470 ;;		line 108 in file "canlib/can_common.c"
  1471 ;; Parameters:    Size  Location     Type
  1472 ;;  timestamp       4    6[BANK0 ] unsigned long 
  1473 ;;  valve_state     1   10[BANK0 ] enum E46
  1474 ;;  req_valve_st    1   11[BANK0 ] enum E46
  1475 ;;  message_type    2   12[BANK0 ] unsigned int 
  1476 ;;  output          2   14[BANK0 ] PTR struct .
  1477 ;;		 -> vent_send_status@stat_msg(11), 
  1478 ;; Auto vars:     Size  Location     Type
  1479 ;;		None
  1480 ;; Return value:  Size  Location     Type
  1481 ;;                  1    wreg      unsigned char 
  1482 ;; Registers used:
  1483 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1484 ;; Tracked objects:
  1485 ;;		On entry : 0/0
  1486 ;;		On exit  : 0/0
  1487 ;;		Unchanged: 0/0
  1488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1489 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1491 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1492 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1493 ;;Total ram usage:       12 bytes
  1494 ;; Hardware stack levels used: 1
  1495 ;; Hardware stack levels required when called: 6
  1496 ;; This function calls:
  1497 ;;		_write_timestamp_3bytes
  1498 ;; This function is called by:
  1499 ;;		_vent_send_status
  1500 ;; This function uses a non-reentrant model
  1501 ;;
  1502                           
  1503                           	psect	text4
  1504  001336                     __ptext4:
  1505                           	callstack 0
  1506  001336                     _build_valve_stat_msg:
  1507                           	callstack 23
  1508  001336                     
  1509                           ;can_common.c: 114: if (!output) { return 0; }
  1510  001336  0100               	movlb	0	; () banked
  1511  001338  516E               	movf	build_valve_stat_msg@output& (0+255),w,b
  1512  00133A  116F               	iorwf	(build_valve_stat_msg@output+1)& (0+255),w,b
  1513  00133C  A4D8               	btfss	status,2,c
  1514  00133E  EFA3  F009         	goto	u3991
  1515  001342  EFA5  F009         	goto	u3990
  1516  001346                     u3991:
  1517  001346  EFA7  F009         	goto	l5879
  1518  00134A                     u3990:
  1519  00134A  EFFC  F009         	goto	l455
  1520  00134E                     l5879:
  1521                           
  1522                           ; BSR set to: 0
  1523                           ;can_common.c: 115: if (!(message_type == 0x460;can_common.c: 116: || message_type == 0x
      +                          4C0)) {
  1524  00134E  0E60               	movlw	96
  1525  001350  196C               	xorwf	build_valve_stat_msg@message_type& (0+255),w,b
  1526  001352  E109               	bnz	u4000
  1527  001354  0E04               	movlw	4
  1528  001356  196D               	xorwf	(build_valve_stat_msg@message_type+1)& (0+255),w,b
  1529  001358  B4D8               	btfsc	status,2,c
  1530  00135A  EFB1  F009         	goto	u4001
  1531  00135E  EFB3  F009         	goto	u4000
  1532  001362                     u4001:
  1533  001362  EFC1  F009         	goto	l5885
  1534  001366                     u4000:
  1535  001366                     
  1536                           ; BSR set to: 0
  1537  001366  0EC0               	movlw	192
  1538  001368  196C               	xorwf	build_valve_stat_msg@message_type& (0+255),w,b
  1539  00136A  E109               	bnz	u4010
  1540  00136C  0E04               	movlw	4
  1541  00136E  196D               	xorwf	(build_valve_stat_msg@message_type+1)& (0+255),w,b
  1542  001370  B4D8               	btfsc	status,2,c
  1543  001372  EFBD  F009         	goto	u4011
  1544  001376  EFBF  F009         	goto	u4010
  1545  00137A                     u4011:
  1546  00137A  EFC1  F009         	goto	l5885
  1547  00137E                     u4010:
  1548  00137E  EFFC  F009         	goto	l455
  1549  001382                     l5885:
  1550                           
  1551                           ; BSR set to: 0
  1552                           ;can_common.c: 118: };can_common.c: 120: output->sid = message_type | 0x0B;
  1553  001382  0E0B               	movlw	11
  1554  001384  116C               	iorwf	build_valve_stat_msg@message_type& (0+255),w,b
  1555  001386  6F70               	movwf	??_build_valve_stat_msg& (0+255),b
  1556  001388  0E00               	movlw	0
  1557  00138A  116D               	iorwf	(build_valve_stat_msg@message_type+1)& (0+255),w,b
  1558  00138C  6F71               	movwf	(??_build_valve_stat_msg+1)& (0+255),b
  1559  00138E  0060  F1BB  FFD9   	movff	build_valve_stat_msg@output,fsr2l
  1560  001394  0060  F1BF  FFDA   	movff	build_valve_stat_msg@output+1,fsr2h
  1561  00139A  0060  F1C3  FFDE   	movff	??_build_valve_stat_msg,postinc2
  1562  0013A0  0060  F1C7  FFDD   	movff	??_build_valve_stat_msg+1,postdec2
  1563  0013A6                     
  1564                           ; BSR set to: 0
  1565                           ;can_common.c: 121: write_timestamp_3bytes(timestamp, output);
  1566  0013A6  C066  F060         	movff	build_valve_stat_msg@timestamp,write_timestamp_3bytes@timestamp
  1567  0013AA  C067  F061         	movff	build_valve_stat_msg@timestamp+1,write_timestamp_3bytes@timestamp+1
  1568  0013AE  C068  F062         	movff	build_valve_stat_msg@timestamp+2,write_timestamp_3bytes@timestamp+2
  1569  0013B2  C069  F063         	movff	build_valve_stat_msg@timestamp+3,write_timestamp_3bytes@timestamp+3
  1570  0013B6  C06E  F064         	movff	build_valve_stat_msg@output,write_timestamp_3bytes@output
  1571  0013BA  C06F  F065         	movff	build_valve_stat_msg@output+1,write_timestamp_3bytes@output+1
  1572  0013BE  ECF4  F00D         	call	_write_timestamp_3bytes	;wreg free
  1573  0013C2                     
  1574                           ;can_common.c: 123: output->data[3] = (uint8_t) valve_state;
  1575  0013C2  0100               	movlb	0	; () banked
  1576  0013C4  EE20 F006          	lfsr	2,6
  1577  0013C8  516E               	movf	build_valve_stat_msg@output& (0+255),w,b
  1578  0013CA  26D9               	addwf	fsr2l,f,c
  1579  0013CC  516F               	movf	(build_valve_stat_msg@output+1)& (0+255),w,b
  1580  0013CE  22DA               	addwfc	fsr2h,f,c
  1581  0013D0  0060  F1AB  FFDF   	movff	build_valve_stat_msg@valve_state,indf2
  1582  0013D6                     
  1583                           ; BSR set to: 0
  1584                           ;can_common.c: 124: output->data[4] = (uint8_t) req_valve_state;
  1585  0013D6  EE20 F007          	lfsr	2,7
  1586  0013DA  516E               	movf	build_valve_stat_msg@output& (0+255),w,b
  1587  0013DC  26D9               	addwf	fsr2l,f,c
  1588  0013DE  516F               	movf	(build_valve_stat_msg@output+1)& (0+255),w,b
  1589  0013E0  22DA               	addwfc	fsr2h,f,c
  1590  0013E2  0060  F1AF  FFDF   	movff	build_valve_stat_msg@req_valve_state,indf2
  1591  0013E8                     
  1592                           ; BSR set to: 0
  1593                           ;can_common.c: 125: output->data_len = 5;
  1594  0013E8  EE20 F002          	lfsr	2,2
  1595  0013EC  516E               	movf	build_valve_stat_msg@output& (0+255),w,b
  1596  0013EE  26D9               	addwf	fsr2l,f,c
  1597  0013F0  516F               	movf	(build_valve_stat_msg@output+1)& (0+255),w,b
  1598  0013F2  22DA               	addwfc	fsr2h,f,c
  1599  0013F4  0E05               	movlw	5
  1600  0013F6  6EDF               	movwf	indf2,c
  1601  0013F8                     l455:
  1602                           
  1603                           ; BSR set to: 0
  1604  0013F8  0012               	return		;funcret
  1605  0013FA                     __end_of_build_valve_stat_msg:
  1606                           	callstack 0
  1607                           
  1608 ;; *************** function _vent_open *****************
  1609 ;; Defined at:
  1610 ;;		line 28 in file "valve.c"
  1611 ;; Parameters:    Size  Location     Type
  1612 ;;		None
  1613 ;; Auto vars:     Size  Location     Type
  1614 ;;		None
  1615 ;; Return value:  Size  Location     Type
  1616 ;;                  1    wreg      void 
  1617 ;; Registers used:
  1618 ;;		None
  1619 ;; Tracked objects:
  1620 ;;		On entry : 0/0
  1621 ;;		On exit  : 0/0
  1622 ;;		Unchanged: 0/0
  1623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1628 ;;Total ram usage:        0 bytes
  1629 ;; Hardware stack levels used: 1
  1630 ;; Hardware stack levels required when called: 5
  1631 ;; This function calls:
  1632 ;;		Nothing
  1633 ;; This function is called by:
  1634 ;;		_main
  1635 ;; This function uses a non-reentrant model
  1636 ;;
  1637                           
  1638                           	psect	text5
  1639  001E2E                     __ptext5:
  1640                           	callstack 0
  1641  001E2E                     _vent_open:
  1642                           	callstack 25
  1643  001E2E                     
  1644                           ;valve.c: 29: (LATC3 = 0);
  1645  001E2E  96BC               	bcf	16316,3,c	;volatile
  1646                           
  1647                           ;valve.c: 30: LATB5 = 0;
  1648  001E30  9ABB               	bcf	16315,5,c	;volatile
  1649  001E32  0012               	return		;funcret
  1650  001E34                     __end_of_vent_open:
  1651                           	callstack 0
  1652                           
  1653 ;; *************** function _vent_close *****************
  1654 ;; Defined at:
  1655 ;;		line 33 in file "valve.c"
  1656 ;; Parameters:    Size  Location     Type
  1657 ;;		None
  1658 ;; Auto vars:     Size  Location     Type
  1659 ;;		None
  1660 ;; Return value:  Size  Location     Type
  1661 ;;                  1    wreg      void 
  1662 ;; Registers used:
  1663 ;;		None
  1664 ;; Tracked objects:
  1665 ;;		On entry : 0/0
  1666 ;;		On exit  : 0/0
  1667 ;;		Unchanged: 0/0
  1668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1673 ;;Total ram usage:        0 bytes
  1674 ;; Hardware stack levels used: 1
  1675 ;; Hardware stack levels required when called: 5
  1676 ;; This function calls:
  1677 ;;		Nothing
  1678 ;; This function is called by:
  1679 ;;		_main
  1680 ;; This function uses a non-reentrant model
  1681 ;;
  1682                           
  1683                           	psect	text6
  1684  001E34                     __ptext6:
  1685                           	callstack 0
  1686  001E34                     _vent_close:
  1687                           	callstack 25
  1688  001E34                     
  1689                           ;valve.c: 34: (LATC3 = 1);
  1690  001E34  86BC               	bsf	16316,3,c	;volatile
  1691                           
  1692                           ;valve.c: 35: LATB5 = 1;
  1693  001E36  8ABB               	bsf	16315,5,c	;volatile
  1694  001E38  0012               	return		;funcret
  1695  001E3A                     __end_of_vent_close:
  1696                           	callstack 0
  1697                           
  1698 ;; *************** function _valve_init *****************
  1699 ;; Defined at:
  1700 ;;		line 17 in file "valve.c"
  1701 ;; Parameters:    Size  Location     Type
  1702 ;;		None
  1703 ;; Auto vars:     Size  Location     Type
  1704 ;;		None
  1705 ;; Return value:  Size  Location     Type
  1706 ;;                  1    wreg      void 
  1707 ;; Registers used:
  1708 ;;		None
  1709 ;; Tracked objects:
  1710 ;;		On entry : 0/0
  1711 ;;		On exit  : 0/0
  1712 ;;		Unchanged: 0/0
  1713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1718 ;;Total ram usage:        0 bytes
  1719 ;; Hardware stack levels used: 1
  1720 ;; Hardware stack levels required when called: 5
  1721 ;; This function calls:
  1722 ;;		Nothing
  1723 ;; This function is called by:
  1724 ;;		_main
  1725 ;; This function uses a non-reentrant model
  1726 ;;
  1727                           
  1728                           	psect	text7
  1729  001E08                     __ptext7:
  1730                           	callstack 0
  1731  001E08                     _valve_init:
  1732                           	callstack 25
  1733  001E08                     
  1734                           ;valve.c: 18: TRISB5 = 0;
  1735  001E08  9AC3               	bcf	16323,5,c	;volatile
  1736                           
  1737                           ;valve.c: 19: LATB5 = 0;
  1738  001E0A  9ABB               	bcf	16315,5,c	;volatile
  1739                           
  1740                           ;valve.c: 21: TRISB4 = 1;
  1741  001E0C  88C3               	bsf	16323,4,c	;volatile
  1742                           
  1743                           ;valve.c: 22: ANSELB4 = 0;
  1744  001E0E  013A               	movlb	58	; () banked
  1745  001E10  9950               	bcf	80,4,b	;volatile
  1746                           
  1747                           ;valve.c: 24: TRISB3 = 1;
  1748  001E12  86C3               	bsf	16323,3,c	;volatile
  1749                           
  1750                           ;valve.c: 25: ANSELB3 = 0;
  1751  001E14  9750               	bcf	80,3,b	;volatile
  1752  001E16                     
  1753                           ; BSR set to: 58
  1754  001E16  0012               	return		;funcret
  1755  001E18                     __end_of_valve_init:
  1756                           	callstack 0
  1757                           
  1758 ;; *************** function _txb_init *****************
  1759 ;; Defined at:
  1760 ;;		line 15 in file "canlib/util/can_tx_buffer.c"
  1761 ;; Parameters:    Size  Location     Type
  1762 ;;  pool            2   15[BANK0 ] PTR void 
  1763 ;;		 -> tx_pool(100), 
  1764 ;;  pool_size       2   17[BANK0 ] unsigned int 
  1765 ;;  can_send_fp     2   19[BANK0 ] PTR FTN(PTR const struct
  1766 ;;		 -> can_send(1), 
  1767 ;;  can_tx_ready    2   21[BANK0 ] PTR FTN()unsigned char 
  1768 ;;		 -> can_send_rdy(1), 
  1769 ;; Auto vars:     Size  Location     Type
  1770 ;;		None
  1771 ;; Return value:  Size  Location     Type
  1772 ;;                  1    wreg      void 
  1773 ;; Registers used:
  1774 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1775 ;; Tracked objects:
  1776 ;;		On entry : 0/0
  1777 ;;		On exit  : 0/0
  1778 ;;		Unchanged: 0/0
  1779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1780 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1783 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1784 ;;Total ram usage:        8 bytes
  1785 ;; Hardware stack levels used: 1
  1786 ;; Hardware stack levels required when called: 7
  1787 ;; This function calls:
  1788 ;;		_srb_init
  1789 ;; This function is called by:
  1790 ;;		_main
  1791 ;; This function uses a non-reentrant model
  1792 ;;
  1793                           
  1794                           	psect	text8
  1795  001C22                     __ptext8:
  1796                           	callstack 0
  1797  001C22                     _txb_init:
  1798                           	callstack 23
  1799  001C22                     
  1800                           ;can_tx_buffer.c: 18: ctx.can_send_fp = can_send_fp;
  1801  001C22  C073  F0CD         	movff	txb_init@can_send_fp,_ctx
  1802  001C26  C074  F0CE         	movff	txb_init@can_send_fp+1,_ctx+1
  1803                           
  1804                           ;can_tx_buffer.c: 19: ctx.can_tx_ready = can_tx_ready;
  1805  001C2A  C075  F0CF         	movff	txb_init@can_tx_ready,_ctx+2
  1806  001C2E  C076  F0D0         	movff	txb_init@can_tx_ready+1,_ctx+3
  1807  001C32                     
  1808                           ;can_tx_buffer.c: 20: srb_init(&buf, pool, pool_size, sizeof(can_msg_t));
  1809  001C32  0EDB               	movlw	low _buf
  1810  001C34  0100               	movlb	0	; () banked
  1811  001C36  6F67               	movwf	srb_init@ctx& (0+255),b
  1812  001C38  0E00               	movlw	high _buf
  1813  001C3A  6F68               	movwf	(srb_init@ctx+1)& (0+255),b
  1814  001C3C  C06F  F069         	movff	txb_init@pool,srb_init@pool
  1815  001C40  C070  F06A         	movff	txb_init@pool+1,srb_init@pool+1
  1816  001C44  C071  F06B         	movff	txb_init@pool_size,srb_init@pool_size
  1817  001C48  C072  F06C         	movff	txb_init@pool_size+1,srb_init@pool_size+1
  1818  001C4C  0E00               	movlw	0
  1819  001C4E  6F6E               	movwf	(srb_init@element_size+1)& (0+255),b
  1820  001C50  0E0B               	movlw	11
  1821  001C52  6F6D               	movwf	srb_init@element_size& (0+255),b
  1822  001C54  EC10  F00B         	call	_srb_init	;wreg free
  1823  001C58  0012               	return		;funcret
  1824  001C5A                     __end_of_txb_init:
  1825                           	callstack 0
  1826                           
  1827 ;; *************** function _srb_init *****************
  1828 ;; Defined at:
  1829 ;;		line 14 in file "canlib/util/safe_ring_buffer.c"
  1830 ;; Parameters:    Size  Location     Type
  1831 ;;  ctx             2    7[BANK0 ] PTR struct .
  1832 ;;		 -> buf(10), 
  1833 ;;  pool            2    9[BANK0 ] PTR void 
  1834 ;;		 -> tx_pool(100), 
  1835 ;;  pool_size       2   11[BANK0 ] unsigned int 
  1836 ;;  element_size    2   13[BANK0 ] unsigned int 
  1837 ;; Auto vars:     Size  Location     Type
  1838 ;;		None
  1839 ;; Return value:  Size  Location     Type
  1840 ;;                  1    wreg      void 
  1841 ;; Registers used:
  1842 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1843 ;; Tracked objects:
  1844 ;;		On entry : 0/0
  1845 ;;		On exit  : 0/0
  1846 ;;		Unchanged: 0/0
  1847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1848 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1851 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1852 ;;Total ram usage:        8 bytes
  1853 ;; Hardware stack levels used: 1
  1854 ;; Hardware stack levels required when called: 6
  1855 ;; This function calls:
  1856 ;;		___lwdiv
  1857 ;; This function is called by:
  1858 ;;		_txb_init
  1859 ;; This function uses a non-reentrant model
  1860 ;;
  1861                           
  1862                           	psect	text9
  1863  001620                     __ptext9:
  1864                           	callstack 0
  1865  001620                     _srb_init:
  1866                           	callstack 23
  1867  001620                     
  1868                           ;safe_ring_buffer.c: 19: ctx->memory_pool = pool;
  1869  001620  0060  F19F  FFD9   	movff	srb_init@ctx,fsr2l
  1870  001626  0060  F1A3  FFDA   	movff	srb_init@ctx+1,fsr2h
  1871  00162C  0060  F1A7  FFDE   	movff	srb_init@pool,postinc2
  1872  001632  0060  F1AB  FFDD   	movff	srb_init@pool+1,postdec2
  1873  001638                     
  1874                           ;safe_ring_buffer.c: 20: ctx->element_size = element_size;
  1875  001638  0100               	movlb	0	; () banked
  1876  00163A  EE20 F002          	lfsr	2,2
  1877  00163E  5167               	movf	srb_init@ctx& (0+255),w,b
  1878  001640  26D9               	addwf	fsr2l,f,c
  1879  001642  5168               	movf	(srb_init@ctx+1)& (0+255),w,b
  1880  001644  22DA               	addwfc	fsr2h,f,c
  1881  001646  0060  F1B7  FFDE   	movff	srb_init@element_size,postinc2
  1882  00164C  0060  F1BB  FFDD   	movff	srb_init@element_size+1,postdec2
  1883  001652                     
  1884                           ; BSR set to: 0
  1885                           ;safe_ring_buffer.c: 21: ctx->max_elements = (pool_size / (element_size));
  1886  001652  C06B  F060         	movff	srb_init@pool_size,___lwdiv@dividend
  1887  001656  C06C  F061         	movff	srb_init@pool_size+1,___lwdiv@dividend+1
  1888  00165A  C06D  F062         	movff	srb_init@element_size,___lwdiv@divisor
  1889  00165E  C06E  F063         	movff	srb_init@element_size+1,___lwdiv@divisor+1
  1890  001662  ECDD  F00B         	call	___lwdiv	;wreg free
  1891  001666  0100               	movlb	0	; () banked
  1892  001668  EE20 F004          	lfsr	2,4
  1893  00166C  5167               	movf	srb_init@ctx& (0+255),w,b
  1894  00166E  26D9               	addwf	fsr2l,f,c
  1895  001670  5168               	movf	(srb_init@ctx+1)& (0+255),w,b
  1896  001672  22DA               	addwfc	fsr2h,f,c
  1897  001674  0060  F183  FFDE   	movff	?___lwdiv,postinc2
  1898  00167A  0060  F187  FFDD   	movff	?___lwdiv+1,postdec2
  1899  001680                     
  1900                           ; BSR set to: 0
  1901                           ;safe_ring_buffer.c: 22: ctx->rd_idx = 0;
  1902  001680  EE20 F006          	lfsr	2,6
  1903  001684  5167               	movf	srb_init@ctx& (0+255),w,b
  1904  001686  26D9               	addwf	fsr2l,f,c
  1905  001688  5168               	movf	(srb_init@ctx+1)& (0+255),w,b
  1906  00168A  22DA               	addwfc	fsr2h,f,c
  1907  00168C  0E00               	movlw	0
  1908  00168E  6EDE               	movwf	postinc2,c
  1909  001690  0E00               	movlw	0
  1910  001692  6EDD               	movwf	postdec2,c
  1911  001694                     
  1912                           ; BSR set to: 0
  1913                           ;safe_ring_buffer.c: 23: ctx->wr_idx = 0;
  1914  001694  EE20 F008          	lfsr	2,8
  1915  001698  5167               	movf	srb_init@ctx& (0+255),w,b
  1916  00169A  26D9               	addwf	fsr2l,f,c
  1917  00169C  5168               	movf	(srb_init@ctx+1)& (0+255),w,b
  1918  00169E  22DA               	addwfc	fsr2h,f,c
  1919  0016A0  0E00               	movlw	0
  1920  0016A2  6EDE               	movwf	postinc2,c
  1921  0016A4  0E00               	movlw	0
  1922  0016A6  6EDD               	movwf	postdec2,c
  1923  0016A8                     
  1924                           ; BSR set to: 0
  1925  0016A8  0012               	return		;funcret
  1926  0016AA                     __end_of_srb_init:
  1927                           	callstack 0
  1928                           
  1929 ;; *************** function _txb_heartbeat *****************
  1930 ;; Defined at:
  1931 ;;		line 31 in file "canlib/util/can_tx_buffer.c"
  1932 ;; Parameters:    Size  Location     Type
  1933 ;;		None
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;  msg_sent       11   22[BANK0 ] struct .
  1936 ;; Return value:  Size  Location     Type
  1937 ;;                  1    wreg      void 
  1938 ;; Registers used:
  1939 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  1940 ;; Tracked objects:
  1941 ;;		On entry : 0/0
  1942 ;;		On exit  : 0/0
  1943 ;;		Unchanged: 0/0
  1944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1946 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1948 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1949 ;;Total ram usage:       11 bytes
  1950 ;; Hardware stack levels used: 1
  1951 ;; Hardware stack levels required when called: 8
  1952 ;; This function calls:
  1953 ;;		_can_send
  1954 ;;		_can_send_rdy
  1955 ;;		_srb_is_empty
  1956 ;;		_srb_pop
  1957 ;; This function is called by:
  1958 ;;		_main
  1959 ;; This function uses a non-reentrant model
  1960 ;;
  1961                           
  1962                           	psect	text10
  1963  0016AA                     __ptext10:
  1964                           	callstack 0
  1965  0016AA                     _txb_heartbeat:
  1966                           	callstack 22
  1967  0016AA                     
  1968                           ;can_tx_buffer.c: 32: if (!srb_is_empty(&buf)) {
  1969  0016AA  0EDB               	movlw	low _buf
  1970  0016AC  0100               	movlb	0	; () banked
  1971  0016AE  6F60               	movwf	srb_is_empty@ctx& (0+255),b
  1972  0016B0  0E00               	movlw	high _buf
  1973  0016B2  6F61               	movwf	(srb_is_empty@ctx+1)& (0+255),b
  1974  0016B4  EC7E  F00D         	call	_srb_is_empty	;wreg free
  1975  0016B8  0900               	iorlw	0
  1976  0016BA  A4D8               	btfss	status,2,c
  1977  0016BC  EF62  F00B         	goto	u4281
  1978  0016C0  EF64  F00B         	goto	u4280
  1979  0016C4                     u4281:
  1980  0016C4  EF98  F00B         	goto	l898
  1981  0016C8                     u4280:
  1982  0016C8                     
  1983                           ;can_tx_buffer.c: 33: if ((*(ctx.can_tx_ready))()) {
  1984  0016C8  EE20  F0CF         	lfsr	2,_ctx+2
  1985  0016CC  D802               	call	u4298
  1986  0016CE  EF73  F00B         	goto	u4299
  1987  0016D2                     u4298:
  1988  0016D2  0005               	push	
  1989  0016D4  6EFA               	movwf	pclath,c
  1990  0016D6  50DE               	movf	postinc2,w,c
  1991  0016D8  6EFD               	movwf	tosl,c
  1992  0016DA  50DE               	movf	postinc2,w,c
  1993  0016DC  6EFE               	movwf	tosh,c
  1994  0016DE  50F8               	movf	tblptru,w,c
  1995  0016E0  6EFF               	movwf	tosu,c
  1996  0016E2  50FA               	movf	pclath,w,c
  1997  0016E4  0012               	return		;indir
  1998  0016E6                     u4299:
  1999  0016E6  0900               	iorlw	0
  2000  0016E8  B4D8               	btfsc	status,2,c
  2001  0016EA  EF79  F00B         	goto	u4301
  2002  0016EE  EF7B  F00B         	goto	u4300
  2003  0016F2                     u4301:
  2004  0016F2  EF98  F00B         	goto	l898
  2005  0016F6                     u4300:
  2006  0016F6                     
  2007                           ;can_tx_buffer.c: 34: can_msg_t msg_sent;;can_tx_buffer.c: 35: srb_pop(&buf, &msg_sent);
  2008  0016F6  0EDB               	movlw	low _buf
  2009  0016F8  0100               	movlb	0	; () banked
  2010  0016FA  6F6C               	movwf	srb_pop@ctx& (0+255),b
  2011  0016FC  0E00               	movlw	high _buf
  2012  0016FE  6F6D               	movwf	(srb_pop@ctx+1)& (0+255),b
  2013  001700  0E76               	movlw	low txb_heartbeat@msg_sent
  2014  001702  6F6E               	movwf	srb_pop@element& (0+255),b
  2015  001704  0E00               	movlw	high txb_heartbeat@msg_sent
  2016  001706  6F6F               	movwf	(srb_pop@element+1)& (0+255),b
  2017  001708  EC4E  F008         	call	_srb_pop	;wreg free
  2018  00170C                     
  2019                           ;can_tx_buffer.c: 36: (*(ctx.can_send_fp))(&msg_sent);
  2020  00170C  0E76               	movlw	low txb_heartbeat@msg_sent
  2021  00170E  0100               	movlb	0	; () banked
  2022  001710  6F6B               	movwf	can_send@message& (0+255),b
  2023  001712  0E00               	movlw	high txb_heartbeat@msg_sent
  2024  001714  6F6C               	movwf	(can_send@message+1)& (0+255),b
  2025  001716  D802               	call	u4318
  2026  001718  EF98  F00B         	goto	u4319
  2027  00171C                     u4318:
  2028  00171C  0005               	push	
  2029  00171E  6EFA               	movwf	pclath,c
  2030  001720  51CD               	movf	_ctx& (0+255),w,b
  2031  001722  6EFD               	movwf	tosl,c
  2032  001724  51CE               	movf	(_ctx+1)& (0+255),w,b
  2033  001726  6EFE               	movwf	tosh,c
  2034  001728  50F8               	movf	tblptru,w,c
  2035  00172A  6EFF               	movwf	tosu,c
  2036  00172C  50FA               	movf	pclath,w,c
  2037  00172E  0012               	return		;indir
  2038  001730                     u4319:
  2039  001730                     l898:
  2040  001730  0012               	return		;funcret
  2041  001732                     __end_of_txb_heartbeat:
  2042                           	callstack 0
  2043                           
  2044 ;; *************** function _srb_pop *****************
  2045 ;; Defined at:
  2046 ;;		line 58 in file "canlib/util/safe_ring_buffer.c"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;  ctx             2   12[BANK0 ] PTR struct .
  2049 ;;		 -> buf(10), 
  2050 ;;  element         2   14[BANK0 ] PTR void 
  2051 ;;		 -> txb_heartbeat@msg_sent(11), 
  2052 ;; Auto vars:     Size  Location     Type
  2053 ;;  offset          2   20[BANK0 ] unsigned int 
  2054 ;; Return value:  Size  Location     Type
  2055 ;;                  1    wreg      unsigned char 
  2056 ;; Registers used:
  2057 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2058 ;; Tracked objects:
  2059 ;;		On entry : 0/0
  2060 ;;		On exit  : 0/0
  2061 ;;		Unchanged: 0/0
  2062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2063 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2064 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2065 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2066 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2067 ;;Total ram usage:       10 bytes
  2068 ;; Hardware stack levels used: 1
  2069 ;; Hardware stack levels required when called: 7
  2070 ;; This function calls:
  2071 ;;		_get_offset_bytes
  2072 ;;		_memcpy
  2073 ;;		_srb_is_empty
  2074 ;; This function is called by:
  2075 ;;		_txb_heartbeat
  2076 ;; This function uses a non-reentrant model
  2077 ;;
  2078                           
  2079                           	psect	text11
  2080  00109C                     __ptext11:
  2081                           	callstack 0
  2082  00109C                     _srb_pop:
  2083                           	callstack 22
  2084  00109C                     
  2085                           ;safe_ring_buffer.c: 61: if (srb_is_empty(ctx)) {
  2086  00109C  C06C  F060         	movff	srb_pop@ctx,srb_is_empty@ctx
  2087  0010A0  C06D  F061         	movff	srb_pop@ctx+1,srb_is_empty@ctx+1
  2088  0010A4  EC7E  F00D         	call	_srb_is_empty	;wreg free
  2089  0010A8  0900               	iorlw	0
  2090  0010AA  B4D8               	btfsc	status,2,c
  2091  0010AC  EF5A  F008         	goto	u4071
  2092  0010B0  EF5C  F008         	goto	u4070
  2093  0010B4                     u4071:
  2094  0010B4  EF5E  F008         	goto	l5951
  2095  0010B8                     u4070:
  2096  0010B8  EFBF  F008         	goto	l930
  2097  0010BC                     l5951:
  2098                           
  2099                           ;safe_ring_buffer.c: 63: };safe_ring_buffer.c: 64: size_t offset = get_offset_bytes(ctx,
      +                           ctx->rd_idx);
  2100  0010BC  C06C  F066         	movff	srb_pop@ctx,get_offset_bytes@ctx
  2101  0010C0  C06D  F067         	movff	srb_pop@ctx+1,get_offset_bytes@ctx+1
  2102  0010C4  0100               	movlb	0	; () banked
  2103  0010C6  EE20 F006          	lfsr	2,6
  2104  0010CA  516C               	movf	srb_pop@ctx& (0+255),w,b
  2105  0010CC  26D9               	addwf	fsr2l,f,c
  2106  0010CE  516D               	movf	(srb_pop@ctx+1)& (0+255),w,b
  2107  0010D0  22DA               	addwfc	fsr2h,f,c
  2108  0010D2  006F FF78  F068    	movff	postinc2,get_offset_bytes@index
  2109  0010D8  006F FF74  F069    	movff	postdec2,get_offset_bytes@index+1
  2110  0010DE  EC18  F00C         	call	_get_offset_bytes	;wreg free
  2111  0010E2  C066  F074         	movff	?_get_offset_bytes,srb_pop@offset
  2112  0010E6  C067  F075         	movff	?_get_offset_bytes+1,srb_pop@offset+1
  2113  0010EA                     
  2114                           ;safe_ring_buffer.c: 65: memcpy(element, ((uint8_t *)ctx->memory_pool) + offset, ctx->el
      +                          ement_size);
  2115  0010EA  C06E  F060         	movff	srb_pop@element,memcpy@d1
  2116  0010EE  C06F  F061         	movff	srb_pop@element+1,memcpy@d1+1
  2117  0010F2  0060  F1B3  FFD9   	movff	srb_pop@ctx,fsr2l
  2118  0010F8  0060  F1B7  FFDA   	movff	srb_pop@ctx+1,fsr2h
  2119  0010FE  006F FF78  F070    	movff	postinc2,??_srb_pop
  2120  001104  006F FF74  F071    	movff	postdec2,??_srb_pop+1
  2121  00110A  0100               	movlb	0	; () banked
  2122  00110C  5174               	movf	srb_pop@offset& (0+255),w,b
  2123  00110E  2570               	addwf	??_srb_pop& (0+255),w,b
  2124  001110  6F62               	movwf	memcpy@s1& (0+255),b
  2125  001112  5175               	movf	(srb_pop@offset+1)& (0+255),w,b
  2126  001114  2171               	addwfc	(??_srb_pop+1)& (0+255),w,b
  2127  001116  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  2128  001118  EE20 F002          	lfsr	2,2
  2129  00111C  516C               	movf	srb_pop@ctx& (0+255),w,b
  2130  00111E  26D9               	addwf	fsr2l,f,c
  2131  001120  516D               	movf	(srb_pop@ctx+1)& (0+255),w,b
  2132  001122  22DA               	addwfc	fsr2h,f,c
  2133  001124  006F FF78  F064    	movff	postinc2,memcpy@n
  2134  00112A  006F FF74  F065    	movff	postdec2,memcpy@n+1
  2135  001130  EC47  F00C         	call	_memcpy	;wreg free
  2136  001134                     
  2137                           ;safe_ring_buffer.c: 66: if ( ++(ctx->rd_idx) >= ctx->max_elements) {
  2138  001134  0100               	movlb	0	; () banked
  2139  001136  EE20 F004          	lfsr	2,4
  2140  00113A  516C               	movf	srb_pop@ctx& (0+255),w,b
  2141  00113C  26D9               	addwf	fsr2l,f,c
  2142  00113E  516D               	movf	(srb_pop@ctx+1)& (0+255),w,b
  2143  001140  22DA               	addwfc	fsr2h,f,c
  2144  001142  EE10 F006          	lfsr	1,6
  2145  001146  516C               	movf	srb_pop@ctx& (0+255),w,b
  2146  001148  26E1               	addwf	fsr1l,f,c
  2147  00114A  516D               	movf	(srb_pop@ctx+1)& (0+255),w,b
  2148  00114C  22E2               	addwfc	fsr1h,f,c
  2149  00114E  2AE6               	incf	postinc1,f,c
  2150  001150  0E00               	movlw	0
  2151  001152  22E5               	addwfc	postdec1,f,c
  2152  001154  50DE               	movf	postinc2,w,c
  2153  001156  5CE6               	subwf	postinc1,w,c
  2154  001158  50DE               	movf	postinc2,w,c
  2155  00115A  58E6               	subwfb	postinc1,w,c
  2156  00115C  A0D8               	btfss	status,0,c
  2157  00115E  EFB3  F008         	goto	u4081
  2158  001162  EFB5  F008         	goto	u4080
  2159  001166                     u4081:
  2160  001166  EFBF  F008         	goto	l930
  2161  00116A                     u4080:
  2162  00116A                     
  2163                           ; BSR set to: 0
  2164                           ;safe_ring_buffer.c: 67: ctx->rd_idx = 0;
  2165  00116A  EE20 F006          	lfsr	2,6
  2166  00116E  516C               	movf	srb_pop@ctx& (0+255),w,b
  2167  001170  26D9               	addwf	fsr2l,f,c
  2168  001172  516D               	movf	(srb_pop@ctx+1)& (0+255),w,b
  2169  001174  22DA               	addwfc	fsr2h,f,c
  2170  001176  0E00               	movlw	0
  2171  001178  6EDE               	movwf	postinc2,c
  2172  00117A  0E00               	movlw	0
  2173  00117C  6EDD               	movwf	postdec2,c
  2174  00117E                     l930:
  2175  00117E  0012               	return		;funcret
  2176  001180                     __end_of_srb_pop:
  2177                           	callstack 0
  2178                           
  2179 ;; *************** function _srb_is_empty *****************
  2180 ;; Defined at:
  2181 ;;		line 49 in file "canlib/util/safe_ring_buffer.c"
  2182 ;; Parameters:    Size  Location     Type
  2183 ;;  ctx             2    0[BANK0 ] PTR const struct .
  2184 ;;		 -> buf(10), 
  2185 ;; Auto vars:     Size  Location     Type
  2186 ;;		None
  2187 ;; Return value:  Size  Location     Type
  2188 ;;                  1    wreg      unsigned char 
  2189 ;; Registers used:
  2190 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2191 ;; Tracked objects:
  2192 ;;		On entry : 0/0
  2193 ;;		On exit  : 0/0
  2194 ;;		Unchanged: 0/0
  2195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2196 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2198 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2199 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2200 ;;Total ram usage:        6 bytes
  2201 ;; Hardware stack levels used: 1
  2202 ;; Hardware stack levels required when called: 5
  2203 ;; This function calls:
  2204 ;;		Nothing
  2205 ;; This function is called by:
  2206 ;;		_txb_heartbeat
  2207 ;;		_srb_pop
  2208 ;;		_srb_peek
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           
  2212                           	psect	text12
  2213  001AFC                     __ptext12:
  2214                           	callstack 0
  2215  001AFC                     _srb_is_empty:
  2216                           	callstack 23
  2217  001AFC                     
  2218                           ;safe_ring_buffer.c: 51: if (ctx->wr_idx == ctx->rd_idx) {
  2219  001AFC  0100               	movlb	0	; () banked
  2220  001AFE  EE20 F006          	lfsr	2,6
  2221  001B02  5160               	movf	srb_is_empty@ctx& (0+255),w,b
  2222  001B04  26D9               	addwf	fsr2l,f,c
  2223  001B06  5161               	movf	(srb_is_empty@ctx+1)& (0+255),w,b
  2224  001B08  22DA               	addwfc	fsr2h,f,c
  2225  001B0A  EE10 F008          	lfsr	1,8
  2226  001B0E  5160               	movf	srb_is_empty@ctx& (0+255),w,b
  2227  001B10  26E1               	addwf	fsr1l,f,c
  2228  001B12  5161               	movf	(srb_is_empty@ctx+1)& (0+255),w,b
  2229  001B14  22E2               	addwfc	fsr1h,f,c
  2230  001B16  50DE               	movf	postinc2,w,c
  2231  001B18  18E6               	xorwf	postinc1,w,c
  2232  001B1A  E107               	bnz	u3801
  2233  001B1C  50DE               	movf	postinc2,w,c
  2234  001B1E  18E6               	xorwf	postinc1,w,c
  2235  001B20  A4D8               	btfss	status,2,c
  2236  001B22  EF95  F00D         	goto	u3801
  2237  001B26  EF97  F00D         	goto	u3800
  2238  001B2A                     u3801:
  2239  001B2A  EF9A  F00D         	goto	l5759
  2240  001B2E                     u3800:
  2241  001B2E                     
  2242                           ; BSR set to: 0
  2243                           ;safe_ring_buffer.c: 52: return 1;
  2244  001B2E  0E01               	movlw	1
  2245  001B30  EF9B  F00D         	goto	l925
  2246  001B34                     l5759:
  2247                           
  2248                           ; BSR set to: 0
  2249                           ;safe_ring_buffer.c: 54: return 0;
  2250  001B34  0E00               	movlw	0
  2251  001B36                     l925:
  2252                           
  2253                           ; BSR set to: 0
  2254  001B36  0012               	return		;funcret
  2255  001B38                     __end_of_srb_is_empty:
  2256                           	callstack 0
  2257                           
  2258 ;; *************** function _can_send_rdy *****************
  2259 ;; Defined at:
  2260 ;;		line 114 in file "canlib/pic18f26k83/pic18f26k83_can.c"
  2261 ;; Parameters:    Size  Location     Type
  2262 ;;		None
  2263 ;; Auto vars:     Size  Location     Type
  2264 ;;		None
  2265 ;; Return value:  Size  Location     Type
  2266 ;;                  1    wreg      unsigned char 
  2267 ;; Registers used:
  2268 ;;		wreg
  2269 ;; Tracked objects:
  2270 ;;		On entry : 0/0
  2271 ;;		On exit  : 0/0
  2272 ;;		Unchanged: 0/0
  2273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2278 ;;Total ram usage:        0 bytes
  2279 ;; Hardware stack levels used: 1
  2280 ;; Hardware stack levels required when called: 5
  2281 ;; This function calls:
  2282 ;;		Nothing
  2283 ;; This function is called by:
  2284 ;;		_main
  2285 ;;		_txb_heartbeat
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           
  2289                           	psect	text13
  2290  001D90                     __ptext13:
  2291                           	callstack 0
  2292  001D90                     _can_send_rdy:
  2293                           	callstack 24
  2294  001D90                     
  2295                           ;pic18f26k83_can.c: 115: return TXB0CONbits.TXREQ == 0;
  2296  001D90  0137               	movlb	55	; () banked
  2297  001D92  A7E0               	btfss	224,3,b	;volatile
  2298  001D94  EFCE  F00E         	goto	u2331
  2299  001D98  EFD1  F00E         	goto	u2330
  2300  001D9C                     u2331:
  2301  001D9C  0E01               	movlw	1
  2302  001D9E  EFD2  F00E         	goto	u2340
  2303  001DA2                     u2330:
  2304  001DA2  0E00               	movlw	0
  2305  001DA4                     u2340:
  2306  001DA4                     
  2307                           ; BSR set to: 55
  2308  001DA4  0012               	return		;funcret
  2309  001DA6                     __end_of_can_send_rdy:
  2310                           	callstack 0
  2311                           
  2312 ;; *************** function _can_send *****************
  2313 ;; Defined at:
  2314 ;;		line 85 in file "canlib/pic18f26k83/pic18f26k83_can.c"
  2315 ;; Parameters:    Size  Location     Type
  2316 ;;  message         2   11[BANK0 ] PTR const struct .
  2317 ;;		 -> txb_heartbeat@msg_sent(11), 
  2318 ;; Auto vars:     Size  Location     Type
  2319 ;;		None
  2320 ;; Return value:  Size  Location     Type
  2321 ;;                  1    wreg      void 
  2322 ;; Registers used:
  2323 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2324 ;; Tracked objects:
  2325 ;;		On entry : 0/0
  2326 ;;		On exit  : 0/0
  2327 ;;		Unchanged: 0/0
  2328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2329 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2331 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2332 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2333 ;;Total ram usage:        4 bytes
  2334 ;; Hardware stack levels used: 1
  2335 ;; Hardware stack levels required when called: 6
  2336 ;; This function calls:
  2337 ;;		_memcpy
  2338 ;; This function is called by:
  2339 ;;		_main
  2340 ;;		_txb_heartbeat
  2341 ;; This function uses a non-reentrant model
  2342 ;;
  2343                           
  2344                           	psect	text14
  2345  000D78                     __ptext14:
  2346                           	callstack 0
  2347  000D78                     _can_send:
  2348                           	callstack 23
  2349  000D78                     
  2350                           ;pic18f26k83_can.c: 87: if (TXB0CONbits.TXREQ != 0) {
  2351  000D78  0137               	movlb	55	; () banked
  2352  000D7A  A7E0               	btfss	224,3,b	;volatile
  2353  000D7C  EFC2  F006         	goto	u4031
  2354  000D80  EFC4  F006         	goto	u4030
  2355  000D84                     u4031:
  2356  000D84  EFC6  F006         	goto	l5919
  2357  000D88                     u4030:
  2358  000D88  EF44  F007         	goto	l782
  2359  000D8C                     l5919:
  2360                           
  2361                           ; BSR set to: 55
  2362                           ;pic18f26k83_can.c: 89: };pic18f26k83_can.c: 92: if(message->data_len > 8 || message->si
      +                          d > 0x7FF) {
  2363  000D8C  0100               	movlb	0	; () banked
  2364  000D8E  EE20 F002          	lfsr	2,2
  2365  000D92  516B               	movf	can_send@message& (0+255),w,b
  2366  000D94  26D9               	addwf	fsr2l,f,c
  2367  000D96  516C               	movf	(can_send@message+1)& (0+255),w,b
  2368  000D98  22DA               	addwfc	fsr2h,f,c
  2369  000D9A  0E09               	movlw	9
  2370  000D9C  60DF               	cpfslt	indf2,c
  2371  000D9E  EFD3  F006         	goto	u4041
  2372  000DA2  EFD5  F006         	goto	u4040
  2373  000DA6                     u4041:
  2374  000DA6  EF44  F007         	goto	l782
  2375  000DAA                     u4040:
  2376  000DAA                     
  2377                           ; BSR set to: 0
  2378  000DAA  0060  F1AF  FFD9   	movff	can_send@message,fsr2l
  2379  000DB0  0060  F1B3  FFDA   	movff	can_send@message+1,fsr2h
  2380  000DB6  52DE               	movf	postinc2,f,c
  2381  000DB8  0E08               	movlw	8
  2382  000DBA  5CDE               	subwf	postinc2,w,c
  2383  000DBC  A0D8               	btfss	status,0,c
  2384  000DBE  EFE3  F006         	goto	u4051
  2385  000DC2  EFE5  F006         	goto	u4050
  2386  000DC6                     u4051:
  2387  000DC6  EFE7  F006         	goto	l5923
  2388  000DCA                     u4050:
  2389  000DCA  EF44  F007         	goto	l782
  2390  000DCE                     l5923:
  2391                           
  2392                           ; BSR set to: 0
  2393                           ;pic18f26k83_can.c: 94: };pic18f26k83_can.c: 97: TXB0CONbits.TXPRI = 0;
  2394  000DCE  0EFC               	movlw	-4
  2395  000DD0  0137               	movlb	55	; () banked
  2396  000DD2  17E0               	andwf	224,f,b	;volatile
  2397  000DD4                     
  2398                           ; BSR set to: 55
  2399                           ;pic18f26k83_can.c: 98: TXB0SIDH = ((message->sid) >> 3);
  2400  000DD4  0060  F1AF  FFD9   	movff	can_send@message,fsr2l
  2401  000DDA  0060  F1B3  FFDA   	movff	can_send@message+1,fsr2h
  2402  000DE0  006F FF78  F06D    	movff	postinc2,??_can_send
  2403  000DE6  006F FF74  F06E    	movff	postdec2,??_can_send+1
  2404  000DEC  0100               	movlb	0	; () banked
  2405  000DEE  90D8               	bcf	status,0,c
  2406  000DF0  336E               	rrcf	(??_can_send+1)& (0+255),f,b
  2407  000DF2  336D               	rrcf	??_can_send& (0+255),f,b
  2408  000DF4  90D8               	bcf	status,0,c
  2409  000DF6  336E               	rrcf	(??_can_send+1)& (0+255),f,b
  2410  000DF8  336D               	rrcf	??_can_send& (0+255),f,b
  2411  000DFA  90D8               	bcf	status,0,c
  2412  000DFC  336E               	rrcf	(??_can_send+1)& (0+255),f,b
  2413  000DFE  336D               	rrcf	??_can_send& (0+255),f,b
  2414  000E00  516D               	movf	??_can_send& (0+255),w,b
  2415  000E02  0137               	movlb	55	; () banked
  2416  000E04  6FE1               	movwf	225,b	;volatile
  2417  000E06                     
  2418                           ; BSR set to: 55
  2419                           ;pic18f26k83_can.c: 99: TXB0SIDL = (((message->sid) & 0x7) << 5);
  2420  000E06  0060  F1AF  FFD9   	movff	can_send@message,fsr2l
  2421  000E0C  0060  F1B3  FFDA   	movff	can_send@message+1,fsr2h
  2422  000E12  50DF               	movf	indf2,w,c
  2423  000E14  0100               	movlb	0	; () banked
  2424  000E16  6F6D               	movwf	??_can_send& (0+255),b
  2425  000E18  0E07               	movlw	7
  2426  000E1A  176D               	andwf	??_can_send& (0+255),f,b
  2427  000E1C  0E05               	movlw	5
  2428  000E1E  6F6E               	movwf	(??_can_send+1)& (0+255),b
  2429  000E20                     u4065:
  2430  000E20  90D8               	bcf	status,0,c
  2431  000E22  376D               	rlcf	??_can_send& (0+255),f,b
  2432  000E24  2F6E               	decfsz	(??_can_send+1)& (0+255),f,b
  2433  000E26  EF10  F007         	goto	u4065
  2434  000E2A  516D               	movf	??_can_send& (0+255),w,b
  2435  000E2C  0137               	movlb	55	; () banked
  2436  000E2E  6FE2               	movwf	226,b	;volatile
  2437  000E30                     
  2438                           ; BSR set to: 55
  2439                           ;pic18f26k83_can.c: 102: TXB0DLCbits.TXRTR = 0;
  2440  000E30  9DE5               	bcf	229,6,b	;volatile
  2441  000E32                     
  2442                           ; BSR set to: 55
  2443                           ;pic18f26k83_can.c: 104: TXB0DLCbits.DLC = message->data_len;
  2444  000E32  0100               	movlb	0	; () banked
  2445  000E34  EE20 F002          	lfsr	2,2
  2446  000E38  516B               	movf	can_send@message& (0+255),w,b
  2447  000E3A  26D9               	addwf	fsr2l,f,c
  2448  000E3C  516C               	movf	(can_send@message+1)& (0+255),w,b
  2449  000E3E  22DA               	addwfc	fsr2h,f,c
  2450  000E40  50DF               	movf	indf2,w,c
  2451  000E42  6F6D               	movwf	??_can_send& (0+255),b
  2452  000E44  0137               	movlb	55	; () banked
  2453  000E46  51E5               	movf	229,w,b	;volatile
  2454  000E48  0100               	movlb	0	; () banked
  2455  000E4A  196D               	xorwf	??_can_send& (0+255),w,b
  2456  000E4C  0BF0               	andlw	-16
  2457  000E4E  196D               	xorwf	??_can_send& (0+255),w,b
  2458  000E50  0137               	movlb	55	; () banked
  2459  000E52  6FE5               	movwf	229,b	;volatile
  2460  000E54                     
  2461                           ; BSR set to: 55
  2462                           ;pic18f26k83_can.c: 108: memcpy((void*) &TXB0D0, message->data, message->data_len);
  2463  000E54  0EE6               	movlw	230
  2464  000E56  0100               	movlb	0	; () banked
  2465  000E58  6F60               	movwf	memcpy@d1& (0+255),b
  2466  000E5A  0E37               	movlw	55
  2467  000E5C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  2468  000E5E  0E03               	movlw	3
  2469  000E60  256B               	addwf	can_send@message& (0+255),w,b
  2470  000E62  6F62               	movwf	memcpy@s1& (0+255),b
  2471  000E64  0E00               	movlw	0
  2472  000E66  216C               	addwfc	(can_send@message+1)& (0+255),w,b
  2473  000E68  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  2474  000E6A  EE20 F002          	lfsr	2,2
  2475  000E6E  516B               	movf	can_send@message& (0+255),w,b
  2476  000E70  26D9               	addwf	fsr2l,f,c
  2477  000E72  516C               	movf	(can_send@message+1)& (0+255),w,b
  2478  000E74  22DA               	addwfc	fsr2h,f,c
  2479  000E76  50DF               	movf	indf2,w,c
  2480  000E78  6F6D               	movwf	??_can_send& (0+255),b
  2481  000E7A  516D               	movf	??_can_send& (0+255),w,b
  2482  000E7C  6F64               	movwf	memcpy@n& (0+255),b
  2483  000E7E  6B65               	clrf	(memcpy@n+1)& (0+255),b
  2484  000E80  EC47  F00C         	call	_memcpy	;wreg free
  2485  000E84                     
  2486                           ;pic18f26k83_can.c: 111: TXB0CONbits.TXREQ = 1;
  2487  000E84  0137               	movlb	55	; () banked
  2488  000E86  87E0               	bsf	224,3,b	;volatile
  2489  000E88                     l782:
  2490  000E88  0012               	return		;funcret
  2491  000E8A                     __end_of_can_send:
  2492                           	callstack 0
  2493                           
  2494 ;; *************** function _timer0_init *****************
  2495 ;; Defined at:
  2496 ;;		line 28 in file "timer.c"
  2497 ;; Parameters:    Size  Location     Type
  2498 ;;		None
  2499 ;; Auto vars:     Size  Location     Type
  2500 ;;		None
  2501 ;; Return value:  Size  Location     Type
  2502 ;;                  1    wreg      void 
  2503 ;; Registers used:
  2504 ;;		wreg, status,2
  2505 ;; Tracked objects:
  2506 ;;		On entry : 0/0
  2507 ;;		On exit  : 0/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2514 ;;Total ram usage:        0 bytes
  2515 ;; Hardware stack levels used: 1
  2516 ;; Hardware stack levels required when called: 5
  2517 ;; This function calls:
  2518 ;;		Nothing
  2519 ;; This function is called by:
  2520 ;;		_main
  2521 ;; This function uses a non-reentrant model
  2522 ;;
  2523                           
  2524                           	psect	text15
  2525  001D72                     __ptext15:
  2526                           	callstack 0
  2527  001D72                     _timer0_init:
  2528                           	callstack 25
  2529  001D72                     
  2530                           ;timer.c: 29: PIE3bits.TMR0IE = 1;
  2531  001D72  0139               	movlb	57	; () banked
  2532  001D74  8F93               	bsf	147,7,b	;volatile
  2533                           
  2534                           ;timer.c: 31: T0CON0bits.EN = 0;
  2535  001D76  9EB8               	bcf	184,7,c	;volatile
  2536                           
  2537                           ;timer.c: 32: T0CON0bits.MD16 = 0;
  2538  001D78  98B8               	bcf	184,4,c	;volatile
  2539  001D7A                     
  2540                           ; BSR set to: 57
  2541                           ;timer.c: 34: T0CON0bits.OUTPS = 0;
  2542  001D7A  0EF0               	movlw	-16
  2543  001D7C  16B8               	andwf	184,f,c	;volatile
  2544                           
  2545                           ;timer.c: 35: T0CON1bits.CKPS = 0;
  2546  001D7E  0EF0               	movlw	-16
  2547  001D80  16B9               	andwf	185,f,c	;volatile
  2548                           
  2549                           ;timer.c: 37: T0CON1bits.CS = 0x5;
  2550  001D82  50B9               	movf	185,w,c	;volatile
  2551  001D84  0B1F               	andlw	-225
  2552  001D86  09A0               	iorlw	160
  2553  001D88  6EB9               	movwf	185,c	;volatile
  2554  001D8A                     
  2555                           ; BSR set to: 57
  2556                           ;timer.c: 38: T0CON1bits.ASYNC = 0;
  2557  001D8A  98B9               	bcf	185,4,c	;volatile
  2558  001D8C                     
  2559                           ; BSR set to: 57
  2560                           ;timer.c: 41: T0CON0bits.EN = 1;
  2561  001D8C  8EB8               	bsf	184,7,c	;volatile
  2562  001D8E                     
  2563                           ; BSR set to: 57
  2564  001D8E  0012               	return		;funcret
  2565  001D90                     __end_of_timer0_init:
  2566                           	callstack 0
  2567                           
  2568 ;; *************** function _send_status_ok *****************
  2569 ;; Defined at:
  2570 ;;		line 203 in file "main.c"
  2571 ;; Parameters:    Size  Location     Type
  2572 ;;		None
  2573 ;; Auto vars:     Size  Location     Type
  2574 ;;  board_stat_m   11   24[BANK0 ] struct .
  2575 ;; Return value:  Size  Location     Type
  2576 ;;                  1    wreg      void 
  2577 ;; Registers used:
  2578 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2579 ;; Tracked objects:
  2580 ;;		On entry : 0/0
  2581 ;;		On exit  : 0/0
  2582 ;;		Unchanged: 0/0
  2583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2585 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2587 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2588 ;;Total ram usage:       11 bytes
  2589 ;; Hardware stack levels used: 1
  2590 ;; Hardware stack levels required when called: 9
  2591 ;; This function calls:
  2592 ;;		_build_board_stat_msg
  2593 ;;		_millis
  2594 ;;		_txb_enqueue
  2595 ;; This function is called by:
  2596 ;;		_main
  2597 ;; This function uses a non-reentrant model
  2598 ;;
  2599                           
  2600                           	psect	text16
  2601  001A3E                     __ptext16:
  2602                           	callstack 0
  2603  001A3E                     _send_status_ok:
  2604                           	callstack 21
  2605  001A3E                     
  2606                           ;main.c: 204: can_msg_t board_stat_msg;;main.c: 205: build_board_stat_msg(millis(), E_NO
      +                          MINAL, (0), 0, &board_stat_msg);
  2607  001A3E  ECF2  F00E         	call	_millis	;wreg free
  2608  001A42  C060  F066         	movff	?_millis,build_board_stat_msg@timestamp
  2609  001A46  C061  F067         	movff	?_millis+1,build_board_stat_msg@timestamp+1
  2610  001A4A  C062  F068         	movff	?_millis+2,build_board_stat_msg@timestamp+2
  2611  001A4E  C063  F069         	movff	?_millis+3,build_board_stat_msg@timestamp+3
  2612  001A52  0E00               	movlw	0
  2613  001A54  0100               	movlb	0	; () banked
  2614  001A56  6F6A               	movwf	build_board_stat_msg@error_code& (0+255),b
  2615  001A58  0E00               	movlw	0
  2616  001A5A  6F6B               	movwf	build_board_stat_msg@error_data& (0+255),b
  2617  001A5C  0E00               	movlw	0
  2618  001A5E  6F6C               	movwf	(build_board_stat_msg@error_data+1)& (0+255),b
  2619  001A60  0E00               	movlw	0
  2620  001A62  6F6D               	movwf	build_board_stat_msg@error_data_len& (0+255),b
  2621  001A64  0E78               	movlw	low send_status_ok@board_stat_msg
  2622  001A66  6F6E               	movwf	build_board_stat_msg@output& (0+255),b
  2623  001A68  0E00               	movlw	high send_status_ok@board_stat_msg
  2624  001A6A  6F6F               	movwf	(build_board_stat_msg@output+1)& (0+255),b
  2625  001A6C  ECCA  F007         	call	_build_board_stat_msg	;wreg free
  2626  001A70                     
  2627                           ;main.c: 208: txb_enqueue(&board_stat_msg);
  2628  001A70  0E78               	movlw	low send_status_ok@board_stat_msg
  2629  001A72  0100               	movlb	0	; () banked
  2630  001A74  6F76               	movwf	txb_enqueue@msg& (0+255),b
  2631  001A76  0E00               	movlw	high send_status_ok@board_stat_msg
  2632  001A78  6F77               	movwf	(txb_enqueue@msg+1)& (0+255),b
  2633  001A7A  ECD7  F00D         	call	_txb_enqueue	;wreg free
  2634  001A7E  0012               	return		;funcret
  2635  001A80                     __end_of_send_status_ok:
  2636                           	callstack 0
  2637                           
  2638 ;; *************** function _is_batt_voltage_critical *****************
  2639 ;; Defined at:
  2640 ;;		line 73 in file "error_checks.c"
  2641 ;; Parameters:    Size  Location     Type
  2642 ;;		None
  2643 ;; Auto vars:     Size  Location     Type
  2644 ;;		None
  2645 ;; Return value:  Size  Location     Type
  2646 ;;                  1    wreg      unsigned char 
  2647 ;; Registers used:
  2648 ;;		wreg, status,2
  2649 ;; Tracked objects:
  2650 ;;		On entry : 0/0
  2651 ;;		On exit  : 0/0
  2652 ;;		Unchanged: 0/0
  2653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2658 ;;Total ram usage:        0 bytes
  2659 ;; Hardware stack levels used: 1
  2660 ;; Hardware stack levels required when called: 5
  2661 ;; This function calls:
  2662 ;;		Nothing
  2663 ;; This function is called by:
  2664 ;;		_main
  2665 ;; This function uses a non-reentrant model
  2666 ;;
  2667                           
  2668                           	psect	text17
  2669  001E3A                     __ptext17:
  2670                           	callstack 0
  2671  001E3A                     _is_batt_voltage_critical:
  2672                           	callstack 25
  2673  001E3A                     
  2674                           ;error_checks.c: 74: return battery_voltage_critical;
  2675  001E3A  0100               	movlb	0	; () banked
  2676  001E3C  51D9               	movf	_battery_voltage_critical& (0+255),w,b
  2677  001E3E                     
  2678                           ; BSR set to: 0
  2679  001E3E  0012               	return		;funcret
  2680  001E40                     __end_of_is_batt_voltage_critical:
  2681                           	callstack 0
  2682                           
  2683 ;; *************** function _check_valve_pin_error *****************
  2684 ;; Defined at:
  2685 ;;		line 97 in file "error_checks.c"
  2686 ;; Parameters:    Size  Location     Type
  2687 ;;  req_state       1    wreg     enum E46
  2688 ;; Auto vars:     Size  Location     Type
  2689 ;;  req_state       1    0[COMRAM] enum E46
  2690 ;; Return value:  Size  Location     Type
  2691 ;;                  1    wreg      unsigned char 
  2692 ;; Registers used:
  2693 ;;		wreg
  2694 ;; Tracked objects:
  2695 ;;		On entry : 0/0
  2696 ;;		On exit  : 0/0
  2697 ;;		Unchanged: 0/0
  2698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2703 ;;Total ram usage:        0 bytes
  2704 ;; Hardware stack levels used: 1
  2705 ;; Hardware stack levels required when called: 5
  2706 ;; This function calls:
  2707 ;;		Nothing
  2708 ;; This function is called by:
  2709 ;;		_main
  2710 ;; This function uses a non-reentrant model
  2711 ;;
  2712                           
  2713                           	psect	text18
  2714  001E46                     __ptext18:
  2715                           	callstack 0
  2716  001E46                     _check_valve_pin_error:
  2717                           	callstack 25
  2718  001E46                     
  2719                           ;error_checks.c: 98: return 1;
  2720  001E46  0E01               	movlw	1
  2721  001E48  0012               	return		;funcret
  2722  001E4A                     __end_of_check_valve_pin_error:
  2723                           	callstack 0
  2724                           
  2725 ;; *************** function _check_bus_current_error *****************
  2726 ;; Defined at:
  2727 ;;		line 77 in file "error_checks.c"
  2728 ;; Parameters:    Size  Location     Type
  2729 ;;		None
  2730 ;; Auto vars:     Size  Location     Type
  2731 ;;  error_msg      11   34[BANK0 ] struct .
  2732 ;;  timestamp       4   24[BANK0 ] unsigned long 
  2733 ;;  curr_data       2   30[BANK0 ] unsigned char [2]
  2734 ;;  curr_draw_mA    2   32[BANK0 ] int 
  2735 ;;  sense_raw_mV    2   28[BANK0 ] unsigned int 
  2736 ;; Return value:  Size  Location     Type
  2737 ;;                  1    wreg      unsigned char 
  2738 ;; Registers used:
  2739 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2740 ;; Tracked objects:
  2741 ;;		On entry : 0/0
  2742 ;;		On exit  : 0/0
  2743 ;;		Unchanged: 0/0
  2744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2746 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2748 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2749 ;;Total ram usage:       21 bytes
  2750 ;; Hardware stack levels used: 1
  2751 ;; Hardware stack levels required when called: 9
  2752 ;; This function calls:
  2753 ;;		_ADCC_GetSingleConversion
  2754 ;;		___lwdiv
  2755 ;;		_build_board_stat_msg
  2756 ;;		_millis
  2757 ;;		_txb_enqueue
  2758 ;; This function is called by:
  2759 ;;		_main
  2760 ;; This function uses a non-reentrant model
  2761 ;;
  2762                           
  2763                           	psect	text19
  2764  0014BA                     __ptext19:
  2765                           	callstack 0
  2766  0014BA                     _check_bus_current_error:
  2767                           	callstack 21
  2768  0014BA                     
  2769                           ;error_checks.c: 78: adc_result_t sense_raw_mV = ADCC_GetSingleConversion(channel_VSENSE
      +                          );
  2770  0014BA  0E01               	movlw	1
  2771  0014BC  EC40  F00D         	call	_ADCC_GetSingleConversion
  2772  0014C0  C060  F07C         	movff	?_ADCC_GetSingleConversion,check_bus_current_error@sense_raw_mV
  2773  0014C4  C061  F07D         	movff	?_ADCC_GetSingleConversion+1,check_bus_current_error@sense_raw_mV+1
  2774                           
  2775                           ;error_checks.c: 79: int curr_draw_mA = (sense_raw_mV) / 20;
  2776  0014C8  C07C  F060         	movff	check_bus_current_error@sense_raw_mV,___lwdiv@dividend
  2777  0014CC  C07D  F061         	movff	check_bus_current_error@sense_raw_mV+1,___lwdiv@dividend+1
  2778  0014D0  0E00               	movlw	0
  2779  0014D2  0100               	movlb	0	; () banked
  2780  0014D4  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2781  0014D6  0E14               	movlw	20
  2782  0014D8  6F62               	movwf	___lwdiv@divisor& (0+255),b
  2783  0014DA  ECDD  F00B         	call	___lwdiv	;wreg free
  2784  0014DE  C060  F080         	movff	?___lwdiv,check_bus_current_error@curr_draw_mA
  2785  0014E2  C061  F081         	movff	?___lwdiv+1,check_bus_current_error@curr_draw_mA+1
  2786  0014E6                     
  2787                           ;error_checks.c: 81: if (curr_draw_mA > 300) {
  2788  0014E6  0100               	movlb	0	; () banked
  2789  0014E8  BF81               	btfsc	(check_bus_current_error@curr_draw_mA+1)& (0+255),7,b
  2790  0014EA  EF80  F00A         	goto	u4211
  2791  0014EE  0E2D               	movlw	45
  2792  0014F0  5D80               	subwf	check_bus_current_error@curr_draw_mA& (0+255),w,b
  2793  0014F2  0E01               	movlw	1
  2794  0014F4  5981               	subwfb	(check_bus_current_error@curr_draw_mA+1)& (0+255),w,b
  2795  0014F6  A0D8               	btfss	status,0,c
  2796  0014F8  EF80  F00A         	goto	u4211
  2797  0014FC  EF82  F00A         	goto	u4210
  2798  001500                     u4211:
  2799  001500  EFB5  F00A         	goto	l6283
  2800  001504                     u4210:
  2801  001504                     
  2802                           ; BSR set to: 0
  2803                           ;error_checks.c: 82: uint32_t timestamp = millis();
  2804  001504  ECF2  F00E         	call	_millis	;wreg free
  2805  001508  C060  F078         	movff	?_millis,check_bus_current_error@timestamp
  2806  00150C  C061  F079         	movff	?_millis+1,check_bus_current_error@timestamp+1
  2807  001510  C062  F07A         	movff	?_millis+2,check_bus_current_error@timestamp+2
  2808  001514  C063  F07B         	movff	?_millis+3,check_bus_current_error@timestamp+3
  2809  001518                     
  2810                           ;error_checks.c: 83: uint8_t curr_data[2] = {0};
  2811  001518  0E00               	movlw	0
  2812  00151A  0100               	movlb	0	; () banked
  2813  00151C  6F7F               	movwf	(check_bus_current_error@curr_data+1)& (0+255),b
  2814  00151E  0E00               	movlw	0
  2815  001520  6F7E               	movwf	check_bus_current_error@curr_data& (0+255),b
  2816  001522                     
  2817                           ; BSR set to: 0
  2818                           ;error_checks.c: 84: curr_data[0] = (curr_draw_mA >> 8) & 0xff;
  2819  001522  5181               	movf	(check_bus_current_error@curr_draw_mA+1)& (0+255),w,b
  2820  001524  6F7E               	movwf	check_bus_current_error@curr_data& (0+255),b
  2821  001526                     
  2822                           ; BSR set to: 0
  2823                           ;error_checks.c: 85: curr_data[1] = (curr_draw_mA >> 0) & 0xff;
  2824  001526  C080  F07F         	movff	check_bus_current_error@curr_draw_mA,check_bus_current_error@curr_data+1
  2825  00152A                     
  2826                           ; BSR set to: 0
  2827                           ;error_checks.c: 87: can_msg_t error_msg;;error_checks.c: 88: build_board_stat_msg(times
      +                          tamp, E_BUS_OVER_CURRENT, curr_data, 2, &error_msg);
  2828  00152A  C078  F066         	movff	check_bus_current_error@timestamp,build_board_stat_msg@timestamp
  2829  00152E  C079  F067         	movff	check_bus_current_error@timestamp+1,build_board_stat_msg@timestamp+1
  2830  001532  C07A  F068         	movff	check_bus_current_error@timestamp+2,build_board_stat_msg@timestamp+2
  2831  001536  C07B  F069         	movff	check_bus_current_error@timestamp+3,build_board_stat_msg@timestamp+3
  2832  00153A  0E01               	movlw	1
  2833  00153C  6F6A               	movwf	build_board_stat_msg@error_code& (0+255),b
  2834  00153E  0E7E               	movlw	low check_bus_current_error@curr_data
  2835  001540  6F6B               	movwf	build_board_stat_msg@error_data& (0+255),b
  2836  001542  0E00               	movlw	high check_bus_current_error@curr_data
  2837  001544  6F6C               	movwf	(build_board_stat_msg@error_data+1)& (0+255),b
  2838  001546  0E02               	movlw	2
  2839  001548  6F6D               	movwf	build_board_stat_msg@error_data_len& (0+255),b
  2840  00154A  0E82               	movlw	low check_bus_current_error@error_msg
  2841  00154C  6F6E               	movwf	build_board_stat_msg@output& (0+255),b
  2842  00154E  0E00               	movlw	high check_bus_current_error@error_msg
  2843  001550  6F6F               	movwf	(build_board_stat_msg@output+1)& (0+255),b
  2844  001552  ECCA  F007         	call	_build_board_stat_msg	;wreg free
  2845  001556                     
  2846                           ;error_checks.c: 89: txb_enqueue(&error_msg);
  2847  001556  0E82               	movlw	low check_bus_current_error@error_msg
  2848  001558  0100               	movlb	0	; () banked
  2849  00155A  6F76               	movwf	txb_enqueue@msg& (0+255),b
  2850  00155C  0E00               	movlw	high check_bus_current_error@error_msg
  2851  00155E  6F77               	movwf	(txb_enqueue@msg+1)& (0+255),b
  2852  001560  ECD7  F00D         	call	_txb_enqueue	;wreg free
  2853  001564                     
  2854                           ;error_checks.c: 90: return 0;
  2855  001564  0E00               	movlw	0
  2856  001566  EFB6  F00A         	goto	l869
  2857  00156A                     l6283:
  2858                           
  2859                           ; BSR set to: 0
  2860                           ;error_checks.c: 91: };error_checks.c: 94: return 1;
  2861  00156A  0E01               	movlw	1
  2862  00156C                     l869:
  2863  00156C  0012               	return		;funcret
  2864  00156E                     __end_of_check_bus_current_error:
  2865                           	callstack 0
  2866                           
  2867 ;; *************** function ___lwdiv *****************
  2868 ;; Defined at:
  2869 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  2870 ;; Parameters:    Size  Location     Type
  2871 ;;  dividend        2    0[BANK0 ] unsigned int 
  2872 ;;  divisor         2    2[BANK0 ] unsigned int 
  2873 ;; Auto vars:     Size  Location     Type
  2874 ;;  quotient        2    5[BANK0 ] unsigned int 
  2875 ;;  counter         1    4[BANK0 ] unsigned char 
  2876 ;; Return value:  Size  Location     Type
  2877 ;;                  2    0[BANK0 ] unsigned int 
  2878 ;; Registers used:
  2879 ;;		wreg, status,2, status,0
  2880 ;; Tracked objects:
  2881 ;;		On entry : 0/0
  2882 ;;		On exit  : 0/0
  2883 ;;		Unchanged: 0/0
  2884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2885 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2886 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2888 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2889 ;;Total ram usage:        7 bytes
  2890 ;; Hardware stack levels used: 1
  2891 ;; Hardware stack levels required when called: 5
  2892 ;; This function calls:
  2893 ;;		Nothing
  2894 ;; This function is called by:
  2895 ;;		_check_bus_current_error
  2896 ;;		_srb_init
  2897 ;; This function uses a non-reentrant model
  2898 ;;
  2899                           
  2900                           	psect	text20
  2901  0017BA                     __ptext20:
  2902                           	callstack 0
  2903  0017BA                     ___lwdiv:
  2904                           	callstack 23
  2905  0017BA  0E00               	movlw	0
  2906  0017BC  0100               	movlb	0	; () banked
  2907  0017BE  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
  2908  0017C0  0E00               	movlw	0
  2909  0017C2  6F65               	movwf	___lwdiv@quotient& (0+255),b
  2910  0017C4                     
  2911                           ; BSR set to: 0
  2912  0017C4  5162               	movf	___lwdiv@divisor& (0+255),w,b
  2913  0017C6  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  2914  0017C8  B4D8               	btfsc	status,2,c
  2915  0017CA  EFE9  F00B         	goto	u3891
  2916  0017CE  EFEB  F00B         	goto	u3890
  2917  0017D2                     u3891:
  2918  0017D2  EF13  F00C         	goto	l1463
  2919  0017D6                     u3890:
  2920  0017D6                     
  2921                           ; BSR set to: 0
  2922  0017D6  0E01               	movlw	1
  2923  0017D8  6F64               	movwf	___lwdiv@counter& (0+255),b
  2924  0017DA  EFF3  F00B         	goto	l5807
  2925  0017DE                     l5805:
  2926                           
  2927                           ; BSR set to: 0
  2928  0017DE  90D8               	bcf	status,0,c
  2929  0017E0  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
  2930  0017E2  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  2931  0017E4  2B64               	incf	___lwdiv@counter& (0+255),f,b
  2932  0017E6                     l5807:
  2933                           
  2934                           ; BSR set to: 0
  2935  0017E6  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  2936  0017E8  EFF8  F00B         	goto	u3901
  2937  0017EC  EFFA  F00B         	goto	u3900
  2938  0017F0                     u3901:
  2939  0017F0  EFEF  F00B         	goto	l5805
  2940  0017F4                     u3900:
  2941  0017F4                     l5809:
  2942                           
  2943                           ; BSR set to: 0
  2944  0017F4  90D8               	bcf	status,0,c
  2945  0017F6  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
  2946  0017F8  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  2947  0017FA                     
  2948                           ; BSR set to: 0
  2949  0017FA  5162               	movf	___lwdiv@divisor& (0+255),w,b
  2950  0017FC  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
  2951  0017FE  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  2952  001800  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  2953  001802  A0D8               	btfss	status,0,c
  2954  001804  EF06  F00C         	goto	u3911
  2955  001808  EF08  F00C         	goto	u3910
  2956  00180C                     u3911:
  2957  00180C  EF0D  F00C         	goto	l5817
  2958  001810                     u3910:
  2959  001810                     
  2960                           ; BSR set to: 0
  2961  001810  5162               	movf	___lwdiv@divisor& (0+255),w,b
  2962  001812  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
  2963  001814  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  2964  001816  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  2965  001818                     
  2966                           ; BSR set to: 0
  2967  001818  8165               	bsf	___lwdiv@quotient& (0+255),0,b
  2968  00181A                     l5817:
  2969                           
  2970                           ; BSR set to: 0
  2971  00181A  90D8               	bcf	status,0,c
  2972  00181C  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  2973  00181E  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
  2974  001820                     
  2975                           ; BSR set to: 0
  2976  001820  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
  2977  001822  EFFA  F00B         	goto	l5809
  2978  001826                     l1463:
  2979                           
  2980                           ; BSR set to: 0
  2981  001826  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
  2982  00182A  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2983  00182E                     
  2984                           ; BSR set to: 0
  2985  00182E  0012               	return		;funcret
  2986  001830                     __end_of___lwdiv:
  2987                           	callstack 0
  2988                           
  2989 ;; *************** function _check_battery_voltage_error *****************
  2990 ;; Defined at:
  2991 ;;		line 24 in file "error_checks.c"
  2992 ;; Parameters:    Size  Location     Type
  2993 ;;		None
  2994 ;; Auto vars:     Size  Location     Type
  2995 ;;  error_msg      11   52[BANK0 ] struct .
  2996 ;;  timestamp       4   41[BANK0 ] unsigned long 
  2997 ;;  batt_data       2   50[BANK0 ] unsigned char [2]
  2998 ;;  error_code      1   47[BANK0 ] enum E54
  2999 ;;  batt_msg       11   63[BANK0 ] struct .
  3000 ;;  batt_voltage    2   74[BANK0 ] unsigned int 
  3001 ;;  batt_raw        2   45[BANK0 ] unsigned int 
  3002 ;; Return value:  Size  Location     Type
  3003 ;;                  1    wreg      unsigned char 
  3004 ;; Registers used:
  3005 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3006 ;; Tracked objects:
  3007 ;;		On entry : 0/0
  3008 ;;		On exit  : 0/0
  3009 ;;		Unchanged: 0/0
  3010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3012 ;;      Locals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3014 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3015 ;;Total ram usage:       35 bytes
  3016 ;; Hardware stack levels used: 1
  3017 ;; Hardware stack levels required when called: 9
  3018 ;; This function calls:
  3019 ;;		_ADCC_GetSingleConversion
  3020 ;;		___ftmul
  3021 ;;		___fttol
  3022 ;;		___lwtoft
  3023 ;;		_build_analog_data_msg
  3024 ;;		_build_board_stat_msg
  3025 ;;		_millis
  3026 ;;		_txb_enqueue
  3027 ;; This function is called by:
  3028 ;;		_main
  3029 ;; This function uses a non-reentrant model
  3030 ;;
  3031                           
  3032                           	psect	text21
  3033  0006B8                     __ptext21:
  3034                           	callstack 0
  3035  0006B8                     _check_battery_voltage_error:
  3036                           	callstack 21
  3037  0006B8                     
  3038                           ;error_checks.c: 25: adc_result_t batt_raw = ADCC_GetSingleConversion(channel_VBAT);
  3039  0006B8  0E00               	movlw	0
  3040  0006BA  EC40  F00D         	call	_ADCC_GetSingleConversion
  3041  0006BE  C060  F08D         	movff	?_ADCC_GetSingleConversion,check_battery_voltage_error@batt_raw
  3042  0006C2  C061  F08E         	movff	?_ADCC_GetSingleConversion+1,check_battery_voltage_error@batt_raw+1
  3043  0006C6                     
  3044                           ;error_checks.c: 28: uint16_t batt_voltage_mV = (uint16_t)batt_raw;
  3045  0006C6  C08D  F0AA         	movff	check_battery_voltage_error@batt_raw,check_battery_voltage_error@batt_voltage_mV
  3046  0006CA  C08E  F0AB         	movff	check_battery_voltage_error@batt_raw+1,check_battery_voltage_error@batt_voltage_m
      +                          V+1
  3047                           
  3048                           ;error_checks.c: 32: batt_voltage_mV = batt_voltage_mV * 3.95;
  3049  0006CE  0ECD               	movlw	205
  3050  0006D0  0100               	movlb	0	; () banked
  3051  0006D2  6F6E               	movwf	___ftmul@f2& (0+255),b
  3052  0006D4  0E7C               	movlw	124
  3053  0006D6  6F6F               	movwf	(___ftmul@f2+1)& (0+255),b
  3054  0006D8  0E40               	movlw	64
  3055  0006DA  6F70               	movwf	(___ftmul@f2+2)& (0+255),b
  3056  0006DC  C0AA  F068         	movff	check_battery_voltage_error@batt_voltage_mV,___lwtoft@c
  3057  0006E0  C0AB  F069         	movff	check_battery_voltage_error@batt_voltage_mV+1,___lwtoft@c+1
  3058  0006E4  EC81  F00E         	call	___lwtoft	;wreg free
  3059  0006E8  C068  F06B         	movff	?___lwtoft,___ftmul@f1
  3060  0006EC  C069  F06C         	movff	?___lwtoft+1,___ftmul@f1+1
  3061  0006F0  C06A  F06D         	movff	?___lwtoft+2,___ftmul@f1+2
  3062  0006F4  EC98  F005         	call	___ftmul	;wreg free
  3063  0006F8  C06B  F07A         	movff	?___ftmul,___fttol@f1
  3064  0006FC  C06C  F07B         	movff	?___ftmul+1,___fttol@f1+1
  3065  000700  C06D  F07C         	movff	?___ftmul+2,___fttol@f1+2
  3066  000704  EC2B  F006         	call	___fttol	;wreg free
  3067  000708  C07A  F0AA         	movff	?___fttol,check_battery_voltage_error@batt_voltage_mV
  3068  00070C  C07B  F0AB         	movff	?___fttol+1,check_battery_voltage_error@batt_voltage_mV+1
  3069  000710                     
  3070                           ;error_checks.c: 34: if (batt_voltage_mV < 8000;error_checks.c: 35: || batt_voltage_mV >
      +                           9500) {
  3071  000710  0E40               	movlw	64
  3072  000712  0100               	movlb	0	; () banked
  3073  000714  5DAA               	subwf	check_battery_voltage_error@batt_voltage_mV& (0+255),w,b
  3074  000716  0E1F               	movlw	31
  3075  000718  59AB               	subwfb	(check_battery_voltage_error@batt_voltage_mV+1)& (0+255),w,b
  3076  00071A  A0D8               	btfss	status,0,c
  3077  00071C  EF92  F003         	goto	u4171
  3078  000720  EF94  F003         	goto	u4170
  3079  000724                     u4171:
  3080  000724  EF9F  F003         	goto	l6223
  3081  000728                     u4170:
  3082  000728                     
  3083                           ; BSR set to: 0
  3084  000728  0E1D               	movlw	29
  3085  00072A  5DAA               	subwf	check_battery_voltage_error@batt_voltage_mV& (0+255),w,b
  3086  00072C  0E25               	movlw	37
  3087  00072E  59AB               	subwfb	(check_battery_voltage_error@batt_voltage_mV+1)& (0+255),w,b
  3088  000730  A0D8               	btfss	status,0,c
  3089  000732  EF9D  F003         	goto	u4181
  3090  000736  EF9F  F003         	goto	u4180
  3091  00073A                     u4181:
  3092  00073A  EFFB  F003         	goto	l6253
  3093  00073E                     u4180:
  3094  00073E                     l6223:
  3095                           
  3096                           ; BSR set to: 0
  3097                           ;error_checks.c: 37: uint32_t timestamp = millis();
  3098  00073E  ECF2  F00E         	call	_millis	;wreg free
  3099  000742  C060  F089         	movff	?_millis,check_battery_voltage_error@timestamp
  3100  000746  C061  F08A         	movff	?_millis+1,check_battery_voltage_error@timestamp+1
  3101  00074A  C062  F08B         	movff	?_millis+2,check_battery_voltage_error@timestamp+2
  3102  00074E  C063  F08C         	movff	?_millis+3,check_battery_voltage_error@timestamp+3
  3103  000752                     
  3104                           ;error_checks.c: 38: uint8_t batt_data[2] = {0};
  3105  000752  0E00               	movlw	0
  3106  000754  0100               	movlb	0	; () banked
  3107  000756  6F93               	movwf	(check_battery_voltage_error@batt_data+1)& (0+255),b
  3108  000758  0E00               	movlw	0
  3109  00075A  6F92               	movwf	check_battery_voltage_error@batt_data& (0+255),b
  3110  00075C                     
  3111                           ; BSR set to: 0
  3112                           ;error_checks.c: 39: batt_data[0] = (batt_voltage_mV >> 8) & 0xff;
  3113  00075C  51AB               	movf	(check_battery_voltage_error@batt_voltage_mV+1)& (0+255),w,b
  3114  00075E  6F92               	movwf	check_battery_voltage_error@batt_data& (0+255),b
  3115  000760                     
  3116                           ; BSR set to: 0
  3117                           ;error_checks.c: 40: batt_data[1] = (batt_voltage_mV >> 0) & 0xff;
  3118  000760  C0AA  F093         	movff	check_battery_voltage_error@batt_voltage_mV,check_battery_voltage_error@batt_data
      +                          +1
  3119  000764                     
  3120                           ; BSR set to: 0
  3121                           ;error_checks.c: 41: enum BOARD_STATUS error_code = batt_voltage_mV < 8000;error_checks.
      +                          c: 42: ? E_BATT_UNDER_VOLTAGE;error_checks.c: 43: : E_BATT_OVER_VOLTAGE;
  3122  000764  0E40               	movlw	64
  3123  000766  5DAA               	subwf	check_battery_voltage_error@batt_voltage_mV& (0+255),w,b
  3124  000768  0E1F               	movlw	31
  3125  00076A  59AB               	subwfb	(check_battery_voltage_error@batt_voltage_mV+1)& (0+255),w,b
  3126  00076C  A0D8               	btfss	status,0,c
  3127  00076E  EFBB  F003         	goto	u4191
  3128  000772  EFBD  F003         	goto	u4190
  3129  000776                     u4191:
  3130  000776  EFC3  F003         	goto	l6235
  3131  00077A                     u4190:
  3132  00077A                     
  3133                           ; BSR set to: 0
  3134  00077A  0E00               	movlw	0
  3135  00077C  6F91               	movwf	(_check_battery_voltage_error$2260+1)& (0+255),b
  3136  00077E  0E05               	movlw	5
  3137  000780  6F90               	movwf	_check_battery_voltage_error$2260& (0+255),b
  3138  000782  EFC7  F003         	goto	l6237
  3139  000786                     l6235:
  3140                           
  3141                           ; BSR set to: 0
  3142  000786  0E00               	movlw	0
  3143  000788  6F91               	movwf	(_check_battery_voltage_error$2260+1)& (0+255),b
  3144  00078A  0E04               	movlw	4
  3145  00078C  6F90               	movwf	_check_battery_voltage_error$2260& (0+255),b
  3146  00078E                     l6237:
  3147                           
  3148                           ; BSR set to: 0
  3149  00078E  C090  F08F         	movff	_check_battery_voltage_error$2260,check_battery_voltage_error@error_code
  3150  000792                     
  3151                           ; BSR set to: 0
  3152                           ;error_checks.c: 45: can_msg_t error_msg;;error_checks.c: 46: build_board_stat_msg(times
      +                          tamp, error_code, batt_data, 2, &error_msg);
  3153  000792  C089  F066         	movff	check_battery_voltage_error@timestamp,build_board_stat_msg@timestamp
  3154  000796  C08A  F067         	movff	check_battery_voltage_error@timestamp+1,build_board_stat_msg@timestamp+1
  3155  00079A  C08B  F068         	movff	check_battery_voltage_error@timestamp+2,build_board_stat_msg@timestamp+2
  3156  00079E  C08C  F069         	movff	check_battery_voltage_error@timestamp+3,build_board_stat_msg@timestamp+3
  3157  0007A2  C08F  F06A         	movff	check_battery_voltage_error@error_code,build_board_stat_msg@error_code
  3158  0007A6  0E92               	movlw	low check_battery_voltage_error@batt_data
  3159  0007A8  6F6B               	movwf	build_board_stat_msg@error_data& (0+255),b
  3160  0007AA  0E00               	movlw	high check_battery_voltage_error@batt_data
  3161  0007AC  6F6C               	movwf	(build_board_stat_msg@error_data+1)& (0+255),b
  3162  0007AE  0E02               	movlw	2
  3163  0007B0  6F6D               	movwf	build_board_stat_msg@error_data_len& (0+255),b
  3164  0007B2  0E94               	movlw	low check_battery_voltage_error@error_msg
  3165  0007B4  6F6E               	movwf	build_board_stat_msg@output& (0+255),b
  3166  0007B6  0E00               	movlw	high check_battery_voltage_error@error_msg
  3167  0007B8  6F6F               	movwf	(build_board_stat_msg@output+1)& (0+255),b
  3168  0007BA  ECCA  F007         	call	_build_board_stat_msg	;wreg free
  3169  0007BE                     
  3170                           ;error_checks.c: 47: txb_enqueue(&error_msg);
  3171  0007BE  0E94               	movlw	low check_battery_voltage_error@error_msg
  3172  0007C0  0100               	movlb	0	; () banked
  3173  0007C2  6F76               	movwf	txb_enqueue@msg& (0+255),b
  3174  0007C4  0E00               	movlw	high check_battery_voltage_error@error_msg
  3175  0007C6  6F77               	movwf	(txb_enqueue@msg+1)& (0+255),b
  3176  0007C8  ECD7  F00D         	call	_txb_enqueue	;wreg free
  3177  0007CC                     
  3178                           ;error_checks.c: 50: if (batt_voltage_mV < 7500) {
  3179  0007CC  0E4C               	movlw	76
  3180  0007CE  0100               	movlb	0	; () banked
  3181  0007D0  5DAA               	subwf	check_battery_voltage_error@batt_voltage_mV& (0+255),w,b
  3182  0007D2  0E1D               	movlw	29
  3183  0007D4  59AB               	subwfb	(check_battery_voltage_error@batt_voltage_mV+1)& (0+255),w,b
  3184  0007D6  B0D8               	btfsc	status,0,c
  3185  0007D8  EFF0  F003         	goto	u4201
  3186  0007DC  EFF2  F003         	goto	u4200
  3187  0007E0                     u4201:
  3188  0007E0  EFF6  F003         	goto	l6247
  3189  0007E4                     u4200:
  3190  0007E4                     
  3191                           ; BSR set to: 0
  3192                           ;error_checks.c: 52: battery_voltage_critical = 1;
  3193  0007E4  0E01               	movlw	1
  3194  0007E6  6FD9               	movwf	_battery_voltage_critical& (0+255),b
  3195                           
  3196                           ;error_checks.c: 53: } else {
  3197  0007E8  EFF8  F003         	goto	l6249
  3198  0007EC                     l6247:
  3199                           
  3200                           ; BSR set to: 0
  3201                           ;error_checks.c: 55: battery_voltage_critical = 0;
  3202  0007EC  0E00               	movlw	0
  3203  0007EE  6FD9               	movwf	_battery_voltage_critical& (0+255),b
  3204  0007F0                     l6249:
  3205                           
  3206                           ; BSR set to: 0
  3207                           ;error_checks.c: 56: };error_checks.c: 59: return 0;
  3208  0007F0  0E00               	movlw	0
  3209  0007F2  EF1D  F004         	goto	l860
  3210  0007F6                     l6253:
  3211                           
  3212                           ; BSR set to: 0
  3213                           ;error_checks.c: 60: };error_checks.c: 64: can_msg_t batt_msg;;error_checks.c: 65: build
      +                          _analog_data_msg(millis(), SENSOR_VENT_BATT, batt_voltage_mV, &batt_msg);
  3214  0007F6  ECF2  F00E         	call	_millis	;wreg free
  3215  0007FA  C060  F064         	movff	?_millis,build_analog_data_msg@timestamp
  3216  0007FE  C061  F065         	movff	?_millis+1,build_analog_data_msg@timestamp+1
  3217  000802  C062  F066         	movff	?_millis+2,build_analog_data_msg@timestamp+2
  3218  000806  C063  F067         	movff	?_millis+3,build_analog_data_msg@timestamp+3
  3219  00080A  0E05               	movlw	5
  3220  00080C  0100               	movlb	0	; () banked
  3221  00080E  6F68               	movwf	build_analog_data_msg@sensor_id& (0+255),b
  3222  000810  C0AA  F069         	movff	check_battery_voltage_error@batt_voltage_mV,build_analog_data_msg@sensor_data
  3223  000814  C0AB  F06A         	movff	check_battery_voltage_error@batt_voltage_mV+1,build_analog_data_msg@sensor_data+1
  3224  000818  0E9F               	movlw	low check_battery_voltage_error@batt_msg
  3225  00081A  6F6B               	movwf	build_analog_data_msg@output& (0+255),b
  3226  00081C  0E00               	movlw	high check_battery_voltage_error@batt_msg
  3227  00081E  6F6C               	movwf	(build_analog_data_msg@output+1)& (0+255),b
  3228  000820  EC99  F00B         	call	_build_analog_data_msg	;wreg free
  3229  000824                     
  3230                           ;error_checks.c: 66: txb_enqueue(&batt_msg);
  3231  000824  0E9F               	movlw	low check_battery_voltage_error@batt_msg
  3232  000826  0100               	movlb	0	; () banked
  3233  000828  6F76               	movwf	txb_enqueue@msg& (0+255),b
  3234  00082A  0E00               	movlw	high check_battery_voltage_error@batt_msg
  3235  00082C  6F77               	movwf	(txb_enqueue@msg+1)& (0+255),b
  3236  00082E  ECD7  F00D         	call	_txb_enqueue	;wreg free
  3237  000832                     
  3238                           ;error_checks.c: 69: battery_voltage_critical = 0;
  3239  000832  0E00               	movlw	0
  3240  000834  0100               	movlb	0	; () banked
  3241  000836  6FD9               	movwf	_battery_voltage_critical& (0+255),b
  3242  000838                     
  3243                           ; BSR set to: 0
  3244                           ;error_checks.c: 70: return 1;
  3245  000838  0E01               	movlw	1
  3246  00083A                     l860:
  3247                           
  3248                           ; BSR set to: 0
  3249  00083A  0012               	return		;funcret
  3250  00083C                     __end_of_check_battery_voltage_error:
  3251                           	callstack 0
  3252                           
  3253 ;; *************** function _txb_enqueue *****************
  3254 ;; Defined at:
  3255 ;;		line 23 in file "canlib/util/can_tx_buffer.c"
  3256 ;; Parameters:    Size  Location     Type
  3257 ;;  msg             2   22[BANK0 ] PTR const struct .
  3258 ;;		 -> vent_send_status@stat_msg(11), check_bus_current_error@error_msg(11), check_battery_voltage_error@batt_msg(11), 
      +check_battery_voltage_error@error_msg(11), 
  3259 ;;		 -> send_status_ok@board_stat_msg(11), main@error_msg(11), 
  3260 ;; Auto vars:     Size  Location     Type
  3261 ;;		None
  3262 ;; Return value:  Size  Location     Type
  3263 ;;                  1    wreg      unsigned char 
  3264 ;; Registers used:
  3265 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3266 ;; Tracked objects:
  3267 ;;		On entry : 0/0
  3268 ;;		On exit  : 0/0
  3269 ;;		Unchanged: 0/0
  3270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3271 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3274 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3275 ;;Total ram usage:        2 bytes
  3276 ;; Hardware stack levels used: 1
  3277 ;; Hardware stack levels required when called: 8
  3278 ;; This function calls:
  3279 ;;		_srb_is_full
  3280 ;;		_srb_push
  3281 ;; This function is called by:
  3282 ;;		_main
  3283 ;;		_send_status_ok
  3284 ;;		_check_battery_voltage_error
  3285 ;;		_check_bus_current_error
  3286 ;;		_vent_send_status
  3287 ;; This function uses a non-reentrant model
  3288 ;;
  3289                           
  3290                           	psect	text22
  3291  001BAE                     __ptext22:
  3292                           	callstack 0
  3293  001BAE                     _txb_enqueue:
  3294                           	callstack 21
  3295  001BAE                     
  3296                           ;can_tx_buffer.c: 24: if (srb_is_full(&buf)) {
  3297  001BAE  0EDB               	movlw	low _buf
  3298  001BB0  0100               	movlb	0	; () banked
  3299  001BB2  6F60               	movwf	srb_is_full@ctx& (0+255),b
  3300  001BB4  0E00               	movlw	high _buf
  3301  001BB6  6F61               	movwf	(srb_is_full@ctx+1)& (0+255),b
  3302  001BB8  ECB7  F00A         	call	_srb_is_full	;wreg free
  3303  001BBC  0900               	iorlw	0
  3304  001BBE  B4D8               	btfsc	status,2,c
  3305  001BC0  EFE4  F00D         	goto	u3981
  3306  001BC4  EFE6  F00D         	goto	u3980
  3307  001BC8                     u3981:
  3308  001BC8  EFE8  F00D         	goto	l5871
  3309  001BCC                     u3980:
  3310  001BCC  EFF3  F00D         	goto	l893
  3311  001BD0                     l5871:
  3312                           
  3313                           ;can_tx_buffer.c: 26: };can_tx_buffer.c: 27: srb_push(&buf, msg);
  3314  001BD0  0EDB               	movlw	low _buf
  3315  001BD2  0100               	movlb	0	; () banked
  3316  001BD4  6F6C               	movwf	srb_push@ctx& (0+255),b
  3317  001BD6  0E00               	movlw	high _buf
  3318  001BD8  6F6D               	movwf	(srb_push@ctx+1)& (0+255),b
  3319  001BDA  C076  F06E         	movff	txb_enqueue@msg,srb_push@element
  3320  001BDE  C077  F06F         	movff	txb_enqueue@msg+1,srb_push@element+1
  3321  001BE2  ECC0  F008         	call	_srb_push	;wreg free
  3322  001BE6                     l893:
  3323  001BE6  0012               	return		;funcret
  3324  001BE8                     __end_of_txb_enqueue:
  3325                           	callstack 0
  3326                           
  3327 ;; *************** function _srb_push *****************
  3328 ;; Defined at:
  3329 ;;		line 26 in file "canlib/util/safe_ring_buffer.c"
  3330 ;; Parameters:    Size  Location     Type
  3331 ;;  ctx             2   12[BANK0 ] PTR struct .
  3332 ;;		 -> buf(10), 
  3333 ;;  element         2   14[BANK0 ] PTR const void 
  3334 ;;		 -> vent_send_status@stat_msg(11), check_bus_current_error@error_msg(11), check_battery_voltage_error@batt_msg(11), 
      +check_battery_voltage_error@error_msg(11), 
  3335 ;;		 -> send_status_ok@board_stat_msg(11), main@error_msg(11), 
  3336 ;; Auto vars:     Size  Location     Type
  3337 ;;  offset          2   20[BANK0 ] unsigned int 
  3338 ;; Return value:  Size  Location     Type
  3339 ;;                  1    wreg      unsigned char 
  3340 ;; Registers used:
  3341 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3342 ;; Tracked objects:
  3343 ;;		On entry : 0/0
  3344 ;;		On exit  : 0/0
  3345 ;;		Unchanged: 0/0
  3346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3347 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3348 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3349 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3350 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3351 ;;Total ram usage:       10 bytes
  3352 ;; Hardware stack levels used: 1
  3353 ;; Hardware stack levels required when called: 7
  3354 ;; This function calls:
  3355 ;;		_get_offset_bytes
  3356 ;;		_memcpy
  3357 ;;		_srb_is_full
  3358 ;; This function is called by:
  3359 ;;		_txb_enqueue
  3360 ;; This function uses a non-reentrant model
  3361 ;;
  3362                           
  3363                           	psect	text23
  3364  001180                     __ptext23:
  3365                           	callstack 0
  3366  001180                     _srb_push:
  3367                           	callstack 21
  3368  001180                     
  3369                           ;safe_ring_buffer.c: 29: if (srb_is_full(ctx)) {
  3370  001180  C06C  F060         	movff	srb_push@ctx,srb_is_full@ctx
  3371  001184  C06D  F061         	movff	srb_push@ctx+1,srb_is_full@ctx+1
  3372  001188  ECB7  F00A         	call	_srb_is_full	;wreg free
  3373  00118C  0900               	iorlw	0
  3374  00118E  B4D8               	btfsc	status,2,c
  3375  001190  EFCC  F008         	goto	u3781
  3376  001194  EFCE  F008         	goto	u3780
  3377  001198                     u3781:
  3378  001198  EFD0  F008         	goto	l5741
  3379  00119C                     u3780:
  3380  00119C  EF31  F009         	goto	l913
  3381  0011A0                     l5741:
  3382                           
  3383                           ;safe_ring_buffer.c: 31: };safe_ring_buffer.c: 32: size_t offset = get_offset_bytes(ctx,
      +                           ctx->wr_idx);
  3384  0011A0  C06C  F066         	movff	srb_push@ctx,get_offset_bytes@ctx
  3385  0011A4  C06D  F067         	movff	srb_push@ctx+1,get_offset_bytes@ctx+1
  3386  0011A8  0100               	movlb	0	; () banked
  3387  0011AA  EE20 F008          	lfsr	2,8
  3388  0011AE  516C               	movf	srb_push@ctx& (0+255),w,b
  3389  0011B0  26D9               	addwf	fsr2l,f,c
  3390  0011B2  516D               	movf	(srb_push@ctx+1)& (0+255),w,b
  3391  0011B4  22DA               	addwfc	fsr2h,f,c
  3392  0011B6  006F FF78  F068    	movff	postinc2,get_offset_bytes@index
  3393  0011BC  006F FF74  F069    	movff	postdec2,get_offset_bytes@index+1
  3394  0011C2  EC18  F00C         	call	_get_offset_bytes	;wreg free
  3395  0011C6  C066  F074         	movff	?_get_offset_bytes,srb_push@offset
  3396  0011CA  C067  F075         	movff	?_get_offset_bytes+1,srb_push@offset+1
  3397  0011CE                     
  3398                           ;safe_ring_buffer.c: 33: memcpy(((uint8_t *) ctx->memory_pool) + offset, element, ctx->e
      +                          lement_size);
  3399  0011CE  0060  F1B3  FFD9   	movff	srb_push@ctx,fsr2l
  3400  0011D4  0060  F1B7  FFDA   	movff	srb_push@ctx+1,fsr2h
  3401  0011DA  006F FF78  F070    	movff	postinc2,??_srb_push
  3402  0011E0  006F FF74  F071    	movff	postdec2,??_srb_push+1
  3403  0011E6  0100               	movlb	0	; () banked
  3404  0011E8  5174               	movf	srb_push@offset& (0+255),w,b
  3405  0011EA  2570               	addwf	??_srb_push& (0+255),w,b
  3406  0011EC  6F60               	movwf	memcpy@d1& (0+255),b
  3407  0011EE  5175               	movf	(srb_push@offset+1)& (0+255),w,b
  3408  0011F0  2171               	addwfc	(??_srb_push+1)& (0+255),w,b
  3409  0011F2  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  3410  0011F4  C06E  F062         	movff	srb_push@element,memcpy@s1
  3411  0011F8  C06F  F063         	movff	srb_push@element+1,memcpy@s1+1
  3412  0011FC  EE20 F002          	lfsr	2,2
  3413  001200  516C               	movf	srb_push@ctx& (0+255),w,b
  3414  001202  26D9               	addwf	fsr2l,f,c
  3415  001204  516D               	movf	(srb_push@ctx+1)& (0+255),w,b
  3416  001206  22DA               	addwfc	fsr2h,f,c
  3417  001208  006F FF78  F064    	movff	postinc2,memcpy@n
  3418  00120E  006F FF74  F065    	movff	postdec2,memcpy@n+1
  3419  001214  EC47  F00C         	call	_memcpy	;wreg free
  3420  001218                     
  3421                           ;safe_ring_buffer.c: 34: if ( ++(ctx->wr_idx) >= ctx->max_elements) {
  3422  001218  0100               	movlb	0	; () banked
  3423  00121A  EE20 F004          	lfsr	2,4
  3424  00121E  516C               	movf	srb_push@ctx& (0+255),w,b
  3425  001220  26D9               	addwf	fsr2l,f,c
  3426  001222  516D               	movf	(srb_push@ctx+1)& (0+255),w,b
  3427  001224  22DA               	addwfc	fsr2h,f,c
  3428  001226  EE10 F008          	lfsr	1,8
  3429  00122A  516C               	movf	srb_push@ctx& (0+255),w,b
  3430  00122C  26E1               	addwf	fsr1l,f,c
  3431  00122E  516D               	movf	(srb_push@ctx+1)& (0+255),w,b
  3432  001230  22E2               	addwfc	fsr1h,f,c
  3433  001232  2AE6               	incf	postinc1,f,c
  3434  001234  0E00               	movlw	0
  3435  001236  22E5               	addwfc	postdec1,f,c
  3436  001238  50DE               	movf	postinc2,w,c
  3437  00123A  5CE6               	subwf	postinc1,w,c
  3438  00123C  50DE               	movf	postinc2,w,c
  3439  00123E  58E6               	subwfb	postinc1,w,c
  3440  001240  A0D8               	btfss	status,0,c
  3441  001242  EF25  F009         	goto	u3791
  3442  001246  EF27  F009         	goto	u3790
  3443  00124A                     u3791:
  3444  00124A  EF31  F009         	goto	l913
  3445  00124E                     u3790:
  3446  00124E                     
  3447                           ; BSR set to: 0
  3448                           ;safe_ring_buffer.c: 35: ctx->wr_idx = 0;
  3449  00124E  EE20 F008          	lfsr	2,8
  3450  001252  516C               	movf	srb_push@ctx& (0+255),w,b
  3451  001254  26D9               	addwf	fsr2l,f,c
  3452  001256  516D               	movf	(srb_push@ctx+1)& (0+255),w,b
  3453  001258  22DA               	addwfc	fsr2h,f,c
  3454  00125A  0E00               	movlw	0
  3455  00125C  6EDE               	movwf	postinc2,c
  3456  00125E  0E00               	movlw	0
  3457  001260  6EDD               	movwf	postdec2,c
  3458  001262                     l913:
  3459  001262  0012               	return		;funcret
  3460  001264                     __end_of_srb_push:
  3461                           	callstack 0
  3462                           
  3463 ;; *************** function _srb_is_full *****************
  3464 ;; Defined at:
  3465 ;;		line 40 in file "canlib/util/safe_ring_buffer.c"
  3466 ;; Parameters:    Size  Location     Type
  3467 ;;  ctx             2    0[BANK0 ] PTR const struct .
  3468 ;;		 -> buf(10), 
  3469 ;; Auto vars:     Size  Location     Type
  3470 ;;		None
  3471 ;; Return value:  Size  Location     Type
  3472 ;;                  1    wreg      unsigned char 
  3473 ;; Registers used:
  3474 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3475 ;; Tracked objects:
  3476 ;;		On entry : 0/0
  3477 ;;		On exit  : 0/0
  3478 ;;		Unchanged: 0/0
  3479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3480 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3482 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3483 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3484 ;;Total ram usage:        6 bytes
  3485 ;; Hardware stack levels used: 1
  3486 ;; Hardware stack levels required when called: 5
  3487 ;; This function calls:
  3488 ;;		Nothing
  3489 ;; This function is called by:
  3490 ;;		_txb_enqueue
  3491 ;;		_srb_push
  3492 ;; This function uses a non-reentrant model
  3493 ;;
  3494                           
  3495                           	psect	text24
  3496  00156E                     __ptext24:
  3497                           	callstack 0
  3498  00156E                     _srb_is_full:
  3499                           	callstack 22
  3500  00156E                     
  3501                           ;safe_ring_buffer.c: 42: if ((ctx->wr_idx + 1 == ctx->rd_idx) || (ctx->wr_idx + 1 == ctx
      +                          ->max_elements && ctx->rd_idx == 0)) {
  3502  00156E  0100               	movlb	0	; () banked
  3503  001570  EE20 F006          	lfsr	2,6
  3504  001574  5160               	movf	srb_is_full@ctx& (0+255),w,b
  3505  001576  26D9               	addwf	fsr2l,f,c
  3506  001578  5161               	movf	(srb_is_full@ctx+1)& (0+255),w,b
  3507  00157A  22DA               	addwfc	fsr2h,f,c
  3508  00157C  EE10 F008          	lfsr	1,8
  3509  001580  5160               	movf	srb_is_full@ctx& (0+255),w,b
  3510  001582  26E1               	addwf	fsr1l,f,c
  3511  001584  5161               	movf	(srb_is_full@ctx+1)& (0+255),w,b
  3512  001586  22E2               	addwfc	fsr1h,f,c
  3513  001588  006F FF98  F064    	movff	postinc1,??_srb_is_full+2
  3514  00158E  006F FF94  F065    	movff	postdec1,??_srb_is_full+3
  3515  001594  0E01               	movlw	1
  3516  001596  2764               	addwf	(??_srb_is_full+2)& (0+255),f,b
  3517  001598  0E00               	movlw	0
  3518  00159A  2365               	addwfc	(??_srb_is_full+3)& (0+255),f,b
  3519  00159C  50DE               	movf	postinc2,w,c
  3520  00159E  1964               	xorwf	(??_srb_is_full+2)& (0+255),w,b
  3521  0015A0  E109               	bnz	u3740
  3522  0015A2  50DE               	movf	postinc2,w,c
  3523  0015A4  1965               	xorwf	(??_srb_is_full+3)& (0+255),w,b
  3524  0015A6  B4D8               	btfsc	status,2,c
  3525  0015A8  EFD8  F00A         	goto	u3741
  3526  0015AC  EFDA  F00A         	goto	u3740
  3527  0015B0                     u3741:
  3528  0015B0  EF0B  F00B         	goto	l5713
  3529  0015B4                     u3740:
  3530  0015B4                     
  3531                           ; BSR set to: 0
  3532  0015B4  EE20 F004          	lfsr	2,4
  3533  0015B8  5160               	movf	srb_is_full@ctx& (0+255),w,b
  3534  0015BA  26D9               	addwf	fsr2l,f,c
  3535  0015BC  5161               	movf	(srb_is_full@ctx+1)& (0+255),w,b
  3536  0015BE  22DA               	addwfc	fsr2h,f,c
  3537  0015C0  EE10 F008          	lfsr	1,8
  3538  0015C4  5160               	movf	srb_is_full@ctx& (0+255),w,b
  3539  0015C6  26E1               	addwf	fsr1l,f,c
  3540  0015C8  5161               	movf	(srb_is_full@ctx+1)& (0+255),w,b
  3541  0015CA  22E2               	addwfc	fsr1h,f,c
  3542  0015CC  006F FF98  F064    	movff	postinc1,??_srb_is_full+2
  3543  0015D2  006F FF94  F065    	movff	postdec1,??_srb_is_full+3
  3544  0015D8  0E01               	movlw	1
  3545  0015DA  2764               	addwf	(??_srb_is_full+2)& (0+255),f,b
  3546  0015DC  0E00               	movlw	0
  3547  0015DE  2365               	addwfc	(??_srb_is_full+3)& (0+255),f,b
  3548  0015E0  50DE               	movf	postinc2,w,c
  3549  0015E2  1964               	xorwf	(??_srb_is_full+2)& (0+255),w,b
  3550  0015E4  E107               	bnz	u3751
  3551  0015E6  50DE               	movf	postinc2,w,c
  3552  0015E8  1965               	xorwf	(??_srb_is_full+3)& (0+255),w,b
  3553  0015EA  A4D8               	btfss	status,2,c
  3554  0015EC  EFFA  F00A         	goto	u3751
  3555  0015F0  EFFC  F00A         	goto	u3750
  3556  0015F4                     u3751:
  3557  0015F4  EF0E  F00B         	goto	l5719
  3558  0015F8                     u3750:
  3559  0015F8                     
  3560                           ; BSR set to: 0
  3561  0015F8  EE20 F006          	lfsr	2,6
  3562  0015FC  5160               	movf	srb_is_full@ctx& (0+255),w,b
  3563  0015FE  26D9               	addwf	fsr2l,f,c
  3564  001600  5161               	movf	(srb_is_full@ctx+1)& (0+255),w,b
  3565  001602  22DA               	addwfc	fsr2h,f,c
  3566  001604  50DE               	movf	postinc2,w,c
  3567  001606  10DE               	iorwf	postinc2,w,c
  3568  001608  A4D8               	btfss	status,2,c
  3569  00160A  EF09  F00B         	goto	u3761
  3570  00160E  EF0B  F00B         	goto	u3760
  3571  001612                     u3761:
  3572  001612  EF0E  F00B         	goto	l5719
  3573  001616                     u3760:
  3574  001616                     l5713:
  3575                           
  3576                           ; BSR set to: 0
  3577                           ;safe_ring_buffer.c: 43: return 1;
  3578  001616  0E01               	movlw	1
  3579  001618  EF0F  F00B         	goto	l920
  3580  00161C                     l5719:
  3581                           
  3582                           ; BSR set to: 0
  3583                           ;safe_ring_buffer.c: 45: return 0;
  3584  00161C  0E00               	movlw	0
  3585  00161E                     l920:
  3586                           
  3587                           ; BSR set to: 0
  3588  00161E  0012               	return		;funcret
  3589  001620                     __end_of_srb_is_full:
  3590                           	callstack 0
  3591                           
  3592 ;; *************** function _memcpy *****************
  3593 ;; Defined at:
  3594 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\memcpy.c"
  3595 ;; Parameters:    Size  Location     Type
  3596 ;;  d1              2    0[BANK0 ] PTR void 
  3597 ;;		 -> txb_heartbeat@msg_sent(11), can_handle_interrupt@rcvd_msg_2151(11), can_handle_interrupt@rcvd_msg(11), TXB0D0(1)
      +, 
  3598 ;;		 -> tx_pool(100), 
  3599 ;;  s1              2    2[BANK0 ] PTR const void 
  3600 ;;		 -> vent_send_status@stat_msg(11), txb_heartbeat@msg_sent(11), check_bus_current_error@error_msg(11), check_battery_
      +voltage_error@batt_msg(11), 
  3601 ;;		 -> check_battery_voltage_error@error_msg(11), RXB1D0(1), RXB0D0(1), send_status_ok@board_stat_msg(11), 
  3602 ;;		 -> main@error_msg(11), tx_pool(100), 
  3603 ;;  n               2    4[BANK0 ] unsigned int 
  3604 ;; Auto vars:     Size  Location     Type
  3605 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  3606 ;;		 -> vent_send_status@stat_msg(11), txb_heartbeat@msg_sent(11), check_bus_current_error@error_msg(11), check_battery_
      +voltage_error@batt_msg(11), 
  3607 ;;		 -> check_battery_voltage_error@error_msg(11), RXB1D0(1), RXB0D0(1), send_status_ok@board_stat_msg(11), 
  3608 ;;		 -> main@error_msg(11), tx_pool(100), 
  3609 ;;  d               2    7[BANK0 ] PTR unsigned char 
  3610 ;;		 -> txb_heartbeat@msg_sent(11), can_handle_interrupt@rcvd_msg_2151(11), can_handle_interrupt@rcvd_msg(11), TXB0D0(1)
      +, 
  3611 ;;		 -> tx_pool(100), 
  3612 ;;  tmp             1    6[BANK0 ] unsigned char 
  3613 ;; Return value:  Size  Location     Type
  3614 ;;                  2    0[BANK0 ] PTR void 
  3615 ;; Registers used:
  3616 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3617 ;; Tracked objects:
  3618 ;;		On entry : 0/0
  3619 ;;		On exit  : 0/0
  3620 ;;		Unchanged: 0/0
  3621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3622 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3623 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3625 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3626 ;;Total ram usage:       11 bytes
  3627 ;; Hardware stack levels used: 1
  3628 ;; Hardware stack levels required when called: 5
  3629 ;; This function calls:
  3630 ;;		Nothing
  3631 ;; This function is called by:
  3632 ;;		_can_send
  3633 ;;		_srb_push
  3634 ;;		_srb_pop
  3635 ;;		_srb_peek
  3636 ;; This function uses a non-reentrant model
  3637 ;;
  3638                           
  3639                           	psect	text25
  3640  00188E                     __ptext25:
  3641                           	callstack 0
  3642  00188E                     _memcpy:
  3643                           	callstack 22
  3644  00188E  C062  F069         	movff	memcpy@s1,memcpy@s
  3645  001892  C063  F06A         	movff	memcpy@s1+1,memcpy@s+1
  3646  001896  C060  F067         	movff	memcpy@d1,memcpy@d
  3647  00189A  C061  F068         	movff	memcpy@d1+1,memcpy@d+1
  3648  00189E  EF66  F00C         	goto	l5705
  3649  0018A2                     l5697:
  3650                           
  3651                           ; BSR set to: 0
  3652  0018A2  0060  F1A7  FFD9   	movff	memcpy@s,fsr2l
  3653  0018A8  0060  F1AB  FFDA   	movff	memcpy@s+1,fsr2h
  3654  0018AE  50DF               	movf	indf2,w,c
  3655  0018B0  6F66               	movwf	memcpy@tmp& (0+255),b
  3656  0018B2                     
  3657                           ; BSR set to: 0
  3658  0018B2  4B69               	infsnz	memcpy@s& (0+255),f,b
  3659  0018B4  2B6A               	incf	(memcpy@s+1)& (0+255),f,b
  3660  0018B6                     
  3661                           ; BSR set to: 0
  3662  0018B6  0060  F19F  FFD9   	movff	memcpy@d,fsr2l
  3663  0018BC  0060  F1A3  FFDA   	movff	memcpy@d+1,fsr2h
  3664  0018C2  0060  F19B  FFDF   	movff	memcpy@tmp,indf2
  3665  0018C8                     
  3666                           ; BSR set to: 0
  3667  0018C8  4B67               	infsnz	memcpy@d& (0+255),f,b
  3668  0018CA  2B68               	incf	(memcpy@d+1)& (0+255),f,b
  3669  0018CC                     l5705:
  3670  0018CC  0100               	movlb	0	; () banked
  3671  0018CE  0764               	decf	memcpy@n& (0+255),f,b
  3672  0018D0  A0D8               	btfss	status,0,c
  3673  0018D2  0765               	decf	(memcpy@n+1)& (0+255),f,b
  3674  0018D4  2964               	incf	memcpy@n& (0+255),w,b
  3675  0018D6  E106               	bnz	u3731
  3676  0018D8  2965               	incf	(memcpy@n+1)& (0+255),w,b
  3677  0018DA  A4D8               	btfss	status,2,c
  3678  0018DC  EF72  F00C         	goto	u3731
  3679  0018E0  EF74  F00C         	goto	u3730
  3680  0018E4                     u3731:
  3681  0018E4  EF51  F00C         	goto	l5697
  3682  0018E8                     u3730:
  3683  0018E8                     
  3684                           ; BSR set to: 0
  3685  0018E8  0012               	return		;funcret
  3686  0018EA                     __end_of_memcpy:
  3687                           	callstack 0
  3688                           
  3689 ;; *************** function _get_offset_bytes *****************
  3690 ;; Defined at:
  3691 ;;		line 5 in file "canlib/util/safe_ring_buffer.c"
  3692 ;; Parameters:    Size  Location     Type
  3693 ;;  ctx             2    6[BANK0 ] PTR const struct .
  3694 ;;		 -> buf(10), 
  3695 ;;  index           2    8[BANK0 ] unsigned int 
  3696 ;; Auto vars:     Size  Location     Type
  3697 ;;		None
  3698 ;; Return value:  Size  Location     Type
  3699 ;;                  2    6[BANK0 ] unsigned int 
  3700 ;; Registers used:
  3701 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3702 ;; Tracked objects:
  3703 ;;		On entry : 0/0
  3704 ;;		On exit  : 0/0
  3705 ;;		Unchanged: 0/0
  3706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3707 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3709 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3710 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3711 ;;Total ram usage:        6 bytes
  3712 ;; Hardware stack levels used: 1
  3713 ;; Hardware stack levels required when called: 6
  3714 ;; This function calls:
  3715 ;;		___wmul
  3716 ;; This function is called by:
  3717 ;;		_srb_push
  3718 ;;		_srb_pop
  3719 ;;		_srb_peek
  3720 ;; This function uses a non-reentrant model
  3721 ;;
  3722                           
  3723                           	psect	text26
  3724  001830                     __ptext26:
  3725                           	callstack 0
  3726  001830                     _get_offset_bytes:
  3727                           	callstack 21
  3728  001830                     
  3729                           ;safe_ring_buffer.c: 8: if (index >= ctx->max_elements) {
  3730  001830  0100               	movlb	0	; () banked
  3731  001832  EE20 F004          	lfsr	2,4
  3732  001836  5166               	movf	get_offset_bytes@ctx& (0+255),w,b
  3733  001838  26D9               	addwf	fsr2l,f,c
  3734  00183A  5167               	movf	(get_offset_bytes@ctx+1)& (0+255),w,b
  3735  00183C  22DA               	addwfc	fsr2h,f,c
  3736  00183E  50DE               	movf	postinc2,w,c
  3737  001840  5D68               	subwf	get_offset_bytes@index& (0+255),w,b
  3738  001842  50DE               	movf	postinc2,w,c
  3739  001844  5969               	subwfb	(get_offset_bytes@index+1)& (0+255),w,b
  3740  001846  A0D8               	btfss	status,0,c
  3741  001848  EF28  F00C         	goto	u3771
  3742  00184C  EF2A  F00C         	goto	u3770
  3743  001850                     u3771:
  3744  001850  EF30  F00C         	goto	l5729
  3745  001854                     u3770:
  3746  001854                     
  3747                           ; BSR set to: 0
  3748                           ;safe_ring_buffer.c: 9: return 0;
  3749  001854  0E00               	movlw	0
  3750  001856  6F67               	movwf	(?_get_offset_bytes+1)& (0+255),b
  3751  001858  0E00               	movlw	0
  3752  00185A  6F66               	movwf	?_get_offset_bytes& (0+255),b
  3753  00185C  EF46  F00C         	goto	l906
  3754  001860                     l5729:
  3755                           
  3756                           ; BSR set to: 0
  3757                           ;safe_ring_buffer.c: 10: };safe_ring_buffer.c: 11: return index * (ctx->element_size);
  3758  001860  EE20 F002          	lfsr	2,2
  3759  001864  5166               	movf	get_offset_bytes@ctx& (0+255),w,b
  3760  001866  26D9               	addwf	fsr2l,f,c
  3761  001868  5167               	movf	(get_offset_bytes@ctx+1)& (0+255),w,b
  3762  00186A  22DA               	addwfc	fsr2h,f,c
  3763  00186C  006F FF78  F060    	movff	postinc2,___wmul@multiplier
  3764  001872  006F FF74  F061    	movff	postdec2,___wmul@multiplier+1
  3765  001878  C068  F062         	movff	get_offset_bytes@index,___wmul@multiplicand
  3766  00187C  C069  F063         	movff	get_offset_bytes@index+1,___wmul@multiplicand+1
  3767  001880  EC2D  F00E         	call	___wmul	;wreg free
  3768  001884  C060  F066         	movff	?___wmul,?_get_offset_bytes
  3769  001888  C061  F067         	movff	?___wmul+1,?_get_offset_bytes+1
  3770  00188C                     l906:
  3771  00188C  0012               	return		;funcret
  3772  00188E                     __end_of_get_offset_bytes:
  3773                           	callstack 0
  3774                           
  3775 ;; *************** function ___wmul *****************
  3776 ;; Defined at:
  3777 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  3778 ;; Parameters:    Size  Location     Type
  3779 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3780 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3781 ;; Auto vars:     Size  Location     Type
  3782 ;;  product         2    4[BANK0 ] unsigned int 
  3783 ;; Return value:  Size  Location     Type
  3784 ;;                  2    0[BANK0 ] unsigned int 
  3785 ;; Registers used:
  3786 ;;		wreg, status,2, status,0, prodl, prodh
  3787 ;; Tracked objects:
  3788 ;;		On entry : 0/0
  3789 ;;		On exit  : 0/0
  3790 ;;		Unchanged: 0/0
  3791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3792 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3793 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3795 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3796 ;;Total ram usage:        6 bytes
  3797 ;; Hardware stack levels used: 1
  3798 ;; Hardware stack levels required when called: 5
  3799 ;; This function calls:
  3800 ;;		Nothing
  3801 ;; This function is called by:
  3802 ;;		_get_offset_bytes
  3803 ;; This function uses a non-reentrant model
  3804 ;;
  3805                           
  3806                           	psect	text27
  3807  001C5A                     __ptext27:
  3808                           	callstack 0
  3809  001C5A                     ___wmul:
  3810                           	callstack 21
  3811  001C5A  0100               	movlb	0	; () banked
  3812  001C5C  5160               	movf	___wmul@multiplier& (0+255),w,b
  3813  001C5E  0362               	mulwf	___wmul@multiplicand& (0+255),b
  3814  001C60  006F FFCC  F064    	movff	prodl,___wmul@product
  3815  001C66  006F FFD0  F065    	movff	prodh,___wmul@product+1
  3816  001C6C  5160               	movf	___wmul@multiplier& (0+255),w,b
  3817  001C6E  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  3818  001C70  50F3               	movf	243,w,c
  3819  001C72  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  3820  001C74  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
  3821  001C76  0362               	mulwf	___wmul@multiplicand& (0+255),b
  3822  001C78  50F3               	movf	243,w,c
  3823  001C7A  2765               	addwf	(___wmul@product+1)& (0+255),f,b
  3824  001C7C                     
  3825                           ; BSR set to: 0
  3826  001C7C  C064  F060         	movff	___wmul@product,?___wmul
  3827  001C80  C065  F061         	movff	___wmul@product+1,?___wmul+1
  3828  001C84                     
  3829                           ; BSR set to: 0
  3830  001C84  0012               	return		;funcret
  3831  001C86                     __end_of___wmul:
  3832                           	callstack 0
  3833                           
  3834 ;; *************** function _millis *****************
  3835 ;; Defined at:
  3836 ;;		line 24 in file "timer.c"
  3837 ;; Parameters:    Size  Location     Type
  3838 ;;		None
  3839 ;; Auto vars:     Size  Location     Type
  3840 ;;		None
  3841 ;; Return value:  Size  Location     Type
  3842 ;;                  4    0[BANK0 ] unsigned long 
  3843 ;; Registers used:
  3844 ;;		None
  3845 ;; Tracked objects:
  3846 ;;		On entry : 0/0
  3847 ;;		On exit  : 0/0
  3848 ;;		Unchanged: 0/0
  3849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3850 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3853 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3854 ;;Total ram usage:        4 bytes
  3855 ;; Hardware stack levels used: 1
  3856 ;; Hardware stack levels required when called: 5
  3857 ;; This function calls:
  3858 ;;		Nothing
  3859 ;; This function is called by:
  3860 ;;		_main
  3861 ;;		_send_status_ok
  3862 ;;		_check_battery_voltage_error
  3863 ;;		_check_bus_current_error
  3864 ;;		_vent_send_status
  3865 ;; This function uses a non-reentrant model
  3866 ;;
  3867                           
  3868                           	psect	text28
  3869  001DE4                     __ptext28:
  3870                           	callstack 0
  3871  001DE4                     _millis:
  3872                           	callstack 24
  3873  001DE4                     
  3874                           ;timer.c: 25: return millis_counter;
  3875  001DE4  C02D  F060         	movff	_millis_counter,?_millis
  3876  001DE8  C02E  F061         	movff	_millis_counter+1,?_millis+1
  3877  001DEC  C02F  F062         	movff	_millis_counter+2,?_millis+2
  3878  001DF0  C030  F063         	movff	_millis_counter+3,?_millis+3
  3879  001DF4  0012               	return		;funcret
  3880  001DF6                     __end_of_millis:
  3881                           	callstack 0
  3882                           
  3883 ;; *************** function _build_board_stat_msg *****************
  3884 ;; Defined at:
  3885 ;;		line 175 in file "canlib/can_common.c"
  3886 ;; Parameters:    Size  Location     Type
  3887 ;;  timestamp       4    6[BANK0 ] unsigned long 
  3888 ;;  error_code      1   10[BANK0 ] enum E54
  3889 ;;  error_data      2   11[BANK0 ] PTR unsigned char 
  3890 ;;		 -> check_bus_current_error@curr_data(2), check_battery_voltage_error@batt_data(2), NULL(0), 
  3891 ;;  error_data_l    1   13[BANK0 ] unsigned char 
  3892 ;;  output          2   14[BANK0 ] PTR struct .
  3893 ;;		 -> check_bus_current_error@error_msg(11), check_battery_voltage_error@error_msg(11), send_status_ok@board_stat_msg(
      +11), main@error_msg(11), 
  3894 ;; Auto vars:     Size  Location     Type
  3895 ;;  i               2   19[BANK0 ] int 
  3896 ;; Return value:  Size  Location     Type
  3897 ;;                  1    wreg      unsigned char 
  3898 ;; Registers used:
  3899 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3900 ;; Tracked objects:
  3901 ;;		On entry : 0/0
  3902 ;;		On exit  : 0/0
  3903 ;;		Unchanged: 0/0
  3904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3905 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3906 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3907 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3908 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3909 ;;Total ram usage:       15 bytes
  3910 ;; Hardware stack levels used: 1
  3911 ;; Hardware stack levels required when called: 6
  3912 ;; This function calls:
  3913 ;;		_write_timestamp_3bytes
  3914 ;; This function is called by:
  3915 ;;		_main
  3916 ;;		_send_status_ok
  3917 ;;		_check_battery_voltage_error
  3918 ;;		_check_bus_current_error
  3919 ;; This function uses a non-reentrant model
  3920 ;;
  3921                           
  3922                           	psect	text29
  3923  000F94                     __ptext29:
  3924                           	callstack 0
  3925  000F94                     _build_board_stat_msg:
  3926                           	callstack 23
  3927  000F94                     
  3928                           ;can_common.c: 181: if (error_data_len > 0 && !error_data) { return 0; }
  3929  000F94  0100               	movlb	0	; () banked
  3930  000F96  516D               	movf	build_board_stat_msg@error_data_len& (0+255),w,b
  3931  000F98  B4D8               	btfsc	status,2,c
  3932  000F9A  EFD1  F007         	goto	u3931
  3933  000F9E  EFD3  F007         	goto	u3930
  3934  000FA2                     u3931:
  3935  000FA2  EFDE  F007         	goto	l5841
  3936  000FA6                     u3930:
  3937  000FA6                     
  3938                           ; BSR set to: 0
  3939  000FA6  516B               	movf	build_board_stat_msg@error_data& (0+255),w,b
  3940  000FA8  116C               	iorwf	(build_board_stat_msg@error_data+1)& (0+255),w,b
  3941  000FAA  A4D8               	btfss	status,2,c
  3942  000FAC  EFDA  F007         	goto	u3941
  3943  000FB0  EFDC  F007         	goto	u3940
  3944  000FB4                     u3941:
  3945  000FB4  EFDE  F007         	goto	l5841
  3946  000FB8                     u3940:
  3947  000FB8  EF4D  F008         	goto	l468
  3948  000FBC                     l5841:
  3949                           
  3950                           ; BSR set to: 0
  3951                           ;can_common.c: 182: if (!output) { return 0; }
  3952  000FBC  516E               	movf	build_board_stat_msg@output& (0+255),w,b
  3953  000FBE  116F               	iorwf	(build_board_stat_msg@output+1)& (0+255),w,b
  3954  000FC0  A4D8               	btfss	status,2,c
  3955  000FC2  EFE5  F007         	goto	u3951
  3956  000FC6  EFE7  F007         	goto	u3950
  3957  000FCA                     u3951:
  3958  000FCA  EFE9  F007         	goto	l5845
  3959  000FCE                     u3950:
  3960  000FCE  EF4D  F008         	goto	l468
  3961  000FD2                     l5845:
  3962                           
  3963                           ; BSR set to: 0
  3964                           ;can_common.c: 183: if (error_data_len > 4) { return 0; }
  3965  000FD2  0E04               	movlw	4
  3966  000FD4  656D               	cpfsgt	build_board_stat_msg@error_data_len& (0+255),b
  3967  000FD6  EFEF  F007         	goto	u3961
  3968  000FDA  EFF1  F007         	goto	u3960
  3969  000FDE                     u3961:
  3970  000FDE  EFF3  F007         	goto	l5849
  3971  000FE2                     u3960:
  3972  000FE2  EF4D  F008         	goto	l468
  3973  000FE6                     l5849:
  3974                           
  3975                           ; BSR set to: 0
  3976                           ;can_common.c: 185: output->sid = 0x520 | 0x0B;
  3977  000FE6  0060  F1BB  FFD9   	movff	build_board_stat_msg@output,fsr2l
  3978  000FEC  0060  F1BF  FFDA   	movff	build_board_stat_msg@output+1,fsr2h
  3979  000FF2  0E2B               	movlw	43
  3980  000FF4  6EDE               	movwf	postinc2,c
  3981  000FF6  0E05               	movlw	5
  3982  000FF8  6EDD               	movwf	postdec2,c
  3983  000FFA                     
  3984                           ; BSR set to: 0
  3985                           ;can_common.c: 186: write_timestamp_3bytes(timestamp, output);
  3986  000FFA  C066  F060         	movff	build_board_stat_msg@timestamp,write_timestamp_3bytes@timestamp
  3987  000FFE  C067  F061         	movff	build_board_stat_msg@timestamp+1,write_timestamp_3bytes@timestamp+1
  3988  001002  C068  F062         	movff	build_board_stat_msg@timestamp+2,write_timestamp_3bytes@timestamp+2
  3989  001006  C069  F063         	movff	build_board_stat_msg@timestamp+3,write_timestamp_3bytes@timestamp+3
  3990  00100A  C06E  F064         	movff	build_board_stat_msg@output,write_timestamp_3bytes@output
  3991  00100E  C06F  F065         	movff	build_board_stat_msg@output+1,write_timestamp_3bytes@output+1
  3992  001012  ECF4  F00D         	call	_write_timestamp_3bytes	;wreg free
  3993  001016                     
  3994                           ;can_common.c: 188: output->data[3] = (uint8_t) error_code;
  3995  001016  0100               	movlb	0	; () banked
  3996  001018  EE20 F006          	lfsr	2,6
  3997  00101C  516E               	movf	build_board_stat_msg@output& (0+255),w,b
  3998  00101E  26D9               	addwf	fsr2l,f,c
  3999  001020  516F               	movf	(build_board_stat_msg@output+1)& (0+255),w,b
  4000  001022  22DA               	addwfc	fsr2h,f,c
  4001  001024  0060  F1AB  FFDF   	movff	build_board_stat_msg@error_code,indf2
  4002  00102A                     
  4003                           ; BSR set to: 0
  4004                           ;can_common.c: 189: for (int i = 0; i < error_data_len; ++i) {
  4005  00102A  0E00               	movlw	0
  4006  00102C  6F74               	movwf	(build_board_stat_msg@i+1)& (0+255),b
  4007  00102E  0E00               	movlw	0
  4008  001030  6F73               	movwf	build_board_stat_msg@i& (0+255),b
  4009  001032  EF32  F008         	goto	l5861
  4010  001036                     l5857:
  4011                           
  4012                           ; BSR set to: 0
  4013                           ;can_common.c: 191: output->data[4 + i] = error_data[i];
  4014  001036  5173               	movf	build_board_stat_msg@i& (0+255),w,b
  4015  001038  256B               	addwf	build_board_stat_msg@error_data& (0+255),w,b
  4016  00103A  6ED9               	movwf	fsr2l,c
  4017  00103C  5174               	movf	(build_board_stat_msg@i+1)& (0+255),w,b
  4018  00103E  216C               	addwfc	(build_board_stat_msg@error_data+1)& (0+255),w,b
  4019  001040  6EDA               	movwf	fsr2h,c
  4020  001042  5173               	movf	build_board_stat_msg@i& (0+255),w,b
  4021  001044  256E               	addwf	build_board_stat_msg@output& (0+255),w,b
  4022  001046  6F70               	movwf	??_build_board_stat_msg& (0+255),b
  4023  001048  5174               	movf	(build_board_stat_msg@i+1)& (0+255),w,b
  4024  00104A  216F               	addwfc	(build_board_stat_msg@output+1)& (0+255),w,b
  4025  00104C  6F71               	movwf	(??_build_board_stat_msg+1)& (0+255),b
  4026  00104E  0E07               	movlw	7
  4027  001050  2570               	addwf	??_build_board_stat_msg& (0+255),w,b
  4028  001052  6EE1               	movwf	fsr1l,c
  4029  001054  0E00               	movlw	0
  4030  001056  2171               	addwfc	(??_build_board_stat_msg+1)& (0+255),w,b
  4031  001058  6EE2               	movwf	fsr1h,c
  4032  00105A  006F FF7F FFE7     	movff	indf2,indf1
  4033  001060                     
  4034                           ; BSR set to: 0
  4035  001060  4B73               	infsnz	build_board_stat_msg@i& (0+255),f,b
  4036  001062  2B74               	incf	(build_board_stat_msg@i+1)& (0+255),f,b
  4037  001064                     l5861:
  4038                           
  4039                           ; BSR set to: 0
  4040  001064  516D               	movf	build_board_stat_msg@error_data_len& (0+255),w,b
  4041  001066  6F70               	movwf	??_build_board_stat_msg& (0+255),b
  4042  001068  6B71               	clrf	(??_build_board_stat_msg+1)& (0+255),b
  4043  00106A  5170               	movf	??_build_board_stat_msg& (0+255),w,b
  4044  00106C  5D73               	subwf	build_board_stat_msg@i& (0+255),w,b
  4045  00106E  5174               	movf	(build_board_stat_msg@i+1)& (0+255),w,b
  4046  001070  0A80               	xorlw	128
  4047  001072  6F72               	movwf	(??_build_board_stat_msg+2)& (0+255),b
  4048  001074  5171               	movf	(??_build_board_stat_msg+1)& (0+255),w,b
  4049  001076  0A80               	xorlw	128
  4050  001078  5972               	subwfb	(??_build_board_stat_msg+2)& (0+255),w,b
  4051  00107A  A0D8               	btfss	status,0,c
  4052  00107C  EF42  F008         	goto	u3971
  4053  001080  EF44  F008         	goto	u3970
  4054  001084                     u3971:
  4055  001084  EF1B  F008         	goto	l5857
  4056  001088                     u3970:
  4057  001088                     
  4058                           ; BSR set to: 0
  4059                           ;can_common.c: 192: };can_common.c: 195: output->data_len = 4 + error_data_len;
  4060  001088  EE20 F002          	lfsr	2,2
  4061  00108C  516E               	movf	build_board_stat_msg@output& (0+255),w,b
  4062  00108E  26D9               	addwf	fsr2l,f,c
  4063  001090  516F               	movf	(build_board_stat_msg@output+1)& (0+255),w,b
  4064  001092  22DA               	addwfc	fsr2h,f,c
  4065  001094  516D               	movf	build_board_stat_msg@error_data_len& (0+255),w,b
  4066  001096  0F04               	addlw	4
  4067  001098  6EDF               	movwf	indf2,c
  4068  00109A                     l468:
  4069                           
  4070                           ; BSR set to: 0
  4071  00109A  0012               	return		;funcret
  4072  00109C                     __end_of_build_board_stat_msg:
  4073                           	callstack 0
  4074                           
  4075 ;; *************** function _write_timestamp_3bytes *****************
  4076 ;; Defined at:
  4077 ;;		line 19 in file "canlib/can_common.c"
  4078 ;; Parameters:    Size  Location     Type
  4079 ;;  timestamp       4    0[BANK0 ] unsigned long 
  4080 ;;  output          2    4[BANK0 ] PTR struct .
  4081 ;;		 -> vent_send_status@stat_msg(11), check_bus_current_error@error_msg(11), check_battery_voltage_error@error_msg(11),
      + send_status_ok@board_stat_msg(11), 
  4082 ;;		 -> main@error_msg(11), 
  4083 ;; Auto vars:     Size  Location     Type
  4084 ;;		None
  4085 ;; Return value:  Size  Location     Type
  4086 ;;                  1    wreg      void 
  4087 ;; Registers used:
  4088 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4089 ;; Tracked objects:
  4090 ;;		On entry : 0/0
  4091 ;;		On exit  : 0/0
  4092 ;;		Unchanged: 0/0
  4093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4094 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4097 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4098 ;;Total ram usage:        6 bytes
  4099 ;; Hardware stack levels used: 1
  4100 ;; Hardware stack levels required when called: 5
  4101 ;; This function calls:
  4102 ;;		Nothing
  4103 ;; This function is called by:
  4104 ;;		_build_valve_stat_msg
  4105 ;;		_build_board_stat_msg
  4106 ;;		_build_general_cmd_msg
  4107 ;;		_build_debug_msg
  4108 ;;		_build_reset_msg
  4109 ;;		_build_valve_cmd_msg
  4110 ;;		_build_arm_cmd_msg
  4111 ;;		_build_arm_stat_msg
  4112 ;;		_build_altitude_data_msg
  4113 ;;		_build_gps_time_msg
  4114 ;;		_build_gps_lat_msg
  4115 ;;		_build_gps_lon_msg
  4116 ;;		_build_gps_alt_msg
  4117 ;;		_build_gps_info_msg
  4118 ;;		_build_fill_msg
  4119 ;;		_build_radi_info_msg
  4120 ;; This function uses a non-reentrant model
  4121 ;;
  4122                           
  4123                           	psect	text30
  4124  001BE8                     __ptext30:
  4125                           	callstack 0
  4126  001BE8                     _write_timestamp_3bytes:
  4127                           	callstack 23
  4128  001BE8                     
  4129                           ;can_common.c: 21: output->data[0] = (timestamp >> 16) & 0xff;
  4130  001BE8  0100               	movlb	0	; () banked
  4131  001BEA  EE20 F003          	lfsr	2,3
  4132  001BEE  5164               	movf	write_timestamp_3bytes@output& (0+255),w,b
  4133  001BF0  26D9               	addwf	fsr2l,f,c
  4134  001BF2  5165               	movf	(write_timestamp_3bytes@output+1)& (0+255),w,b
  4135  001BF4  22DA               	addwfc	fsr2h,f,c
  4136  001BF6  0060  F18B  FFDF   	movff	write_timestamp_3bytes@timestamp+2,indf2
  4137                           
  4138                           ;can_common.c: 22: output->data[1] = (timestamp >> 8) & 0xff;
  4139  001BFC  EE20 F004          	lfsr	2,4
  4140  001C00  5164               	movf	write_timestamp_3bytes@output& (0+255),w,b
  4141  001C02  26D9               	addwf	fsr2l,f,c
  4142  001C04  5165               	movf	(write_timestamp_3bytes@output+1)& (0+255),w,b
  4143  001C06  22DA               	addwfc	fsr2h,f,c
  4144  001C08  0060  F187  FFDF   	movff	write_timestamp_3bytes@timestamp+1,indf2
  4145                           
  4146                           ;can_common.c: 23: output->data[2] = (timestamp >> 0) & 0xff;
  4147  001C0E  EE20 F005          	lfsr	2,5
  4148  001C12  5164               	movf	write_timestamp_3bytes@output& (0+255),w,b
  4149  001C14  26D9               	addwf	fsr2l,f,c
  4150  001C16  5165               	movf	(write_timestamp_3bytes@output+1)& (0+255),w,b
  4151  001C18  22DA               	addwfc	fsr2h,f,c
  4152  001C1A  0060  F183  FFDF   	movff	write_timestamp_3bytes@timestamp,indf2
  4153  001C20                     
  4154                           ; BSR set to: 0
  4155  001C20  0012               	return		;funcret
  4156  001C22                     __end_of_write_timestamp_3bytes:
  4157                           	callstack 0
  4158                           
  4159 ;; *************** function _build_analog_data_msg *****************
  4160 ;; Defined at:
  4161 ;;		line 234 in file "canlib/can_common.c"
  4162 ;; Parameters:    Size  Location     Type
  4163 ;;  timestamp       4    4[BANK0 ] unsigned long 
  4164 ;;  sensor_id       1    8[BANK0 ] enum E76
  4165 ;;  sensor_data     2    9[BANK0 ] unsigned int 
  4166 ;;  output          2   11[BANK0 ] PTR struct .
  4167 ;;		 -> check_battery_voltage_error@batt_msg(11), 
  4168 ;; Auto vars:     Size  Location     Type
  4169 ;;		None
  4170 ;; Return value:  Size  Location     Type
  4171 ;;                  1    wreg      unsigned char 
  4172 ;; Registers used:
  4173 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4174 ;; Tracked objects:
  4175 ;;		On entry : 0/0
  4176 ;;		On exit  : 0/0
  4177 ;;		Unchanged: 0/0
  4178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4179 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4182 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4183 ;;Total ram usage:        9 bytes
  4184 ;; Hardware stack levels used: 1
  4185 ;; Hardware stack levels required when called: 6
  4186 ;; This function calls:
  4187 ;;		_write_timestamp_2bytes
  4188 ;; This function is called by:
  4189 ;;		_check_battery_voltage_error
  4190 ;; This function uses a non-reentrant model
  4191 ;;
  4192                           
  4193                           	psect	text31
  4194  001732                     __ptext31:
  4195                           	callstack 0
  4196  001732                     _build_analog_data_msg:
  4197                           	callstack 23
  4198  001732                     
  4199                           ;can_common.c: 239: if (!output) { return 0; }
  4200  001732  0100               	movlb	0	; () banked
  4201  001734  516B               	movf	build_analog_data_msg@output& (0+255),w,b
  4202  001736  116C               	iorwf	(build_analog_data_msg@output+1)& (0+255),w,b
  4203  001738  A4D8               	btfss	status,2,c
  4204  00173A  EFA1  F00B         	goto	u4021
  4205  00173E  EFA3  F00B         	goto	u4020
  4206  001742                     u4021:
  4207  001742  EFA5  F00B         	goto	l5901
  4208  001746                     u4020:
  4209  001746  EFDC  F00B         	goto	l483
  4210  00174A                     l5901:
  4211                           
  4212                           ; BSR set to: 0
  4213                           ;can_common.c: 241: output->sid = 0x6A0 | 0x0B;
  4214  00174A  0060  F1AF  FFD9   	movff	build_analog_data_msg@output,fsr2l
  4215  001750  0060  F1B3  FFDA   	movff	build_analog_data_msg@output+1,fsr2h
  4216  001756  0EAB               	movlw	171
  4217  001758  6EDE               	movwf	postinc2,c
  4218  00175A  0E06               	movlw	6
  4219  00175C  6EDD               	movwf	postdec2,c
  4220  00175E                     
  4221                           ; BSR set to: 0
  4222                           ;can_common.c: 242: write_timestamp_2bytes(timestamp, output);
  4223  00175E  C064  F060         	movff	build_analog_data_msg@timestamp,write_timestamp_2bytes@timestamp
  4224  001762  C065  F061         	movff	build_analog_data_msg@timestamp+1,write_timestamp_2bytes@timestamp+1
  4225  001766  C06B  F062         	movff	build_analog_data_msg@output,write_timestamp_2bytes@output
  4226  00176A  C06C  F063         	movff	build_analog_data_msg@output+1,write_timestamp_2bytes@output+1
  4227  00176E  EC6E  F00E         	call	_write_timestamp_2bytes	;wreg free
  4228  001772                     
  4229                           ;can_common.c: 244: output->data[2] = (uint8_t) sensor_id;
  4230  001772  0100               	movlb	0	; () banked
  4231  001774  EE20 F005          	lfsr	2,5
  4232  001778  516B               	movf	build_analog_data_msg@output& (0+255),w,b
  4233  00177A  26D9               	addwf	fsr2l,f,c
  4234  00177C  516C               	movf	(build_analog_data_msg@output+1)& (0+255),w,b
  4235  00177E  22DA               	addwfc	fsr2h,f,c
  4236  001780  0060  F1A3  FFDF   	movff	build_analog_data_msg@sensor_id,indf2
  4237  001786                     
  4238                           ; BSR set to: 0
  4239                           ;can_common.c: 245: output->data[3] = (sensor_data >> 8) & 0xff;
  4240  001786  EE20 F006          	lfsr	2,6
  4241  00178A  516B               	movf	build_analog_data_msg@output& (0+255),w,b
  4242  00178C  26D9               	addwf	fsr2l,f,c
  4243  00178E  516C               	movf	(build_analog_data_msg@output+1)& (0+255),w,b
  4244  001790  22DA               	addwfc	fsr2h,f,c
  4245  001792  516A               	movf	(build_analog_data_msg@sensor_data+1)& (0+255),w,b
  4246  001794  6EDF               	movwf	indf2,c
  4247  001796                     
  4248                           ; BSR set to: 0
  4249                           ;can_common.c: 246: output->data[4] = (sensor_data >> 0) & 0xff;
  4250  001796  EE20 F007          	lfsr	2,7
  4251  00179A  516B               	movf	build_analog_data_msg@output& (0+255),w,b
  4252  00179C  26D9               	addwf	fsr2l,f,c
  4253  00179E  516C               	movf	(build_analog_data_msg@output+1)& (0+255),w,b
  4254  0017A0  22DA               	addwfc	fsr2h,f,c
  4255  0017A2  0060  F1A7  FFDF   	movff	build_analog_data_msg@sensor_data,indf2
  4256  0017A8                     
  4257                           ; BSR set to: 0
  4258                           ;can_common.c: 248: output->data_len = 5;
  4259  0017A8  EE20 F002          	lfsr	2,2
  4260  0017AC  516B               	movf	build_analog_data_msg@output& (0+255),w,b
  4261  0017AE  26D9               	addwf	fsr2l,f,c
  4262  0017B0  516C               	movf	(build_analog_data_msg@output+1)& (0+255),w,b
  4263  0017B2  22DA               	addwfc	fsr2h,f,c
  4264  0017B4  0E05               	movlw	5
  4265  0017B6  6EDF               	movwf	indf2,c
  4266  0017B8                     l483:
  4267                           
  4268                           ; BSR set to: 0
  4269  0017B8  0012               	return		;funcret
  4270  0017BA                     __end_of_build_analog_data_msg:
  4271                           	callstack 0
  4272                           
  4273 ;; *************** function _write_timestamp_2bytes *****************
  4274 ;; Defined at:
  4275 ;;		line 13 in file "canlib/can_common.c"
  4276 ;; Parameters:    Size  Location     Type
  4277 ;;  timestamp       2    0[BANK0 ] unsigned int 
  4278 ;;  output          2    2[BANK0 ] PTR struct .
  4279 ;;		 -> check_battery_voltage_error@batt_msg(11), 
  4280 ;; Auto vars:     Size  Location     Type
  4281 ;;		None
  4282 ;; Return value:  Size  Location     Type
  4283 ;;                  1    wreg      void 
  4284 ;; Registers used:
  4285 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4286 ;; Tracked objects:
  4287 ;;		On entry : 0/0
  4288 ;;		On exit  : 0/0
  4289 ;;		Unchanged: 0/0
  4290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4291 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4294 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4295 ;;Total ram usage:        4 bytes
  4296 ;; Hardware stack levels used: 1
  4297 ;; Hardware stack levels required when called: 5
  4298 ;; This function calls:
  4299 ;;		Nothing
  4300 ;; This function is called by:
  4301 ;;		_build_analog_data_msg
  4302 ;;		_build_imu_data_msg
  4303 ;; This function uses a non-reentrant model
  4304 ;;
  4305                           
  4306                           	psect	text32
  4307  001CDC                     __ptext32:
  4308                           	callstack 0
  4309  001CDC                     _write_timestamp_2bytes:
  4310                           	callstack 23
  4311  001CDC                     
  4312                           ;can_common.c: 15: output->data[0] = (timestamp >> 8) & 0xff;
  4313  001CDC  0100               	movlb	0	; () banked
  4314  001CDE  EE20 F003          	lfsr	2,3
  4315  001CE2  5162               	movf	write_timestamp_2bytes@output& (0+255),w,b
  4316  001CE4  26D9               	addwf	fsr2l,f,c
  4317  001CE6  5163               	movf	(write_timestamp_2bytes@output+1)& (0+255),w,b
  4318  001CE8  22DA               	addwfc	fsr2h,f,c
  4319  001CEA  5161               	movf	(write_timestamp_2bytes@timestamp+1)& (0+255),w,b
  4320  001CEC  6EDF               	movwf	indf2,c
  4321                           
  4322                           ;can_common.c: 16: output->data[1] = (timestamp >> 0) & 0xff;
  4323  001CEE  EE20 F004          	lfsr	2,4
  4324  001CF2  5162               	movf	write_timestamp_2bytes@output& (0+255),w,b
  4325  001CF4  26D9               	addwf	fsr2l,f,c
  4326  001CF6  5163               	movf	(write_timestamp_2bytes@output+1)& (0+255),w,b
  4327  001CF8  22DA               	addwfc	fsr2h,f,c
  4328  001CFA  0060  F183  FFDF   	movff	write_timestamp_2bytes@timestamp,indf2
  4329  001D00                     
  4330                           ; BSR set to: 0
  4331  001D00  0012               	return		;funcret
  4332  001D02                     __end_of_write_timestamp_2bytes:
  4333                           	callstack 0
  4334                           
  4335 ;; *************** function ___lwtoft *****************
  4336 ;; Defined at:
  4337 ;;		line 28 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwtoft.c"
  4338 ;; Parameters:    Size  Location     Type
  4339 ;;  c               2    8[BANK0 ] unsigned int 
  4340 ;; Auto vars:     Size  Location     Type
  4341 ;;		None
  4342 ;; Return value:  Size  Location     Type
  4343 ;;                  3    8[BANK0 ] float 
  4344 ;; Registers used:
  4345 ;;		wreg, status,2, status,0, cstack
  4346 ;; Tracked objects:
  4347 ;;		On entry : 0/0
  4348 ;;		On exit  : 0/0
  4349 ;;		Unchanged: 0/0
  4350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4351 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4354 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4355 ;;Total ram usage:        3 bytes
  4356 ;; Hardware stack levels used: 1
  4357 ;; Hardware stack levels required when called: 6
  4358 ;; This function calls:
  4359 ;;		___ftpack
  4360 ;; This function is called by:
  4361 ;;		_check_battery_voltage_error
  4362 ;; This function uses a non-reentrant model
  4363 ;;
  4364                           
  4365                           	psect	text33
  4366  001D02                     __ptext33:
  4367                           	callstack 0
  4368  001D02                     ___lwtoft:
  4369                           	callstack 23
  4370  001D02  C068  F060         	movff	___lwtoft@c,___ftpack@arg
  4371  001D06  C069  F061         	movff	___lwtoft@c+1,___ftpack@arg+1
  4372  001D0A  0100               	movlb	0	; () banked
  4373  001D0C  6B62               	clrf	(___ftpack@arg+2)& (0+255),b
  4374  001D0E  0E8E               	movlw	142
  4375  001D10  6F63               	movwf	___ftpack@exp& (0+255),b
  4376  001D12  0E00               	movlw	0
  4377  001D14  6F64               	movwf	___ftpack@sign& (0+255),b
  4378  001D16  EC45  F007         	call	___ftpack	;wreg free
  4379  001D1A  C060  F068         	movff	?___ftpack,?___lwtoft
  4380  001D1E  C061  F069         	movff	?___ftpack+1,?___lwtoft+1
  4381  001D22  C062  F06A         	movff	?___ftpack+2,?___lwtoft+2
  4382  001D26  0012               	return		;funcret
  4383  001D28                     __end_of___lwtoft:
  4384                           	callstack 0
  4385                           
  4386 ;; *************** function ___fttol *****************
  4387 ;; Defined at:
  4388 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fttol.c"
  4389 ;; Parameters:    Size  Location     Type
  4390 ;;  f1              3   26[BANK0 ] float 
  4391 ;; Auto vars:     Size  Location     Type
  4392 ;;  lval            4   36[BANK0 ] unsigned long 
  4393 ;;  exp1            1   40[BANK0 ] unsigned char 
  4394 ;;  sign1           1   35[BANK0 ] unsigned char 
  4395 ;; Return value:  Size  Location     Type
  4396 ;;                  4   26[BANK0 ] long 
  4397 ;; Registers used:
  4398 ;;		wreg, status,2, status,0
  4399 ;; Tracked objects:
  4400 ;;		On entry : 0/0
  4401 ;;		On exit  : 0/0
  4402 ;;		Unchanged: 0/0
  4403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4404 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4405 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4406 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4407 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4408 ;;Total ram usage:       15 bytes
  4409 ;; Hardware stack levels used: 1
  4410 ;; Hardware stack levels required when called: 5
  4411 ;; This function calls:
  4412 ;;		Nothing
  4413 ;; This function is called by:
  4414 ;;		_check_battery_voltage_error
  4415 ;; This function uses a non-reentrant model
  4416 ;;
  4417                           
  4418                           	psect	text34
  4419  000C56                     __ptext34:
  4420                           	callstack 0
  4421  000C56                     ___fttol:
  4422                           	callstack 24
  4423  000C56  C07C  F07E         	movff	___fttol@f1+2,??___fttol
  4424  000C5A  0100               	movlb	0	; () banked
  4425  000C5C  6B7F               	clrf	(??___fttol+1)& (0+255),b
  4426  000C5E  6B80               	clrf	(??___fttol+2)& (0+255),b
  4427  000C60  357B               	rlcf	(___fttol@f1+1)& (0+255),w,b
  4428  000C62  377E               	rlcf	??___fttol& (0+255),f,b
  4429  000C64  E301               	bnc	u2451
  4430  000C66  817F               	bsf	(??___fttol+1)& (0+255),0,b
  4431  000C68                     u2451:
  4432  000C68  517E               	movf	??___fttol& (0+255),w,b
  4433  000C6A  6F88               	movwf	___fttol@exp1& (0+255),b
  4434  000C6C  5188               	movf	___fttol@exp1& (0+255),w,b
  4435  000C6E  A4D8               	btfss	status,2,c
  4436  000C70  EF3C  F006         	goto	u2461
  4437  000C74  EF3E  F006         	goto	u2460
  4438  000C78                     u2461:
  4439  000C78  EF48  F006         	goto	l4181
  4440  000C7C                     u2460:
  4441  000C7C                     l4177:
  4442                           
  4443                           ; BSR set to: 0
  4444  000C7C  0E00               	movlw	0
  4445  000C7E  6F7A               	movwf	?___fttol& (0+255),b
  4446  000C80  0E00               	movlw	0
  4447  000C82  6F7B               	movwf	(?___fttol+1)& (0+255),b
  4448  000C84  0E00               	movlw	0
  4449  000C86  6F7C               	movwf	(?___fttol+2)& (0+255),b
  4450  000C88  0E00               	movlw	0
  4451  000C8A  6F7D               	movwf	(?___fttol+3)& (0+255),b
  4452  000C8C  EFBB  F006         	goto	l1358
  4453  000C90                     l4181:
  4454                           
  4455                           ; BSR set to: 0
  4456  000C90  0E17               	movlw	23
  4457  000C92  6F7E               	movwf	??___fttol& (0+255),b
  4458  000C94  C07A  F07F         	movff	___fttol@f1,??___fttol+1
  4459  000C98  C07B  F080         	movff	___fttol@f1+1,??___fttol+2
  4460  000C9C  C07C  F081         	movff	___fttol@f1+2,??___fttol+3
  4461  000CA0  297E               	incf	??___fttol& (0+255),w,b
  4462  000CA2  6F82               	movwf	(??___fttol+4)& (0+255),b
  4463  000CA4  EF58  F006         	goto	u2470
  4464  000CA8                     u2475:
  4465  000CA8  90D8               	bcf	status,0,c
  4466  000CAA  3381               	rrcf	(??___fttol+3)& (0+255),f,b
  4467  000CAC  3380               	rrcf	(??___fttol+2)& (0+255),f,b
  4468  000CAE  337F               	rrcf	(??___fttol+1)& (0+255),f,b
  4469  000CB0                     u2470:
  4470  000CB0  2F82               	decfsz	(??___fttol+4)& (0+255),f,b
  4471  000CB2  EF54  F006         	goto	u2475
  4472  000CB6  0100               	movlb	0	; () banked
  4473  000CB8  517F               	movf	(??___fttol+1)& (0+255),w,b
  4474  000CBA  6F83               	movwf	___fttol@sign1& (0+255),b
  4475  000CBC                     
  4476                           ; BSR set to: 0
  4477  000CBC  8F7B               	bsf	(___fttol@f1+1)& (0+255),7,b
  4478  000CBE                     
  4479                           ; BSR set to: 0
  4480  000CBE  0EFF               	movlw	255
  4481  000CC0  177A               	andwf	___fttol@f1& (0+255),f,b
  4482  000CC2  0EFF               	movlw	255
  4483  000CC4  177B               	andwf	(___fttol@f1+1)& (0+255),f,b
  4484  000CC6  0E00               	movlw	0
  4485  000CC8  177C               	andwf	(___fttol@f1+2)& (0+255),f,b
  4486  000CCA                     
  4487                           ; BSR set to: 0
  4488  000CCA  517A               	movf	___fttol@f1& (0+255),w,b
  4489  000CCC  6F84               	movwf	___fttol@lval& (0+255),b
  4490  000CCE  517B               	movf	(___fttol@f1+1)& (0+255),w,b
  4491  000CD0  6F85               	movwf	(___fttol@lval+1)& (0+255),b
  4492  000CD2  517C               	movf	(___fttol@f1+2)& (0+255),w,b
  4493  000CD4  6F86               	movwf	(___fttol@lval+2)& (0+255),b
  4494  000CD6  6B87               	clrf	(___fttol@lval+3)& (0+255),b
  4495  000CD8                     
  4496                           ; BSR set to: 0
  4497  000CD8  0E8E               	movlw	142
  4498  000CDA  5F88               	subwf	___fttol@exp1& (0+255),f,b
  4499  000CDC                     
  4500                           ; BSR set to: 0
  4501  000CDC  BF88               	btfsc	___fttol@exp1& (0+255),7,b
  4502  000CDE  EF75  F006         	goto	u2480
  4503  000CE2  EF73  F006         	goto	u2481
  4504  000CE6                     u2481:
  4505  000CE6  EF8B  F006         	goto	l4203
  4506  000CEA                     u2480:
  4507  000CEA                     
  4508                           ; BSR set to: 0
  4509  000CEA  5188               	movf	___fttol@exp1& (0+255),w,b
  4510  000CEC  0A80               	xorlw	128
  4511  000CEE  0F8F               	addlw	143
  4512  000CF0  B0D8               	btfsc	status,0,c
  4513  000CF2  EF7D  F006         	goto	u2491
  4514  000CF6  EF7F  F006         	goto	u2490
  4515  000CFA                     u2491:
  4516  000CFA  EF81  F006         	goto	l4199
  4517  000CFE                     u2490:
  4518  000CFE  EF3E  F006         	goto	l4177
  4519  000D02                     l4199:
  4520                           
  4521                           ; BSR set to: 0
  4522  000D02  90D8               	bcf	status,0,c
  4523  000D04  3387               	rrcf	(___fttol@lval+3)& (0+255),f,b
  4524  000D06  3386               	rrcf	(___fttol@lval+2)& (0+255),f,b
  4525  000D08  3385               	rrcf	(___fttol@lval+1)& (0+255),f,b
  4526  000D0A  3384               	rrcf	___fttol@lval& (0+255),f,b
  4527  000D0C                     
  4528                           ; BSR set to: 0
  4529  000D0C  3F88               	incfsz	___fttol@exp1& (0+255),f,b
  4530  000D0E  EF81  F006         	goto	l4199
  4531  000D12  EFA3  F006         	goto	l4213
  4532  000D16                     l4203:
  4533                           
  4534                           ; BSR set to: 0
  4535  000D16  0E17               	movlw	23
  4536  000D18  6588               	cpfsgt	___fttol@exp1& (0+255),b
  4537  000D1A  EF91  F006         	goto	u2501
  4538  000D1E  EF93  F006         	goto	u2500
  4539  000D22                     u2501:
  4540  000D22  EF9B  F006         	goto	l4211
  4541  000D26                     u2500:
  4542  000D26  EF3E  F006         	goto	l4177
  4543  000D2A                     l4209:
  4544                           
  4545                           ; BSR set to: 0
  4546  000D2A  90D8               	bcf	status,0,c
  4547  000D2C  3784               	rlcf	___fttol@lval& (0+255),f,b
  4548  000D2E  3785               	rlcf	(___fttol@lval+1)& (0+255),f,b
  4549  000D30  3786               	rlcf	(___fttol@lval+2)& (0+255),f,b
  4550  000D32  3787               	rlcf	(___fttol@lval+3)& (0+255),f,b
  4551  000D34  0788               	decf	___fttol@exp1& (0+255),f,b
  4552  000D36                     l4211:
  4553                           
  4554                           ; BSR set to: 0
  4555  000D36  5188               	movf	___fttol@exp1& (0+255),w,b
  4556  000D38  A4D8               	btfss	status,2,c
  4557  000D3A  EFA1  F006         	goto	u2511
  4558  000D3E  EFA3  F006         	goto	u2510
  4559  000D42                     u2511:
  4560  000D42  EF95  F006         	goto	l4209
  4561  000D46                     u2510:
  4562  000D46                     l4213:
  4563                           
  4564                           ; BSR set to: 0
  4565  000D46  5183               	movf	___fttol@sign1& (0+255),w,b
  4566  000D48  B4D8               	btfsc	status,2,c
  4567  000D4A  EFA9  F006         	goto	u2521
  4568  000D4E  EFAB  F006         	goto	u2520
  4569  000D52                     u2521:
  4570  000D52  EFB3  F006         	goto	l4217
  4571  000D56                     u2520:
  4572  000D56                     
  4573                           ; BSR set to: 0
  4574  000D56  1F87               	comf	(___fttol@lval+3)& (0+255),f,b
  4575  000D58  1F86               	comf	(___fttol@lval+2)& (0+255),f,b
  4576  000D5A  1F85               	comf	(___fttol@lval+1)& (0+255),f,b
  4577  000D5C  6D84               	negf	___fttol@lval& (0+255),b
  4578  000D5E  0E00               	movlw	0
  4579  000D60  2385               	addwfc	(___fttol@lval+1)& (0+255),f,b
  4580  000D62  2386               	addwfc	(___fttol@lval+2)& (0+255),f,b
  4581  000D64  2387               	addwfc	(___fttol@lval+3)& (0+255),f,b
  4582  000D66                     l4217:
  4583                           
  4584                           ; BSR set to: 0
  4585  000D66  C084  F07A         	movff	___fttol@lval,?___fttol
  4586  000D6A  C085  F07B         	movff	___fttol@lval+1,?___fttol+1
  4587  000D6E  C086  F07C         	movff	___fttol@lval+2,?___fttol+2
  4588  000D72  C087  F07D         	movff	___fttol@lval+3,?___fttol+3
  4589  000D76                     l1358:
  4590                           
  4591                           ; BSR set to: 0
  4592  000D76  0012               	return		;funcret
  4593  000D78                     __end_of___fttol:
  4594                           	callstack 0
  4595                           
  4596 ;; *************** function ___ftmul *****************
  4597 ;; Defined at:
  4598 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\ftmul.c"
  4599 ;; Parameters:    Size  Location     Type
  4600 ;;  f1              3   11[BANK0 ] float 
  4601 ;;  f2              3   14[BANK0 ] float 
  4602 ;; Auto vars:     Size  Location     Type
  4603 ;;  f3_as_produc    3   21[BANK0 ] unsigned um
  4604 ;;  sign            1   25[BANK0 ] unsigned char 
  4605 ;;  cntr            1   24[BANK0 ] unsigned char 
  4606 ;;  exp             1   20[BANK0 ] unsigned char 
  4607 ;; Return value:  Size  Location     Type
  4608 ;;                  3   11[BANK0 ] float 
  4609 ;; Registers used:
  4610 ;;		wreg, status,2, status,0, cstack
  4611 ;; Tracked objects:
  4612 ;;		On entry : 0/0
  4613 ;;		On exit  : 0/0
  4614 ;;		Unchanged: 0/0
  4615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4616 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4617 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4618 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4619 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4620 ;;Total ram usage:       15 bytes
  4621 ;; Hardware stack levels used: 1
  4622 ;; Hardware stack levels required when called: 6
  4623 ;; This function calls:
  4624 ;;		___ftpack
  4625 ;; This function is called by:
  4626 ;;		_check_battery_voltage_error
  4627 ;; This function uses a non-reentrant model
  4628 ;;
  4629                           
  4630                           	psect	text35
  4631  000B30                     __ptext35:
  4632                           	callstack 0
  4633  000B30                     ___ftmul:
  4634                           	callstack 23
  4635  000B30  C06D  F071         	movff	___ftmul@f1+2,??___ftmul
  4636  000B34  0100               	movlb	0	; () banked
  4637  000B36  6B72               	clrf	(??___ftmul+1)& (0+255),b
  4638  000B38  6B73               	clrf	(??___ftmul+2)& (0+255),b
  4639  000B3A  356C               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  4640  000B3C  3771               	rlcf	??___ftmul& (0+255),f,b
  4641  000B3E  E301               	bnc	u4091
  4642  000B40  8172               	bsf	(??___ftmul+1)& (0+255),0,b
  4643  000B42                     u4091:
  4644  000B42  5171               	movf	??___ftmul& (0+255),w,b
  4645  000B44  6F74               	movwf	___ftmul@exp& (0+255),b
  4646  000B46  5174               	movf	___ftmul@exp& (0+255),w,b
  4647  000B48  A4D8               	btfss	status,2,c
  4648  000B4A  EFA9  F005         	goto	u4101
  4649  000B4E  EFAB  F005         	goto	u4100
  4650  000B52                     u4101:
  4651  000B52  EFB3  F005         	goto	l5967
  4652  000B56                     u4100:
  4653  000B56                     
  4654                           ; BSR set to: 0
  4655  000B56  0E00               	movlw	0
  4656  000B58  6F6B               	movwf	?___ftmul& (0+255),b
  4657  000B5A  0E00               	movlw	0
  4658  000B5C  6F6C               	movwf	(?___ftmul+1)& (0+255),b
  4659  000B5E  0E00               	movlw	0
  4660  000B60  6F6D               	movwf	(?___ftmul+2)& (0+255),b
  4661  000B62  EF2A  F006         	goto	l1337
  4662  000B66                     l5967:
  4663                           
  4664                           ; BSR set to: 0
  4665  000B66  C070  F071         	movff	___ftmul@f2+2,??___ftmul
  4666  000B6A  6B72               	clrf	(??___ftmul+1)& (0+255),b
  4667  000B6C  6B73               	clrf	(??___ftmul+2)& (0+255),b
  4668  000B6E  356F               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  4669  000B70  3771               	rlcf	??___ftmul& (0+255),f,b
  4670  000B72  E301               	bnc	u4111
  4671  000B74  8172               	bsf	(??___ftmul+1)& (0+255),0,b
  4672  000B76                     u4111:
  4673  000B76  5171               	movf	??___ftmul& (0+255),w,b
  4674  000B78  6F79               	movwf	___ftmul@sign& (0+255),b
  4675  000B7A  5179               	movf	___ftmul@sign& (0+255),w,b
  4676  000B7C  A4D8               	btfss	status,2,c
  4677  000B7E  EFC3  F005         	goto	u4121
  4678  000B82  EFC5  F005         	goto	u4120
  4679  000B86                     u4121:
  4680  000B86  EFCD  F005         	goto	l5973
  4681  000B8A                     u4120:
  4682  000B8A                     
  4683                           ; BSR set to: 0
  4684  000B8A  0E00               	movlw	0
  4685  000B8C  6F6B               	movwf	?___ftmul& (0+255),b
  4686  000B8E  0E00               	movlw	0
  4687  000B90  6F6C               	movwf	(?___ftmul+1)& (0+255),b
  4688  000B92  0E00               	movlw	0
  4689  000B94  6F6D               	movwf	(?___ftmul+2)& (0+255),b
  4690  000B96  EF2A  F006         	goto	l1337
  4691  000B9A                     l5973:
  4692                           
  4693                           ; BSR set to: 0
  4694  000B9A  5179               	movf	___ftmul@sign& (0+255),w,b
  4695  000B9C  0F7B               	addlw	123
  4696  000B9E  2774               	addwf	___ftmul@exp& (0+255),f,b
  4697  000BA0                     
  4698                           ; BSR set to: 0
  4699  000BA0  C06D  F079         	movff	___ftmul@f1+2,___ftmul@sign
  4700  000BA4  5170               	movf	(___ftmul@f2+2)& (0+255),w,b
  4701  000BA6  1B79               	xorwf	___ftmul@sign& (0+255),f,b
  4702  000BA8  0E80               	movlw	128
  4703  000BAA  1779               	andwf	___ftmul@sign& (0+255),f,b
  4704  000BAC                     
  4705                           ; BSR set to: 0
  4706  000BAC  8F6C               	bsf	(___ftmul@f1+1)& (0+255),7,b
  4707  000BAE                     
  4708                           ; BSR set to: 0
  4709  000BAE  8F6F               	bsf	(___ftmul@f2+1)& (0+255),7,b
  4710  000BB0                     
  4711                           ; BSR set to: 0
  4712  000BB0  0EFF               	movlw	255
  4713  000BB2  176E               	andwf	___ftmul@f2& (0+255),f,b
  4714  000BB4  0EFF               	movlw	255
  4715  000BB6  176F               	andwf	(___ftmul@f2+1)& (0+255),f,b
  4716  000BB8  0E00               	movlw	0
  4717  000BBA  1770               	andwf	(___ftmul@f2+2)& (0+255),f,b
  4718  000BBC                     
  4719                           ; BSR set to: 0
  4720  000BBC  0E00               	movlw	0
  4721  000BBE  6F75               	movwf	___ftmul@f3_as_product& (0+255),b
  4722  000BC0  0E00               	movlw	0
  4723  000BC2  6F76               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  4724  000BC4  0E00               	movlw	0
  4725  000BC6  6F77               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  4726  000BC8                     
  4727                           ; BSR set to: 0
  4728  000BC8  0E07               	movlw	7
  4729  000BCA  6F78               	movwf	___ftmul@cntr& (0+255),b
  4730  000BCC                     l5987:
  4731                           
  4732                           ; BSR set to: 0
  4733  000BCC  A16B               	btfss	___ftmul@f1& (0+255),0,b
  4734  000BCE  EFEB  F005         	goto	u4131
  4735  000BD2  EFED  F005         	goto	u4130
  4736  000BD6                     u4131:
  4737  000BD6  EFF3  F005         	goto	l5991
  4738  000BDA                     u4130:
  4739  000BDA                     
  4740                           ; BSR set to: 0
  4741  000BDA  516E               	movf	___ftmul@f2& (0+255),w,b
  4742  000BDC  2775               	addwf	___ftmul@f3_as_product& (0+255),f,b
  4743  000BDE  516F               	movf	(___ftmul@f2+1)& (0+255),w,b
  4744  000BE0  2376               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  4745  000BE2  5170               	movf	(___ftmul@f2+2)& (0+255),w,b
  4746  000BE4  2377               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  4747  000BE6                     l5991:
  4748                           
  4749                           ; BSR set to: 0
  4750  000BE6  90D8               	bcf	status,0,c
  4751  000BE8  336D               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  4752  000BEA  336C               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  4753  000BEC  336B               	rrcf	___ftmul@f1& (0+255),f,b
  4754  000BEE  90D8               	bcf	status,0,c
  4755  000BF0  376E               	rlcf	___ftmul@f2& (0+255),f,b
  4756  000BF2  376F               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  4757  000BF4  3770               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  4758  000BF6                     
  4759                           ; BSR set to: 0
  4760  000BF6  2F78               	decfsz	___ftmul@cntr& (0+255),f,b
  4761  000BF8  EFE6  F005         	goto	l5987
  4762  000BFC                     
  4763                           ; BSR set to: 0
  4764  000BFC  0E09               	movlw	9
  4765  000BFE  6F78               	movwf	___ftmul@cntr& (0+255),b
  4766  000C00                     l5997:
  4767                           
  4768                           ; BSR set to: 0
  4769  000C00  A16B               	btfss	___ftmul@f1& (0+255),0,b
  4770  000C02  EF05  F006         	goto	u4141
  4771  000C06  EF07  F006         	goto	u4140
  4772  000C0A                     u4141:
  4773  000C0A  EF0D  F006         	goto	l6001
  4774  000C0E                     u4140:
  4775  000C0E                     
  4776                           ; BSR set to: 0
  4777  000C0E  516E               	movf	___ftmul@f2& (0+255),w,b
  4778  000C10  2775               	addwf	___ftmul@f3_as_product& (0+255),f,b
  4779  000C12  516F               	movf	(___ftmul@f2+1)& (0+255),w,b
  4780  000C14  2376               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  4781  000C16  5170               	movf	(___ftmul@f2+2)& (0+255),w,b
  4782  000C18  2377               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  4783  000C1A                     l6001:
  4784                           
  4785                           ; BSR set to: 0
  4786  000C1A  90D8               	bcf	status,0,c
  4787  000C1C  336D               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  4788  000C1E  336C               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  4789  000C20  336B               	rrcf	___ftmul@f1& (0+255),f,b
  4790  000C22  90D8               	bcf	status,0,c
  4791  000C24  3377               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  4792  000C26  3376               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  4793  000C28  3375               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  4794  000C2A                     
  4795                           ; BSR set to: 0
  4796  000C2A  2F78               	decfsz	___ftmul@cntr& (0+255),f,b
  4797  000C2C  EF00  F006         	goto	l5997
  4798  000C30                     
  4799                           ; BSR set to: 0
  4800  000C30  C075  F060         	movff	___ftmul@f3_as_product,___ftpack@arg
  4801  000C34  C076  F061         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  4802  000C38  C077  F062         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  4803  000C3C  C074  F063         	movff	___ftmul@exp,___ftpack@exp
  4804  000C40  C079  F064         	movff	___ftmul@sign,___ftpack@sign
  4805  000C44  EC45  F007         	call	___ftpack	;wreg free
  4806  000C48  C060  F06B         	movff	?___ftpack,?___ftmul
  4807  000C4C  C061  F06C         	movff	?___ftpack+1,?___ftmul+1
  4808  000C50  C062  F06D         	movff	?___ftpack+2,?___ftmul+2
  4809  000C54                     l1337:
  4810  000C54  0012               	return		;funcret
  4811  000C56                     __end_of___ftmul:
  4812                           	callstack 0
  4813                           
  4814 ;; *************** function ___ftpack *****************
  4815 ;; Defined at:
  4816 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\float.c"
  4817 ;; Parameters:    Size  Location     Type
  4818 ;;  arg             3    0[BANK0 ] unsigned um
  4819 ;;  exp             1    3[BANK0 ] unsigned char 
  4820 ;;  sign            1    4[BANK0 ] unsigned char 
  4821 ;; Auto vars:     Size  Location     Type
  4822 ;;		None
  4823 ;; Return value:  Size  Location     Type
  4824 ;;                  3    0[BANK0 ] float 
  4825 ;; Registers used:
  4826 ;;		wreg, status,2, status,0
  4827 ;; Tracked objects:
  4828 ;;		On entry : 0/0
  4829 ;;		On exit  : 0/0
  4830 ;;		Unchanged: 0/0
  4831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4832 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4834 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4835 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4836 ;;Total ram usage:        8 bytes
  4837 ;; Hardware stack levels used: 1
  4838 ;; Hardware stack levels required when called: 5
  4839 ;; This function calls:
  4840 ;;		Nothing
  4841 ;; This function is called by:
  4842 ;;		___ftmul
  4843 ;;		___lwtoft
  4844 ;; This function uses a non-reentrant model
  4845 ;;
  4846                           
  4847                           	psect	text36
  4848  000E8A                     __ptext36:
  4849                           	callstack 0
  4850  000E8A                     ___ftpack:
  4851                           	callstack 23
  4852  000E8A  0100               	movlb	0	; () banked
  4853  000E8C  5163               	movf	___ftpack@exp& (0+255),w,b
  4854  000E8E  B4D8               	btfsc	status,2,c
  4855  000E90  EF4C  F007         	goto	u3811
  4856  000E94  EF4E  F007         	goto	u3810
  4857  000E98                     u3811:
  4858  000E98  EF58  F007         	goto	l5767
  4859  000E9C                     u3810:
  4860  000E9C                     
  4861                           ; BSR set to: 0
  4862  000E9C  5160               	movf	___ftpack@arg& (0+255),w,b
  4863  000E9E  1161               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  4864  000EA0  1162               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  4865  000EA2  A4D8               	btfss	status,2,c
  4866  000EA4  EF56  F007         	goto	u3821
  4867  000EA8  EF58  F007         	goto	u3820
  4868  000EAC                     u3821:
  4869  000EAC  EF65  F007         	goto	l5773
  4870  000EB0                     u3820:
  4871  000EB0                     l5767:
  4872                           
  4873                           ; BSR set to: 0
  4874  000EB0  0E00               	movlw	0
  4875  000EB2  6F60               	movwf	?___ftpack& (0+255),b
  4876  000EB4  0E00               	movlw	0
  4877  000EB6  6F61               	movwf	(?___ftpack+1)& (0+255),b
  4878  000EB8  0E00               	movlw	0
  4879  000EBA  6F62               	movwf	(?___ftpack+2)& (0+255),b
  4880  000EBC  EFC9  F007         	goto	l1256
  4881  000EC0                     l5771:
  4882                           
  4883                           ; BSR set to: 0
  4884  000EC0  2B63               	incf	___ftpack@exp& (0+255),f,b
  4885  000EC2  90D8               	bcf	status,0,c
  4886  000EC4  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  4887  000EC6  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  4888  000EC8  3360               	rrcf	___ftpack@arg& (0+255),f,b
  4889  000ECA                     l5773:
  4890                           
  4891                           ; BSR set to: 0
  4892  000ECA  0E00               	movlw	0
  4893  000ECC  1560               	andwf	___ftpack@arg& (0+255),w,b
  4894  000ECE  6F65               	movwf	??___ftpack& (0+255),b
  4895  000ED0  0E00               	movlw	0
  4896  000ED2  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
  4897  000ED4  6F66               	movwf	(??___ftpack+1)& (0+255),b
  4898  000ED6  0EFE               	movlw	254
  4899  000ED8  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
  4900  000EDA  6F67               	movwf	(??___ftpack+2)& (0+255),b
  4901  000EDC  5165               	movf	??___ftpack& (0+255),w,b
  4902  000EDE  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
  4903  000EE0  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
  4904  000EE2  A4D8               	btfss	status,2,c
  4905  000EE4  EF76  F007         	goto	u3831
  4906  000EE8  EF78  F007         	goto	u3830
  4907  000EEC                     u3831:
  4908  000EEC  EF60  F007         	goto	l5771
  4909  000EF0                     u3830:
  4910  000EF0  EF85  F007         	goto	l5779
  4911  000EF4                     l5775:
  4912                           
  4913                           ; BSR set to: 0
  4914  000EF4  2B63               	incf	___ftpack@exp& (0+255),f,b
  4915  000EF6                     
  4916                           ; BSR set to: 0
  4917  000EF6  0E01               	movlw	1
  4918  000EF8  2760               	addwf	___ftpack@arg& (0+255),f,b
  4919  000EFA  0E00               	movlw	0
  4920  000EFC  2361               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  4921  000EFE  0E00               	movlw	0
  4922  000F00  2362               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  4923  000F02  90D8               	bcf	status,0,c
  4924  000F04  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  4925  000F06  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  4926  000F08  3360               	rrcf	___ftpack@arg& (0+255),f,b
  4927  000F0A                     l5779:
  4928                           
  4929                           ; BSR set to: 0
  4930  000F0A  0E00               	movlw	0
  4931  000F0C  1560               	andwf	___ftpack@arg& (0+255),w,b
  4932  000F0E  6F65               	movwf	??___ftpack& (0+255),b
  4933  000F10  0E00               	movlw	0
  4934  000F12  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
  4935  000F14  6F66               	movwf	(??___ftpack+1)& (0+255),b
  4936  000F16  0EFF               	movlw	255
  4937  000F18  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
  4938  000F1A  6F67               	movwf	(??___ftpack+2)& (0+255),b
  4939  000F1C  5165               	movf	??___ftpack& (0+255),w,b
  4940  000F1E  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
  4941  000F20  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
  4942  000F22  A4D8               	btfss	status,2,c
  4943  000F24  EF96  F007         	goto	u3841
  4944  000F28  EF98  F007         	goto	u3840
  4945  000F2C                     u3841:
  4946  000F2C  EF7A  F007         	goto	l5775
  4947  000F30                     u3840:
  4948  000F30  EF9F  F007         	goto	l5783
  4949  000F34                     l5781:
  4950                           
  4951                           ; BSR set to: 0
  4952  000F34  0763               	decf	___ftpack@exp& (0+255),f,b
  4953  000F36  90D8               	bcf	status,0,c
  4954  000F38  3760               	rlcf	___ftpack@arg& (0+255),f,b
  4955  000F3A  3761               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  4956  000F3C  3762               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  4957  000F3E                     l5783:
  4958                           
  4959                           ; BSR set to: 0
  4960  000F3E  BF61               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  4961  000F40  EFA4  F007         	goto	u3851
  4962  000F44  EFA6  F007         	goto	u3850
  4963  000F48                     u3851:
  4964  000F48  EFAE  F007         	goto	l1267
  4965  000F4C                     u3850:
  4966  000F4C                     
  4967                           ; BSR set to: 0
  4968  000F4C  0E02               	movlw	2
  4969  000F4E  6163               	cpfslt	___ftpack@exp& (0+255),b
  4970  000F50  EFAC  F007         	goto	u3861
  4971  000F54  EFAE  F007         	goto	u3860
  4972  000F58                     u3861:
  4973  000F58  EF9A  F007         	goto	l5781
  4974  000F5C                     u3860:
  4975  000F5C                     l1267:
  4976                           
  4977                           ; BSR set to: 0
  4978  000F5C  B163               	btfsc	___ftpack@exp& (0+255),0,b
  4979  000F5E  EFB3  F007         	goto	u3871
  4980  000F62  EFB5  F007         	goto	u3870
  4981  000F66                     u3871:
  4982  000F66  EFB6  F007         	goto	l5789
  4983  000F6A                     u3870:
  4984  000F6A                     
  4985                           ; BSR set to: 0
  4986  000F6A  9F61               	bcf	(___ftpack@arg+1)& (0+255),7,b
  4987  000F6C                     l5789:
  4988                           
  4989                           ; BSR set to: 0
  4990  000F6C  90D8               	bcf	status,0,c
  4991  000F6E  3363               	rrcf	___ftpack@exp& (0+255),f,b
  4992  000F70  5163               	movf	___ftpack@exp& (0+255),w,b
  4993  000F72  1362               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  4994  000F74                     
  4995                           ; BSR set to: 0
  4996  000F74  5164               	movf	___ftpack@sign& (0+255),w,b
  4997  000F76  B4D8               	btfsc	status,2,c
  4998  000F78  EFC0  F007         	goto	u3881
  4999  000F7C  EFC2  F007         	goto	u3880
  5000  000F80                     u3881:
  5001  000F80  EFC3  F007         	goto	l5795
  5002  000F84                     u3880:
  5003  000F84                     
  5004                           ; BSR set to: 0
  5005  000F84  8F62               	bsf	(___ftpack@arg+2)& (0+255),7,b
  5006  000F86                     l5795:
  5007                           
  5008                           ; BSR set to: 0
  5009  000F86  C060  F060         	movff	___ftpack@arg,?___ftpack
  5010  000F8A  C061  F061         	movff	___ftpack@arg+1,?___ftpack+1
  5011  000F8E  C062  F062         	movff	___ftpack@arg+2,?___ftpack+2
  5012  000F92                     l1256:
  5013                           
  5014                           ; BSR set to: 0
  5015  000F92  0012               	return		;funcret
  5016  000F94                     __end_of___ftpack:
  5017                           	callstack 0
  5018                           
  5019 ;; *************** function _ADCC_GetSingleConversion *****************
  5020 ;; Defined at:
  5021 ;;		line 136 in file "mcc_generated_files/adcc.c"
  5022 ;; Parameters:    Size  Location     Type
  5023 ;;  channel         1    wreg     enum E22427
  5024 ;; Auto vars:     Size  Location     Type
  5025 ;;  channel         1    4[BANK0 ] enum E22427
  5026 ;; Return value:  Size  Location     Type
  5027 ;;                  2    0[BANK0 ] unsigned int 
  5028 ;; Registers used:
  5029 ;;		wreg, status,2, status,0
  5030 ;; Tracked objects:
  5031 ;;		On entry : 0/0
  5032 ;;		On exit  : 0/0
  5033 ;;		Unchanged: 0/0
  5034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5035 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5036 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5037 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5038 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5039 ;;Total ram usage:        5 bytes
  5040 ;; Hardware stack levels used: 1
  5041 ;; Hardware stack levels required when called: 5
  5042 ;; This function calls:
  5043 ;;		Nothing
  5044 ;; This function is called by:
  5045 ;;		_check_battery_voltage_error
  5046 ;;		_check_bus_current_error
  5047 ;; This function uses a non-reentrant model
  5048 ;;
  5049                           
  5050                           	psect	text37
  5051  001A80                     __ptext37:
  5052                           	callstack 0
  5053  001A80                     _ADCC_GetSingleConversion:
  5054                           	callstack 24
  5055                           
  5056                           ; BSR set to: 0
  5057                           ;incstack = 0
  5058                           ;ADCC_GetSingleConversion@channel stored from wreg
  5059  001A80  0100               	movlb	0	; () banked
  5060  001A82  6F64               	movwf	ADCC_GetSingleConversion@channel& (0+255),b
  5061  001A84                     
  5062                           ;adcc.c: 139: ADPCH = channel;
  5063  001A84  0060  F193  FEF1   	movff	ADCC_GetSingleConversion@channel,16113	;volatile
  5064  001A8A                     
  5065                           ;adcc.c: 142: ADCON0bits.ADON = 1;
  5066  001A8A  013E               	movlb	62	; () banked
  5067  001A8C  8FF8               	bsf	248,7,b	;volatile
  5068  001A8E                     
  5069                           ; BSR set to: 62
  5070                           ;adcc.c: 145: ADCON0bits.ADCONT = 0;
  5071  001A8E  9DF8               	bcf	248,6,b	;volatile
  5072  001A90                     
  5073                           ; BSR set to: 62
  5074                           ;adcc.c: 148: ADCON0bits.ADGO = 1;
  5075  001A90  81F8               	bsf	248,0,b	;volatile
  5076  001A92                     l177:
  5077                           
  5078                           ; BSR set to: 62
  5079  001A92  B1F8               	btfsc	248,0,b	;volatile
  5080  001A94  EF4E  F00D         	goto	u3921
  5081  001A98  EF50  F00D         	goto	u3920
  5082  001A9C                     u3921:
  5083  001A9C  EF49  F00D         	goto	l177
  5084  001AA0                     u3920:
  5085  001AA0                     
  5086                           ; BSR set to: 62
  5087                           ;adcc.c: 154: };adcc.c: 158: return ((adc_result_t)((ADRESH << 8) + ADRESL));
  5088  001AA0  51F0               	movf	240,w,b	;volatile
  5089  001AA2  0100               	movlb	0	; () banked
  5090  001AA4  6F63               	movwf	(??_ADCC_GetSingleConversion+1)& (0+255),b
  5091  001AA6  6B62               	clrf	??_ADCC_GetSingleConversion& (0+255),b
  5092  001AA8  013E               	movlb	62	; () banked
  5093  001AAA  51EF               	movf	239,w,b	;volatile
  5094  001AAC  0100               	movlb	0	; () banked
  5095  001AAE  2562               	addwf	??_ADCC_GetSingleConversion& (0+255),w,b
  5096  001AB0  6F60               	movwf	?_ADCC_GetSingleConversion& (0+255),b
  5097  001AB2  013E               	movlb	62	; () banked
  5098  001AB4  0E00               	movlw	0
  5099  001AB6  0100               	movlb	0	; () banked
  5100  001AB8  2163               	addwfc	(??_ADCC_GetSingleConversion+1)& (0+255),w,b
  5101  001ABA  6F61               	movwf	(?_ADCC_GetSingleConversion+1)& (0+255),b
  5102  001ABC                     
  5103                           ; BSR set to: 0
  5104  001ABC  0012               	return		;funcret
  5105  001ABE                     __end_of_ADCC_GetSingleConversion:
  5106                           	callstack 0
  5107                           
  5108 ;; *************** function _can_init *****************
  5109 ;; Defined at:
  5110 ;;		line 16 in file "canlib/pic18f26k83/pic18f26k83_can.c"
  5111 ;; Parameters:    Size  Location     Type
  5112 ;;  timing          2    0[BANK0 ] PTR const struct .
  5113 ;;		 -> main@can_setup(7), 
  5114 ;;  receive_call    2    2[BANK0 ] PTR FTN(PTR const struct
  5115 ;;		 -> can_msg_handler(1), 
  5116 ;; Auto vars:     Size  Location     Type
  5117 ;;		None
  5118 ;; Return value:  Size  Location     Type
  5119 ;;                  1    wreg      void 
  5120 ;; Registers used:
  5121 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5122 ;; Tracked objects:
  5123 ;;		On entry : 0/0
  5124 ;;		On exit  : 0/0
  5125 ;;		Unchanged: 0/0
  5126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5127 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5129 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5130 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5131 ;;Total ram usage:        5 bytes
  5132 ;; Hardware stack levels used: 1
  5133 ;; Hardware stack levels required when called: 5
  5134 ;; This function calls:
  5135 ;;		Nothing
  5136 ;; This function is called by:
  5137 ;;		_main
  5138 ;; This function uses a non-reentrant model
  5139 ;;
  5140                           
  5141                           	psect	text38
  5142  00083C                     __ptext38:
  5143                           	callstack 0
  5144  00083C                     _can_init:
  5145                           	callstack 25
  5146  00083C                     
  5147                           ;pic18f26k83_can.c: 19: can_rcv_cb = receive_callback;
  5148  00083C  C062  F031         	movff	can_init@receive_callback,_can_rcv_cb
  5149  000840  C063  F032         	movff	can_init@receive_callback+1,_can_rcv_cb+1
  5150  000844                     
  5151                           ;pic18f26k83_can.c: 22: CANCONbits.REQOP = 0b100;
  5152  000844  508F               	movf	143,w,c	;volatile
  5153  000846  0B1F               	andlw	-225
  5154  000848  0980               	iorlw	128
  5155  00084A  6E8F               	movwf	143,c	;volatile
  5156  00084C                     l6153:
  5157  00084C  388E               	swapf	142,w,c	;volatile
  5158  00084E  32E8               	rrcf	wreg,f,c
  5159  000850  0B07               	andlw	7
  5160  000852  0A04               	xorlw	4
  5161  000854  A4D8               	btfss	status,2,c
  5162  000856  EF2F  F004         	goto	u4151
  5163  00085A  EF31  F004         	goto	u4150
  5164  00085E                     u4151:
  5165  00085E  EF26  F004         	goto	l6153
  5166  000862                     u4150:
  5167  000862                     
  5168                           ;pic18f26k83_can.c: 28: ECANCONbits.MDSEL = 0;
  5169  000862  0E3F               	movlw	-193
  5170  000864  1691               	andwf	145,f,c	;volatile
  5171  000866                     
  5172                           ;pic18f26k83_can.c: 32: CIOCONbits.CLKSEL = 0;
  5173  000866  0137               	movlb	55	; () banked
  5174  000868  9100               	bcf	0,0,b	;volatile
  5175  00086A                     
  5176                           ; BSR set to: 55
  5177                           ;pic18f26k83_can.c: 34: BRGCON1bits.SJW = timing->sjw;
  5178  00086A  0100               	movlb	0	; () banked
  5179  00086C  EE20 F001          	lfsr	2,1
  5180  000870  5160               	movf	can_init@timing& (0+255),w,b
  5181  000872  26D9               	addwf	fsr2l,f,c
  5182  000874  5161               	movf	(can_init@timing+1)& (0+255),w,b
  5183  000876  22DA               	addwfc	fsr2h,f,c
  5184  000878  50DF               	movf	indf2,w,c
  5185  00087A  6F64               	movwf	??_can_init& (0+255),b
  5186  00087C  3B64               	swapf	??_can_init& (0+255),f,b
  5187  00087E  4764               	rlncf	??_can_init& (0+255),f,b
  5188  000880  4764               	rlncf	??_can_init& (0+255),f,b
  5189  000882  0137               	movlb	55	; () banked
  5190  000884  5103               	movf	3,w,b	;volatile
  5191  000886  0100               	movlb	0	; () banked
  5192  000888  1964               	xorwf	??_can_init& (0+255),w,b
  5193  00088A  0B3F               	andlw	-193
  5194  00088C  1964               	xorwf	??_can_init& (0+255),w,b
  5195  00088E  0137               	movlb	55	; () banked
  5196  000890  6F03               	movwf	3,b	;volatile
  5197  000892                     
  5198                           ; BSR set to: 55
  5199                           ;pic18f26k83_can.c: 35: BRGCON1bits.BRP = timing->brp;
  5200  000892  0060  F183  FFD9   	movff	can_init@timing,fsr2l
  5201  000898  0060  F187  FFDA   	movff	can_init@timing+1,fsr2h
  5202  00089E  50DF               	movf	indf2,w,c
  5203  0008A0  0100               	movlb	0	; () banked
  5204  0008A2  6F64               	movwf	??_can_init& (0+255),b
  5205  0008A4  0137               	movlb	55	; () banked
  5206  0008A6  5103               	movf	3,w,b	;volatile
  5207  0008A8  0100               	movlb	0	; () banked
  5208  0008AA  1964               	xorwf	??_can_init& (0+255),w,b
  5209  0008AC  0BC0               	andlw	-64
  5210  0008AE  1964               	xorwf	??_can_init& (0+255),w,b
  5211  0008B0  0137               	movlb	55	; () banked
  5212  0008B2  6F03               	movwf	3,b	;volatile
  5213  0008B4                     
  5214                           ; BSR set to: 55
  5215                           ;pic18f26k83_can.c: 36: BRGCON2bits.SEG2PHTS = timing->btlmode;
  5216  0008B4  0100               	movlb	0	; () banked
  5217  0008B6  EE20 F006          	lfsr	2,6
  5218  0008BA  5160               	movf	can_init@timing& (0+255),w,b
  5219  0008BC  26D9               	addwf	fsr2l,f,c
  5220  0008BE  5161               	movf	(can_init@timing+1)& (0+255),w,b
  5221  0008C0  22DA               	addwfc	fsr2h,f,c
  5222  0008C2  50DF               	movf	indf2,w,c
  5223  0008C4  6F64               	movwf	??_can_init& (0+255),b
  5224  0008C6  3364               	rrcf	??_can_init& (0+255),f,b
  5225  0008C8  3364               	rrcf	??_can_init& (0+255),f,b
  5226  0008CA  0137               	movlb	55	; () banked
  5227  0008CC  5104               	movf	4,w,b	;volatile
  5228  0008CE  0100               	movlb	0	; () banked
  5229  0008D0  1964               	xorwf	??_can_init& (0+255),w,b
  5230  0008D2  0B7F               	andlw	-129
  5231  0008D4  1964               	xorwf	??_can_init& (0+255),w,b
  5232  0008D6  0137               	movlb	55	; () banked
  5233  0008D8  6F04               	movwf	4,b	;volatile
  5234  0008DA                     
  5235                           ; BSR set to: 55
  5236                           ;pic18f26k83_can.c: 37: BRGCON2bits.SAM = timing->sam;
  5237  0008DA  0100               	movlb	0	; () banked
  5238  0008DC  EE20 F002          	lfsr	2,2
  5239  0008E0  5160               	movf	can_init@timing& (0+255),w,b
  5240  0008E2  26D9               	addwf	fsr2l,f,c
  5241  0008E4  5161               	movf	(can_init@timing+1)& (0+255),w,b
  5242  0008E6  22DA               	addwfc	fsr2h,f,c
  5243  0008E8  50DF               	movf	indf2,w,c
  5244  0008EA  6F64               	movwf	??_can_init& (0+255),b
  5245  0008EC  3B64               	swapf	??_can_init& (0+255),f,b
  5246  0008EE  4764               	rlncf	??_can_init& (0+255),f,b
  5247  0008F0  4764               	rlncf	??_can_init& (0+255),f,b
  5248  0008F2  0137               	movlb	55	; () banked
  5249  0008F4  5104               	movf	4,w,b	;volatile
  5250  0008F6  0100               	movlb	0	; () banked
  5251  0008F8  1964               	xorwf	??_can_init& (0+255),w,b
  5252  0008FA  0BBF               	andlw	-65
  5253  0008FC  1964               	xorwf	??_can_init& (0+255),w,b
  5254  0008FE  0137               	movlb	55	; () banked
  5255  000900  6F04               	movwf	4,b	;volatile
  5256  000902                     
  5257                           ; BSR set to: 55
  5258                           ;pic18f26k83_can.c: 38: BRGCON2bits.SEG1PH = timing->seg1ph;
  5259  000902  0100               	movlb	0	; () banked
  5260  000904  EE20 F003          	lfsr	2,3
  5261  000908  5160               	movf	can_init@timing& (0+255),w,b
  5262  00090A  26D9               	addwf	fsr2l,f,c
  5263  00090C  5161               	movf	(can_init@timing+1)& (0+255),w,b
  5264  00090E  22DA               	addwfc	fsr2h,f,c
  5265  000910  50DF               	movf	indf2,w,c
  5266  000912  6F64               	movwf	??_can_init& (0+255),b
  5267  000914  4764               	rlncf	??_can_init& (0+255),f,b
  5268  000916  4764               	rlncf	??_can_init& (0+255),f,b
  5269  000918  4764               	rlncf	??_can_init& (0+255),f,b
  5270  00091A  0137               	movlb	55	; () banked
  5271  00091C  5104               	movf	4,w,b	;volatile
  5272  00091E  0100               	movlb	0	; () banked
  5273  000920  1964               	xorwf	??_can_init& (0+255),w,b
  5274  000922  0BC7               	andlw	-57
  5275  000924  1964               	xorwf	??_can_init& (0+255),w,b
  5276  000926  0137               	movlb	55	; () banked
  5277  000928  6F04               	movwf	4,b	;volatile
  5278  00092A                     
  5279                           ; BSR set to: 55
  5280                           ;pic18f26k83_can.c: 39: BRGCON2bits.PRSEG = timing->prseg;
  5281  00092A  0100               	movlb	0	; () banked
  5282  00092C  EE20 F005          	lfsr	2,5
  5283  000930  5160               	movf	can_init@timing& (0+255),w,b
  5284  000932  26D9               	addwf	fsr2l,f,c
  5285  000934  5161               	movf	(can_init@timing+1)& (0+255),w,b
  5286  000936  22DA               	addwfc	fsr2h,f,c
  5287  000938  50DF               	movf	indf2,w,c
  5288  00093A  6F64               	movwf	??_can_init& (0+255),b
  5289  00093C  0137               	movlb	55	; () banked
  5290  00093E  5104               	movf	4,w,b	;volatile
  5291  000940  0100               	movlb	0	; () banked
  5292  000942  1964               	xorwf	??_can_init& (0+255),w,b
  5293  000944  0BF8               	andlw	-8
  5294  000946  1964               	xorwf	??_can_init& (0+255),w,b
  5295  000948  0137               	movlb	55	; () banked
  5296  00094A  6F04               	movwf	4,b	;volatile
  5297  00094C                     
  5298                           ; BSR set to: 55
  5299                           ;pic18f26k83_can.c: 40: BRGCON3bits.SEG2PH = timing->seg2ph;
  5300  00094C  0100               	movlb	0	; () banked
  5301  00094E  EE20 F004          	lfsr	2,4
  5302  000952  5160               	movf	can_init@timing& (0+255),w,b
  5303  000954  26D9               	addwf	fsr2l,f,c
  5304  000956  5161               	movf	(can_init@timing+1)& (0+255),w,b
  5305  000958  22DA               	addwfc	fsr2h,f,c
  5306  00095A  50DF               	movf	indf2,w,c
  5307  00095C  6F64               	movwf	??_can_init& (0+255),b
  5308  00095E  0137               	movlb	55	; () banked
  5309  000960  5105               	movf	5,w,b	;volatile
  5310  000962  0100               	movlb	0	; () banked
  5311  000964  1964               	xorwf	??_can_init& (0+255),w,b
  5312  000966  0BF8               	andlw	-8
  5313  000968  1964               	xorwf	??_can_init& (0+255),w,b
  5314  00096A  0137               	movlb	55	; () banked
  5315  00096C  6F05               	movwf	5,b	;volatile
  5316  00096E                     
  5317                           ; BSR set to: 55
  5318                           ;pic18f26k83_can.c: 46: BRGCON3bits.WAKDIS = 1;
  5319  00096E  8F05               	bsf	5,7,b	;volatile
  5320  000970                     
  5321                           ; BSR set to: 55
  5322                           ;pic18f26k83_can.c: 47: BRGCON3bits.WAKFIL = 0;
  5323  000970  9D05               	bcf	5,6,b	;volatile
  5324  000972                     
  5325                           ; BSR set to: 55
  5326                           ;pic18f26k83_can.c: 51: RXM0SIDH = 0;
  5327  000972  0E00               	movlw	0
  5328  000974  6FB8               	movwf	184,b	;volatile
  5329  000976                     
  5330                           ; BSR set to: 55
  5331                           ;pic18f26k83_can.c: 52: RXM0SIDL = 0;
  5332  000976  0E00               	movlw	0
  5333  000978  6FB9               	movwf	185,b	;volatile
  5334  00097A                     
  5335                           ; BSR set to: 55
  5336                           ;pic18f26k83_can.c: 53: RXM1SIDH = 0;
  5337  00097A  0E00               	movlw	0
  5338  00097C  6FBC               	movwf	188,b	;volatile
  5339  00097E                     
  5340                           ; BSR set to: 55
  5341                           ;pic18f26k83_can.c: 54: RXM1SIDL = 0;
  5342  00097E  0E00               	movlw	0
  5343  000980  6FBD               	movwf	189,b	;volatile
  5344  000982                     
  5345                           ; BSR set to: 55
  5346                           ;pic18f26k83_can.c: 58: RXB0CONbits.RXM0 = 1;
  5347  000982  8A80               	bsf	128,5,c	;volatile
  5348  000984                     
  5349                           ; BSR set to: 55
  5350                           ;pic18f26k83_can.c: 59: RXB0CONbits.RXM1 = 1;
  5351  000984  8C80               	bsf	128,6,c	;volatile
  5352  000986                     
  5353                           ; BSR set to: 55
  5354                           ;pic18f26k83_can.c: 62: RXB0CONbits.RB0DBEN = 1;
  5355  000986  8480               	bsf	128,2,c	;volatile
  5356  000988                     
  5357                           ; BSR set to: 55
  5358                           ;pic18f26k83_can.c: 66: PIE5bits.IRXIE = 1;
  5359  000988  0139               	movlb	57	; () banked
  5360  00098A  8F95               	bsf	149,7,b	;volatile
  5361  00098C                     
  5362                           ; BSR set to: 57
  5363                           ;pic18f26k83_can.c: 68: PIE5bits.WAKIE = 0;
  5364  00098C  9D95               	bcf	149,6,b	;volatile
  5365  00098E                     
  5366                           ; BSR set to: 57
  5367                           ;pic18f26k83_can.c: 70: PIE5bits.ERRIE = 1;
  5368  00098E  8B95               	bsf	149,5,b	;volatile
  5369  000990                     
  5370                           ; BSR set to: 57
  5371                           ;pic18f26k83_can.c: 72: PIE5bits.TXB2IE = 0;
  5372  000990  9995               	bcf	149,4,b	;volatile
  5373  000992                     
  5374                           ; BSR set to: 57
  5375                           ;pic18f26k83_can.c: 73: PIE5bits.TXB1IE = 0;
  5376  000992  9795               	bcf	149,3,b	;volatile
  5377  000994                     
  5378                           ; BSR set to: 57
  5379                           ;pic18f26k83_can.c: 74: PIE5bits.TXB0IE = 0;
  5380  000994  9595               	bcf	149,2,b	;volatile
  5381  000996                     
  5382                           ; BSR set to: 57
  5383                           ;pic18f26k83_can.c: 76: PIE5bits.RXB1IE = 1;
  5384  000996  8395               	bsf	149,1,b	;volatile
  5385  000998                     
  5386                           ; BSR set to: 57
  5387                           ;pic18f26k83_can.c: 77: PIE5bits.RXB0IE = 1;
  5388  000998  8195               	bsf	149,0,b	;volatile
  5389  00099A                     
  5390                           ; BSR set to: 57
  5391                           ;pic18f26k83_can.c: 80: CANCONbits.REQOP = 0;
  5392  00099A  0E1F               	movlw	-225
  5393  00099C  168F               	andwf	143,f,c	;volatile
  5394  00099E                     l6209:
  5395  00099E  388E               	swapf	142,w,c	;volatile
  5396  0009A0  32E8               	rrcf	wreg,f,c
  5397  0009A2  0B07               	andlw	7
  5398  0009A4  0900               	iorlw	0
  5399  0009A6  A4D8               	btfss	status,2,c
  5400  0009A8  EFD8  F004         	goto	u4161
  5401  0009AC  EFDA  F004         	goto	u4160
  5402  0009B0                     u4161:
  5403  0009B0  EFCF  F004         	goto	l6209
  5404  0009B4                     u4160:
  5405  0009B4  0012               	return		;funcret
  5406  0009B6                     __end_of_can_init:
  5407                           	callstack 0
  5408                           
  5409 ;; *************** function _can_generate_timing_params *****************
  5410 ;; Defined at:
  5411 ;;		line 7 in file "canlib/util/timing_util.c"
  5412 ;; Parameters:    Size  Location     Type
  5413 ;;  can_frequenc    4    0[BANK0 ] unsigned long 
  5414 ;;  timing          2    4[BANK0 ] PTR struct .
  5415 ;;		 -> main@can_setup(7), 
  5416 ;; Auto vars:     Size  Location     Type
  5417 ;;		None
  5418 ;; Return value:  Size  Location     Type
  5419 ;;                  1    wreg      unsigned char 
  5420 ;; Registers used:
  5421 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5422 ;; Tracked objects:
  5423 ;;		On entry : 0/0
  5424 ;;		On exit  : 0/0
  5425 ;;		Unchanged: 0/0
  5426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5427 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5429 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5430 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5431 ;;Total ram usage:       10 bytes
  5432 ;; Hardware stack levels used: 1
  5433 ;; Hardware stack levels required when called: 5
  5434 ;; This function calls:
  5435 ;;		Nothing
  5436 ;; This function is called by:
  5437 ;;		_main
  5438 ;; This function uses a non-reentrant model
  5439 ;;
  5440                           
  5441                           	psect	text39
  5442  00001E                     __ptext39:
  5443                           	callstack 0
  5444  00001E                     _can_generate_timing_params:
  5445                           	callstack 25
  5446  00001E                     
  5447                           ;timing_util.c: 10: switch (can_frequency) {
  5448  00001E  EFF9  F000         	goto	l6081
  5449  000022                     l6015:
  5450                           
  5451                           ; BSR set to: 0
  5452                           ;timing_util.c: 12: timing->brp = 47;
  5453  000022  0060  F193  FFD9   	movff	can_generate_timing_params@timing,fsr2l
  5454  000028  0060  F197  FFDA   	movff	can_generate_timing_params@timing+1,fsr2h
  5455  00002E  0E2F               	movlw	47
  5456  000030  6EDF               	movwf	indf2,c
  5457  000032                     
  5458                           ; BSR set to: 0
  5459                           ;timing_util.c: 13: timing->sjw = 3;
  5460  000032  EE20 F001          	lfsr	2,1
  5461  000036  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
  5462  000038  26D9               	addwf	fsr2l,f,c
  5463  00003A  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  5464  00003C  22DA               	addwfc	fsr2h,f,c
  5465  00003E  0E03               	movlw	3
  5466  000040  6EDF               	movwf	indf2,c
  5467  000042                     
  5468                           ; BSR set to: 0
  5469                           ;timing_util.c: 14: timing->btlmode = 1;
  5470  000042  EE20 F006          	lfsr	2,6
  5471  000046  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
  5472  000048  26D9               	addwf	fsr2l,f,c
  5473  00004A  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  5474  00004C  22DA               	addwfc	fsr2h,f,c
  5475  00004E  0E01               	movlw	1
  5476  000050  6EDF               	movwf	indf2,c
  5477  000052                     
  5478                           ; BSR set to: 0
  5479                           ;timing_util.c: 15: timing->sam = 0;
  5480  000052  EE20 F002          	lfsr	2,2
  5481  000056  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
  5482  000058  26D9               	addwf	fsr2l,f,c
  5483  00005A  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  5484  00005C  22DA               	addwfc	fsr2h,f,c
  5485  00005E  0E00               	movlw	0
  5486  000060  6EDF               	movwf	indf2,c
  5487  000062                     
  5488                           ; BSR set to: 0
  5489                           ;timing_util.c: 16: timing->seg1ph = 4;
  5490  000062  EE20 F003          	lfsr	2,3
  5491  000066  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
  5492  000068  26D9               	addwf	fsr2l,f,c
  5493  00006A  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  5494  00006C  22DA               	addwfc	fsr2h,f,c
  5495  00006E  0E04               	movlw	4
  5496  000070  6EDF               	movwf	indf2,c
  5497  000072                     
  5498                           ; BSR set to: 0
  5499                           ;timing_util.c: 17: timing->prseg = 0;
  5500  000072  EE20 F005          	lfsr	2,5
  5501  000076  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
  5502  000078  26D9               	addwf	fsr2l,f,c
  5503  00007A  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  5504  00007C  22DA               	addwfc	fsr2h,f,c
  5505  00007E  0E00               	movlw	0
  5506  000080  6EDF               	movwf	indf2,c
  5507  000082                     
  5508                           ; BSR set to: 0
  5509                           ;timing_util.c: 18: timing->seg2ph = 4;
  5510  000082  EE20 F004          	lfsr	2,4
  5511  000086  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
  5512  000088  26D9               	addwf	fsr2l,f,c
  5513  00008A  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  5514  00008C  22DA               	addwfc	fsr2h,f,c
  5515  00008E  0E04               	movlw	4
  5516  000090  6EDF               	movwf	indf2,c
  5517  000092  EF62  F001         	goto	l814
  5518  000096                     l6031:
  5519                           
  5520                           ; BSR set to: 0
  5521                           ;timing_util.c: 21: timing->brp = 31;
  5522  000096  0060  F193  FFD9   	movff	can_generate_timing_params@timing,fsr2l
  5523  00009C  0060  F197  FFDA   	movff	can_generate_timing_params@timing+1,fsr2h
  5524  0000A2  0E1F               	movlw	31
  5525  0000A4  6EDF               	movwf	indf2,c
  5526  0000A6                     
  5527                           ; BSR set to: 0
  5528                           ;timing_util.c: 22: timing->sjw = 3;
  5529  0000A6  EE20 F001          	lfsr	2,1
  5530  0000AA  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
  5531  0000AC  26D9               	addwf	fsr2l,f,c
  5532  0000AE  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  5533  0000B0  22DA               	addwfc	fsr2h,f,c
  5534  0000B2  0E03               	movlw	3
  5535  0000B4  6EDF               	movwf	indf2,c
  5536  0000B6                     
  5537                           ; BSR set to: 0
  5538                           ;timing_util.c: 23: timing->btlmode = 1;
  5539  0000B6  EE20 F006          	lfsr	2,6
  5540  0000BA  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
  5541  0000BC  26D9               	addwf	fsr2l,f,c
  5542  0000BE  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  5543  0000C0  22DA               	addwfc	fsr2h,f,c
  5544  0000C2  0E01               	movlw	1
  5545  0000C4  6EDF               	movwf	indf2,c
  5546  0000C6                     
  5547                           ; BSR set to: 0
  5548                           ;timing_util.c: 24: timing->sam = 0;
  5549  0000C6  EE20 F002          	lfsr	2,2
  5550  0000CA  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
  5551  0000CC  26D9               	addwf	fsr2l,f,c
  5552  0000CE  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  5553  0000D0  22DA               	addwfc	fsr2h,f,c
  5554  0000D2  0E00               	movlw	0
  5555  0000D4  6EDF               	movwf	indf2,c
  5556  0000D6                     
  5557                           ; BSR set to: 0
  5558                           ;timing_util.c: 25: timing->seg1ph = 4;
  5559  0000D6  EE20 F003          	lfsr	2,3
  5560  0000DA  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
  5561  0000DC  26D9               	addwf	fsr2l,f,c
  5562  0000DE  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  5563  0000E0  22DA               	addwfc	fsr2h,f,c
  5564  0000E2  0E04               	movlw	4
  5565  0000E4  6EDF               	movwf	indf2,c
  5566  0000E6                     
  5567                           ; BSR set to: 0
  5568                           ;timing_util.c: 26: timing->prseg = 0;
  5569  0000E6  EE20 F005          	lfsr	2,5
  5570  0000EA  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
  5571  0000EC  26D9               	addwf	fsr2l,f,c
  5572  0000EE  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  5573  0000F0  22DA               	addwfc	fsr2h,f,c
  5574  0000F2  0E00               	movlw	0
  5575  0000F4  6EDF               	movwf	indf2,c
  5576  0000F6                     
  5577                           ; BSR set to: 0
  5578                           ;timing_util.c: 27: timing->seg2ph = 4;
  5579  0000F6  EE20 F004          	lfsr	2,4
  5580  0000FA  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
  5581  0000FC  26D9               	addwf	fsr2l,f,c
  5582  0000FE  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  5583  000100  22DA               	addwfc	fsr2h,f,c
  5584  000102  0E04               	movlw	4
  5585  000104  6EDF               	movwf	indf2,c
  5586  000106  EF62  F001         	goto	l814
  5587  00010A                     l6047:
  5588                           
  5589                           ; BSR set to: 0
  5590                           ;timing_util.c: 30: timing->brp = 11;
  5591  00010A  0060  F193  FFD9   	movff	can_generate_timing_params@timing,fsr2l
  5592  000110  0060  F197  FFDA   	movff	can_generate_timing_params@timing+1,fsr2h
  5593  000116  0E0B               	movlw	11
  5594  000118  6EDF               	movwf	indf2,c
  5595  00011A                     
  5596                           ; BSR set to: 0
  5597                           ;timing_util.c: 31: timing->sjw = 3;
  5598  00011A  EE20 F001          	lfsr	2,1
  5599  00011E  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
  5600  000120  26D9               	addwf	fsr2l,f,c
  5601  000122  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  5602  000124  22DA               	addwfc	fsr2h,f,c
  5603  000126  0E03               	movlw	3
  5604  000128  6EDF               	movwf	indf2,c
  5605  00012A                     
  5606                           ; BSR set to: 0
  5607                           ;timing_util.c: 32: timing->btlmode = 1;
  5608  00012A  EE20 F006          	lfsr	2,6
  5609  00012E  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
  5610  000130  26D9               	addwf	fsr2l,f,c
  5611  000132  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  5612  000134  22DA               	addwfc	fsr2h,f,c
  5613  000136  0E01               	movlw	1
  5614  000138  6EDF               	movwf	indf2,c
  5615  00013A                     
  5616                           ; BSR set to: 0
  5617                           ;timing_util.c: 33: timing->sam = 0;
  5618  00013A  EE20 F002          	lfsr	2,2
  5619  00013E  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
  5620  000140  26D9               	addwf	fsr2l,f,c
  5621  000142  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  5622  000144  22DA               	addwfc	fsr2h,f,c
  5623  000146  0E00               	movlw	0
  5624  000148  6EDF               	movwf	indf2,c
  5625  00014A                     
  5626                           ; BSR set to: 0
  5627                           ;timing_util.c: 34: timing->seg1ph = 4;
  5628  00014A  EE20 F003          	lfsr	2,3
  5629  00014E  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
  5630  000150  26D9               	addwf	fsr2l,f,c
  5631  000152  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  5632  000154  22DA               	addwfc	fsr2h,f,c
  5633  000156  0E04               	movlw	4
  5634  000158  6EDF               	movwf	indf2,c
  5635  00015A                     
  5636                           ; BSR set to: 0
  5637                           ;timing_util.c: 35: timing->prseg = 0;
  5638  00015A  EE20 F005          	lfsr	2,5
  5639  00015E  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
  5640  000160  26D9               	addwf	fsr2l,f,c
  5641  000162  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  5642  000164  22DA               	addwfc	fsr2h,f,c
  5643  000166  0E00               	movlw	0
  5644  000168  6EDF               	movwf	indf2,c
  5645  00016A                     
  5646                           ; BSR set to: 0
  5647                           ;timing_util.c: 36: timing->seg2ph = 4;
  5648  00016A  EE20 F004          	lfsr	2,4
  5649  00016E  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
  5650  000170  26D9               	addwf	fsr2l,f,c
  5651  000172  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  5652  000174  22DA               	addwfc	fsr2h,f,c
  5653  000176  0E04               	movlw	4
  5654  000178  6EDF               	movwf	indf2,c
  5655  00017A  EF62  F001         	goto	l814
  5656  00017E                     l6063:
  5657                           
  5658                           ; BSR set to: 0
  5659                           ;timing_util.c: 39: timing->brp = 0;
  5660  00017E  0060  F193  FFD9   	movff	can_generate_timing_params@timing,fsr2l
  5661  000184  0060  F197  FFDA   	movff	can_generate_timing_params@timing+1,fsr2h
  5662  00018A  0E00               	movlw	0
  5663  00018C  6EDF               	movwf	indf2,c
  5664  00018E                     
  5665                           ; BSR set to: 0
  5666                           ;timing_util.c: 40: timing->sjw = 3;
  5667  00018E  EE20 F001          	lfsr	2,1
  5668  000192  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
  5669  000194  26D9               	addwf	fsr2l,f,c
  5670  000196  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  5671  000198  22DA               	addwfc	fsr2h,f,c
  5672  00019A  0E03               	movlw	3
  5673  00019C  6EDF               	movwf	indf2,c
  5674  00019E                     
  5675                           ; BSR set to: 0
  5676                           ;timing_util.c: 41: timing->btlmode = 1;
  5677  00019E  EE20 F006          	lfsr	2,6
  5678  0001A2  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
  5679  0001A4  26D9               	addwf	fsr2l,f,c
  5680  0001A6  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  5681  0001A8  22DA               	addwfc	fsr2h,f,c
  5682  0001AA  0E01               	movlw	1
  5683  0001AC  6EDF               	movwf	indf2,c
  5684  0001AE                     
  5685                           ; BSR set to: 0
  5686                           ;timing_util.c: 42: timing->sam = 0;
  5687  0001AE  EE20 F002          	lfsr	2,2
  5688  0001B2  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
  5689  0001B4  26D9               	addwf	fsr2l,f,c
  5690  0001B6  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  5691  0001B8  22DA               	addwfc	fsr2h,f,c
  5692  0001BA  0E00               	movlw	0
  5693  0001BC  6EDF               	movwf	indf2,c
  5694  0001BE                     
  5695                           ; BSR set to: 0
  5696                           ;timing_util.c: 43: timing->seg1ph = 4;
  5697  0001BE  EE20 F003          	lfsr	2,3
  5698  0001C2  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
  5699  0001C4  26D9               	addwf	fsr2l,f,c
  5700  0001C6  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  5701  0001C8  22DA               	addwfc	fsr2h,f,c
  5702  0001CA  0E04               	movlw	4
  5703  0001CC  6EDF               	movwf	indf2,c
  5704  0001CE                     
  5705                           ; BSR set to: 0
  5706                           ;timing_util.c: 44: timing->prseg = 0;
  5707  0001CE  EE20 F005          	lfsr	2,5
  5708  0001D2  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
  5709  0001D4  26D9               	addwf	fsr2l,f,c
  5710  0001D6  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  5711  0001D8  22DA               	addwfc	fsr2h,f,c
  5712  0001DA  0E00               	movlw	0
  5713  0001DC  6EDF               	movwf	indf2,c
  5714  0001DE                     
  5715                           ; BSR set to: 0
  5716                           ;timing_util.c: 45: timing->seg2ph = 4;
  5717  0001DE  EE20 F004          	lfsr	2,4
  5718  0001E2  5164               	movf	can_generate_timing_params@timing& (0+255),w,b
  5719  0001E4  26D9               	addwf	fsr2l,f,c
  5720  0001E6  5165               	movf	(can_generate_timing_params@timing+1)& (0+255),w,b
  5721  0001E8  22DA               	addwfc	fsr2h,f,c
  5722  0001EA  0E04               	movlw	4
  5723  0001EC  6EDF               	movwf	indf2,c
  5724  0001EE  EF62  F001         	goto	l814
  5725  0001F2                     l6081:
  5726  0001F2  C060  F066         	movff	can_generate_timing_params@can_frequency,??_can_generate_timing_params
  5727  0001F6  C061  F067         	movff	can_generate_timing_params@can_frequency+1,??_can_generate_timing_params+1
  5728  0001FA  C062  F068         	movff	can_generate_timing_params@can_frequency+2,??_can_generate_timing_params+2
  5729  0001FE  C063  F069         	movff	can_generate_timing_params@can_frequency+3,??_can_generate_timing_params+3
  5730                           
  5731                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 7 sub-sw
      +                          itches
  5732                           ; Switch size 1, requested type "simple"
  5733                           ; Number of cases is 3, Range of values is 0 to 2
  5734                           ; switch strategies available:
  5735                           ; Name         Instructions Cycles
  5736                           ; simple_byte           10     6 (average)
  5737                           ;	Chosen strategy is simple_byte
  5738  000202  0100               	movlb	0	; () banked
  5739  000204  5169               	movf	(??_can_generate_timing_params+3)& (0+255),w,b
  5740  000206  0A00               	xorlw	0	; case 0
  5741  000208  B4D8               	btfsc	status,2,c
  5742  00020A  EF49  F001         	goto	l7075
  5743  00020E  0A01               	xorlw	1	; case 1
  5744  000210  B4D8               	btfsc	status,2,c
  5745  000212  EF54  F001         	goto	l7077
  5746  000216  0A03               	xorlw	3	; case 2
  5747  000218  B4D8               	btfsc	status,2,c
  5748  00021A  EF5B  F001         	goto	l7079
  5749  00021E  EF62  F001         	goto	l814
  5750  000222                     l7067:
  5751                           
  5752                           ; BSR set to: 0
  5753                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5754                           ; Switch size 1, requested type "simple"
  5755                           ; Number of cases is 1, Range of values is 66 to 66
  5756                           ; switch strategies available:
  5757                           ; Name         Instructions Cycles
  5758                           ; simple_byte            4     3 (average)
  5759                           ;	Chosen strategy is simple_byte
  5760  000222  5167               	movf	(??_can_generate_timing_params+1)& (0+255),w,b
  5761  000224  0A42               	xorlw	66	; case 66
  5762  000226  B4D8               	btfsc	status,2,c
  5763  000228  EF18  F001         	goto	l7081
  5764  00022C  EF62  F001         	goto	l814
  5765  000230                     l7081:
  5766                           
  5767                           ; BSR set to: 0
  5768                           ; Switch size 1, requested type "simple"
  5769                           ; Number of cases is 1, Range of values is 64 to 64
  5770                           ; switch strategies available:
  5771                           ; Name         Instructions Cycles
  5772                           ; simple_byte            4     3 (average)
  5773                           ;	Chosen strategy is simple_byte
  5774  000230  5166               	movf	??_can_generate_timing_params& (0+255),w,b
  5775  000232  0A40               	xorlw	64	; case 64
  5776  000234  B4D8               	btfsc	status,2,c
  5777  000236  EFBF  F000         	goto	l6063
  5778  00023A  EF62  F001         	goto	l814
  5779  00023E                     l7069:
  5780                           
  5781                           ; BSR set to: 0
  5782                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5783                           ; Switch size 1, requested type "simple"
  5784                           ; Number of cases is 1, Range of values is 27 to 27
  5785                           ; switch strategies available:
  5786                           ; Name         Instructions Cycles
  5787                           ; simple_byte            4     3 (average)
  5788                           ;	Chosen strategy is simple_byte
  5789  00023E  5167               	movf	(??_can_generate_timing_params+1)& (0+255),w,b
  5790  000240  0A1B               	xorlw	27	; case 27
  5791  000242  B4D8               	btfsc	status,2,c
  5792  000244  EF26  F001         	goto	l7083
  5793  000248  EF62  F001         	goto	l814
  5794  00024C                     l7083:
  5795                           
  5796                           ; BSR set to: 0
  5797                           ; Switch size 1, requested type "simple"
  5798                           ; Number of cases is 1, Range of values is 0 to 0
  5799                           ; switch strategies available:
  5800                           ; Name         Instructions Cycles
  5801                           ; simple_byte            4     3 (average)
  5802                           ;	Chosen strategy is simple_byte
  5803  00024C  5166               	movf	??_can_generate_timing_params& (0+255),w,b
  5804  00024E  0A00               	xorlw	0	; case 0
  5805  000250  B4D8               	btfsc	status,2,c
  5806  000252  EF85  F000         	goto	l6047
  5807  000256  EF62  F001         	goto	l814
  5808  00025A                     l7071:
  5809                           
  5810                           ; BSR set to: 0
  5811                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5812                           ; Switch size 1, requested type "simple"
  5813                           ; Number of cases is 1, Range of values is 72 to 72
  5814                           ; switch strategies available:
  5815                           ; Name         Instructions Cycles
  5816                           ; simple_byte            4     3 (average)
  5817                           ;	Chosen strategy is simple_byte
  5818  00025A  5167               	movf	(??_can_generate_timing_params+1)& (0+255),w,b
  5819  00025C  0A48               	xorlw	72	; case 72
  5820  00025E  B4D8               	btfsc	status,2,c
  5821  000260  EF34  F001         	goto	l7085
  5822  000264  EF62  F001         	goto	l814
  5823  000268                     l7085:
  5824                           
  5825                           ; BSR set to: 0
  5826                           ; Switch size 1, requested type "simple"
  5827                           ; Number of cases is 1, Range of values is 0 to 0
  5828                           ; switch strategies available:
  5829                           ; Name         Instructions Cycles
  5830                           ; simple_byte            4     3 (average)
  5831                           ;	Chosen strategy is simple_byte
  5832  000268  5166               	movf	??_can_generate_timing_params& (0+255),w,b
  5833  00026A  0A00               	xorlw	0	; case 0
  5834  00026C  B4D8               	btfsc	status,2,c
  5835  00026E  EF4B  F000         	goto	l6031
  5836  000272  EF62  F001         	goto	l814
  5837  000276                     l7073:
  5838                           
  5839                           ; BSR set to: 0
  5840                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5841                           ; Switch size 1, requested type "simple"
  5842                           ; Number of cases is 1, Range of values is 108 to 108
  5843                           ; switch strategies available:
  5844                           ; Name         Instructions Cycles
  5845                           ; simple_byte            4     3 (average)
  5846                           ;	Chosen strategy is simple_byte
  5847  000276  5167               	movf	(??_can_generate_timing_params+1)& (0+255),w,b
  5848  000278  0A6C               	xorlw	108	; case 108
  5849  00027A  B4D8               	btfsc	status,2,c
  5850  00027C  EF42  F001         	goto	l7087
  5851  000280  EF62  F001         	goto	l814
  5852  000284                     l7087:
  5853                           
  5854                           ; BSR set to: 0
  5855                           ; Switch size 1, requested type "simple"
  5856                           ; Number of cases is 1, Range of values is 0 to 0
  5857                           ; switch strategies available:
  5858                           ; Name         Instructions Cycles
  5859                           ; simple_byte            4     3 (average)
  5860                           ;	Chosen strategy is simple_byte
  5861  000284  5166               	movf	??_can_generate_timing_params& (0+255),w,b
  5862  000286  0A00               	xorlw	0	; case 0
  5863  000288  B4D8               	btfsc	status,2,c
  5864  00028A  EF11  F000         	goto	l6015
  5865  00028E  EF62  F001         	goto	l814
  5866  000292                     l7075:
  5867                           
  5868                           ; BSR set to: 0
  5869                           ; Switch size 1, requested type "simple"
  5870                           ; Number of cases is 2, Range of values is 15 to 183
  5871                           ; switch strategies available:
  5872                           ; Name         Instructions Cycles
  5873                           ; simple_byte            7     4 (average)
  5874                           ;	Chosen strategy is simple_byte
  5875  000292  5168               	movf	(??_can_generate_timing_params+2)& (0+255),w,b
  5876  000294  0A0F               	xorlw	15	; case 15
  5877  000296  B4D8               	btfsc	status,2,c
  5878  000298  EF11  F001         	goto	l7067
  5879  00029C  0AB8               	xorlw	184	; case 183
  5880  00029E  B4D8               	btfsc	status,2,c
  5881  0002A0  EF1F  F001         	goto	l7069
  5882  0002A4  EF62  F001         	goto	l814
  5883  0002A8                     l7077:
  5884                           
  5885                           ; BSR set to: 0
  5886                           ; Switch size 1, requested type "simple"
  5887                           ; Number of cases is 1, Range of values is 232 to 232
  5888                           ; switch strategies available:
  5889                           ; Name         Instructions Cycles
  5890                           ; simple_byte            4     3 (average)
  5891                           ;	Chosen strategy is simple_byte
  5892  0002A8  5168               	movf	(??_can_generate_timing_params+2)& (0+255),w,b
  5893  0002AA  0AE8               	xorlw	232	; case 232
  5894  0002AC  B4D8               	btfsc	status,2,c
  5895  0002AE  EF2D  F001         	goto	l7071
  5896  0002B2  EF62  F001         	goto	l814
  5897  0002B6                     l7079:
  5898                           
  5899                           ; BSR set to: 0
  5900                           ; Switch size 1, requested type "simple"
  5901                           ; Number of cases is 1, Range of values is 220 to 220
  5902                           ; switch strategies available:
  5903                           ; Name         Instructions Cycles
  5904                           ; simple_byte            4     3 (average)
  5905                           ;	Chosen strategy is simple_byte
  5906  0002B6  5168               	movf	(??_can_generate_timing_params+2)& (0+255),w,b
  5907  0002B8  0ADC               	xorlw	220	; case 220
  5908  0002BA  B4D8               	btfsc	status,2,c
  5909  0002BC  EF3B  F001         	goto	l7073
  5910  0002C0  EF62  F001         	goto	l814
  5911  0002C4                     l814:
  5912                           
  5913                           ; BSR set to: 0
  5914  0002C4  0012               	return		;funcret
  5915  0002C6                     __end_of_can_generate_timing_params:
  5916                           	callstack 0
  5917                           
  5918 ;; *************** function _SYSTEM_Initialize *****************
  5919 ;; Defined at:
  5920 ;;		line 50 in file "mcc_generated_files/mcc.c"
  5921 ;; Parameters:    Size  Location     Type
  5922 ;;		None
  5923 ;; Auto vars:     Size  Location     Type
  5924 ;;		None
  5925 ;; Return value:  Size  Location     Type
  5926 ;;                  1    wreg      void 
  5927 ;; Registers used:
  5928 ;;		wreg, status,2, status,0, cstack
  5929 ;; Tracked objects:
  5930 ;;		On entry : 0/0
  5931 ;;		On exit  : 0/0
  5932 ;;		Unchanged: 0/0
  5933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5938 ;;Total ram usage:        0 bytes
  5939 ;; Hardware stack levels used: 1
  5940 ;; Hardware stack levels required when called: 6
  5941 ;; This function calls:
  5942 ;;		_ADCC_Initialize
  5943 ;;		_FVR_Initialize
  5944 ;;		_OSCILLATOR_Initialize
  5945 ;;		_PIN_MANAGER_Initialize
  5946 ;;		_PMD_Initialize
  5947 ;; This function is called by:
  5948 ;;		_main
  5949 ;; This function uses a non-reentrant model
  5950 ;;
  5951                           
  5952                           	psect	text40
  5953  001DA6                     __ptext40:
  5954                           	callstack 0
  5955  001DA6                     _SYSTEM_Initialize:
  5956                           	callstack 24
  5957  001DA6                     
  5958                           ;mcc.c: 52: PMD_Initialize();
  5959  001DA6  ECA7  F00E         	call	_PMD_Initialize	;wreg free
  5960                           
  5961                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  5962  001DAA  EC9C  F00D         	call	_PIN_MANAGER_Initialize	;wreg free
  5963  001DAE                     
  5964                           ;mcc.c: 54: OSCILLATOR_Initialize();
  5965  001DAE  EC43  F00E         	call	_OSCILLATOR_Initialize	;wreg free
  5966  001DB2                     
  5967                           ;mcc.c: 55: ADCC_Initialize();
  5968  001DB2  EC75  F00C         	call	_ADCC_Initialize	;wreg free
  5969  001DB6                     
  5970                           ;mcc.c: 56: FVR_Initialize();
  5971  001DB6  EC13  F00F         	call	_FVR_Initialize	;wreg free
  5972  001DBA  0012               	return		;funcret
  5973  001DBC                     __end_of_SYSTEM_Initialize:
  5974                           	callstack 0
  5975                           
  5976 ;; *************** function _PMD_Initialize *****************
  5977 ;; Defined at:
  5978 ;;		line 73 in file "mcc_generated_files/mcc.c"
  5979 ;; Parameters:    Size  Location     Type
  5980 ;;		None
  5981 ;; Auto vars:     Size  Location     Type
  5982 ;;		None
  5983 ;; Return value:  Size  Location     Type
  5984 ;;                  1    wreg      void 
  5985 ;; Registers used:
  5986 ;;		wreg, status,2
  5987 ;; Tracked objects:
  5988 ;;		On entry : 0/0
  5989 ;;		On exit  : 0/0
  5990 ;;		Unchanged: 0/0
  5991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5996 ;;Total ram usage:        0 bytes
  5997 ;; Hardware stack levels used: 1
  5998 ;; Hardware stack levels required when called: 5
  5999 ;; This function calls:
  6000 ;;		Nothing
  6001 ;; This function is called by:
  6002 ;;		_SYSTEM_Initialize
  6003 ;; This function uses a non-reentrant model
  6004 ;;
  6005                           
  6006                           	psect	text41
  6007  001D4E                     __ptext41:
  6008                           	callstack 0
  6009  001D4E                     _PMD_Initialize:
  6010                           	callstack 24
  6011  001D4E                     
  6012                           ;mcc.c: 76: PMD0 = 0x00;
  6013  001D4E  0E00               	movlw	0
  6014  001D50  0139               	movlb	57	; () banked
  6015  001D52  6FC0               	movwf	192,b	;volatile
  6016                           
  6017                           ;mcc.c: 78: PMD1 = 0x00;
  6018  001D54  0E00               	movlw	0
  6019  001D56  6FC1               	movwf	193,b	;volatile
  6020                           
  6021                           ;mcc.c: 80: PMD2 = 0x00;
  6022  001D58  0E00               	movlw	0
  6023  001D5A  6FC2               	movwf	194,b	;volatile
  6024                           
  6025                           ;mcc.c: 82: PMD3 = 0x00;
  6026  001D5C  0E00               	movlw	0
  6027  001D5E  6FC3               	movwf	195,b	;volatile
  6028                           
  6029                           ;mcc.c: 84: PMD4 = 0x00;
  6030  001D60  0E00               	movlw	0
  6031  001D62  6FC4               	movwf	196,b	;volatile
  6032                           
  6033                           ;mcc.c: 86: PMD5 = 0x00;
  6034  001D64  0E00               	movlw	0
  6035  001D66  6FC5               	movwf	197,b	;volatile
  6036                           
  6037                           ;mcc.c: 88: PMD6 = 0x00;
  6038  001D68  0E00               	movlw	0
  6039  001D6A  6FC6               	movwf	198,b	;volatile
  6040                           
  6041                           ;mcc.c: 90: PMD7 = 0x00;
  6042  001D6C  0E00               	movlw	0
  6043  001D6E  6FC7               	movwf	199,b	;volatile
  6044  001D70                     
  6045                           ; BSR set to: 57
  6046  001D70  0012               	return		;funcret
  6047  001D72                     __end_of_PMD_Initialize:
  6048                           	callstack 0
  6049                           
  6050 ;; *************** function _PIN_MANAGER_Initialize *****************
  6051 ;; Defined at:
  6052 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  6053 ;; Parameters:    Size  Location     Type
  6054 ;;		None
  6055 ;; Auto vars:     Size  Location     Type
  6056 ;;		None
  6057 ;; Return value:  Size  Location     Type
  6058 ;;                  1    wreg      void 
  6059 ;; Registers used:
  6060 ;;		wreg, status,2
  6061 ;; Tracked objects:
  6062 ;;		On entry : 0/0
  6063 ;;		On exit  : 0/0
  6064 ;;		Unchanged: 0/0
  6065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6070 ;;Total ram usage:        0 bytes
  6071 ;; Hardware stack levels used: 1
  6072 ;; Hardware stack levels required when called: 5
  6073 ;; This function calls:
  6074 ;;		Nothing
  6075 ;; This function is called by:
  6076 ;;		_SYSTEM_Initialize
  6077 ;; This function uses a non-reentrant model
  6078 ;;
  6079                           
  6080                           	psect	text42
  6081  001B38                     __ptext42:
  6082                           	callstack 0
  6083  001B38                     _PIN_MANAGER_Initialize:
  6084                           	callstack 24
  6085  001B38                     
  6086                           ;pin_manager.c: 62: LATA = 0x00;
  6087  001B38  0E00               	movlw	0
  6088  001B3A  6EBA               	movwf	186,c	;volatile
  6089                           
  6090                           ;pin_manager.c: 63: LATB = 0x00;
  6091  001B3C  0E00               	movlw	0
  6092  001B3E  6EBB               	movwf	187,c	;volatile
  6093                           
  6094                           ;pin_manager.c: 64: LATC = 0x00;
  6095  001B40  0E00               	movlw	0
  6096  001B42  6EBC               	movwf	188,c	;volatile
  6097  001B44                     
  6098                           ;pin_manager.c: 69: TRISA = 0xFF;
  6099  001B44  68C2               	setf	194,c	;volatile
  6100  001B46                     
  6101                           ;pin_manager.c: 70: TRISB = 0xFF;
  6102  001B46  68C3               	setf	195,c	;volatile
  6103                           
  6104                           ;pin_manager.c: 71: TRISC = 0xE7;
  6105  001B48  0EE7               	movlw	231
  6106  001B4A  6EC4               	movwf	196,c	;volatile
  6107                           
  6108                           ;pin_manager.c: 76: ANSELC = 0xE7;
  6109  001B4C  0EE7               	movlw	231
  6110  001B4E  013A               	movlb	58	; () banked
  6111  001B50  6F60               	movwf	96,b	;volatile
  6112  001B52                     
  6113                           ; BSR set to: 58
  6114                           ;pin_manager.c: 77: ANSELB = 0xFF;
  6115  001B52  6950               	setf	80,b	;volatile
  6116  001B54                     
  6117                           ; BSR set to: 58
  6118                           ;pin_manager.c: 78: ANSELA = 0xFF;
  6119  001B54  6940               	setf	64,b	;volatile
  6120                           
  6121                           ;pin_manager.c: 83: WPUE = 0x00;
  6122  001B56  0E00               	movlw	0
  6123  001B58  6F81               	movwf	129,b	;volatile
  6124                           
  6125                           ;pin_manager.c: 84: WPUB = 0x00;
  6126  001B5A  0E00               	movlw	0
  6127  001B5C  6F51               	movwf	81,b	;volatile
  6128                           
  6129                           ;pin_manager.c: 85: WPUA = 0x00;
  6130  001B5E  0E00               	movlw	0
  6131  001B60  6F41               	movwf	65,b	;volatile
  6132                           
  6133                           ;pin_manager.c: 86: WPUC = 0x00;
  6134  001B62  0E00               	movlw	0
  6135  001B64  6F61               	movwf	97,b	;volatile
  6136                           
  6137                           ;pin_manager.c: 91: ODCONA = 0x00;
  6138  001B66  0E00               	movlw	0
  6139  001B68  6F42               	movwf	66,b	;volatile
  6140                           
  6141                           ;pin_manager.c: 92: ODCONB = 0x00;
  6142  001B6A  0E00               	movlw	0
  6143  001B6C  6F52               	movwf	82,b	;volatile
  6144                           
  6145                           ;pin_manager.c: 93: ODCONC = 0x00;
  6146  001B6E  0E00               	movlw	0
  6147  001B70  6F62               	movwf	98,b	;volatile
  6148  001B72                     
  6149                           ; BSR set to: 58
  6150  001B72  0012               	return		;funcret
  6151  001B74                     __end_of_PIN_MANAGER_Initialize:
  6152                           	callstack 0
  6153                           
  6154 ;; *************** function _OSCILLATOR_Initialize *****************
  6155 ;; Defined at:
  6156 ;;		line 59 in file "mcc_generated_files/mcc.c"
  6157 ;; Parameters:    Size  Location     Type
  6158 ;;		None
  6159 ;; Auto vars:     Size  Location     Type
  6160 ;;		None
  6161 ;; Return value:  Size  Location     Type
  6162 ;;                  1    wreg      void 
  6163 ;; Registers used:
  6164 ;;		wreg, status,2, status,0
  6165 ;; Tracked objects:
  6166 ;;		On entry : 0/0
  6167 ;;		On exit  : 0/0
  6168 ;;		Unchanged: 0/0
  6169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6174 ;;Total ram usage:        0 bytes
  6175 ;; Hardware stack levels used: 1
  6176 ;; Hardware stack levels required when called: 5
  6177 ;; This function calls:
  6178 ;;		Nothing
  6179 ;; This function is called by:
  6180 ;;		_SYSTEM_Initialize
  6181 ;;		_main
  6182 ;; This function uses a non-reentrant model
  6183 ;;
  6184                           
  6185                           	psect	text43
  6186  001C86                     __ptext43:
  6187                           	callstack 0
  6188  001C86                     _OSCILLATOR_Initialize:
  6189                           	callstack 24
  6190  001C86                     
  6191                           ;mcc.c: 63: OSCCON1 = 0b01110000;
  6192  001C86  0E70               	movlw	112
  6193  001C88  0139               	movlb	57	; () banked
  6194  001C8A  6FD9               	movwf	217,b	;volatile
  6195  001C8C                     l76:
  6196                           
  6197                           ; BSR set to: 57
  6198  001C8C  A9DB               	btfss	219,4,b	;volatile
  6199  001C8E  EF4B  F00E         	goto	u2141
  6200  001C92  EF4D  F00E         	goto	u2140
  6201  001C96                     u2141:
  6202  001C96  EF46  F00E         	goto	l76
  6203  001C9A                     u2140:
  6204  001C9A                     
  6205                           ; BSR set to: 57
  6206                           ;mcc.c: 67: if (OSCCON2 != 0b01110000) {
  6207  001C9A  0E70               	movlw	112
  6208  001C9C  19DA               	xorwf	218,w,b	;volatile
  6209  001C9E  B4D8               	btfsc	status,2,c
  6210  001CA0  EF54  F00E         	goto	u2151
  6211  001CA4  EF56  F00E         	goto	u2150
  6212  001CA8                     u2151:
  6213  001CA8  EF58  F00E         	goto	l83
  6214  001CAC                     u2150:
  6215  001CAC                     l80:
  6216  001CAC  EF56  F00E         	goto	l80
  6217  001CB0                     l83:
  6218                           
  6219                           ; BSR set to: 57
  6220  001CB0  0012               	return		;funcret
  6221  001CB2                     __end_of_OSCILLATOR_Initialize:
  6222                           	callstack 0
  6223                           
  6224 ;; *************** function _FVR_Initialize *****************
  6225 ;; Defined at:
  6226 ;;		line 58 in file "mcc_generated_files/fvr.c"
  6227 ;; Parameters:    Size  Location     Type
  6228 ;;		None
  6229 ;; Auto vars:     Size  Location     Type
  6230 ;;		None
  6231 ;; Return value:  Size  Location     Type
  6232 ;;                  1    wreg      void 
  6233 ;; Registers used:
  6234 ;;		wreg, status,2
  6235 ;; Tracked objects:
  6236 ;;		On entry : 0/0
  6237 ;;		On exit  : 0/0
  6238 ;;		Unchanged: 0/0
  6239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6244 ;;Total ram usage:        0 bytes
  6245 ;; Hardware stack levels used: 1
  6246 ;; Hardware stack levels required when called: 5
  6247 ;; This function calls:
  6248 ;;		Nothing
  6249 ;; This function is called by:
  6250 ;;		_SYSTEM_Initialize
  6251 ;;		_main
  6252 ;; This function uses a non-reentrant model
  6253 ;;
  6254                           
  6255                           	psect	text44
  6256  001E26                     __ptext44:
  6257                           	callstack 0
  6258  001E26                     _FVR_Initialize:
  6259                           	callstack 24
  6260  001E26                     
  6261                           ;fvr.c: 61: FVRCON = 0x83;
  6262  001E26  0E83               	movlw	131
  6263  001E28  013E               	movlb	62	; () banked
  6264  001E2A  6FC1               	movwf	193,b	;volatile
  6265  001E2C                     
  6266                           ; BSR set to: 62
  6267  001E2C  0012               	return		;funcret
  6268  001E2E                     __end_of_FVR_Initialize:
  6269                           	callstack 0
  6270                           
  6271 ;; *************** function _ADCC_Initialize *****************
  6272 ;; Defined at:
  6273 ;;		line 61 in file "mcc_generated_files/adcc.c"
  6274 ;; Parameters:    Size  Location     Type
  6275 ;;		None
  6276 ;; Auto vars:     Size  Location     Type
  6277 ;;		None
  6278 ;; Return value:  Size  Location     Type
  6279 ;;                  1    wreg      void 
  6280 ;; Registers used:
  6281 ;;		wreg, status,2
  6282 ;; Tracked objects:
  6283 ;;		On entry : 0/0
  6284 ;;		On exit  : 0/0
  6285 ;;		Unchanged: 0/0
  6286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6291 ;;Total ram usage:        0 bytes
  6292 ;; Hardware stack levels used: 1
  6293 ;; Hardware stack levels required when called: 5
  6294 ;; This function calls:
  6295 ;;		Nothing
  6296 ;; This function is called by:
  6297 ;;		_SYSTEM_Initialize
  6298 ;;		_main
  6299 ;; This function uses a non-reentrant model
  6300 ;;
  6301                           
  6302                           	psect	text45
  6303  0018EA                     __ptext45:
  6304                           	callstack 0
  6305  0018EA                     _ADCC_Initialize:
  6306                           	callstack 24
  6307  0018EA                     
  6308                           ;adcc.c: 65: ADLTHL = 0x00;
  6309  0018EA  0E00               	movlw	0
  6310  0018EC  013E               	movlb	62	; () banked
  6311  0018EE  6FDE               	movwf	222,b	;volatile
  6312                           
  6313                           ;adcc.c: 67: ADLTHH = 0x00;
  6314  0018F0  0E00               	movlw	0
  6315  0018F2  6FDF               	movwf	223,b	;volatile
  6316                           
  6317                           ;adcc.c: 69: ADUTHL = 0x00;
  6318  0018F4  0E00               	movlw	0
  6319  0018F6  6FE0               	movwf	224,b	;volatile
  6320                           
  6321                           ;adcc.c: 71: ADUTHH = 0x00;
  6322  0018F8  0E00               	movlw	0
  6323  0018FA  6FE1               	movwf	225,b	;volatile
  6324                           
  6325                           ;adcc.c: 73: ADSTPTL = 0x00;
  6326  0018FC  0E00               	movlw	0
  6327  0018FE  6FE4               	movwf	228,b	;volatile
  6328                           
  6329                           ;adcc.c: 75: ADSTPTH = 0x00;
  6330  001900  0E00               	movlw	0
  6331  001902  6FE5               	movwf	229,b	;volatile
  6332                           
  6333                           ;adcc.c: 77: ADACCU = 0x00;
  6334  001904  0E00               	movlw	0
  6335  001906  6FEA               	movwf	234,b	;volatile
  6336                           
  6337                           ;adcc.c: 79: ADRPT = 0x00;
  6338  001908  0E00               	movlw	0
  6339  00190A  6FEC               	movwf	236,b	;volatile
  6340                           
  6341                           ;adcc.c: 81: ADPCH = 0x00;
  6342  00190C  0E00               	movlw	0
  6343  00190E  6FF1               	movwf	241,b	;volatile
  6344                           
  6345                           ;adcc.c: 83: ADACQL = 0x00;
  6346  001910  0E00               	movlw	0
  6347  001912  6FF3               	movwf	243,b	;volatile
  6348                           
  6349                           ;adcc.c: 85: ADACQH = 0x00;
  6350  001914  0E00               	movlw	0
  6351  001916  6FF4               	movwf	244,b	;volatile
  6352                           
  6353                           ;adcc.c: 87: ADCAP = 0x00;
  6354  001918  0E00               	movlw	0
  6355  00191A  6FF5               	movwf	245,b	;volatile
  6356                           
  6357                           ;adcc.c: 89: ADPREL = 0x00;
  6358  00191C  0E00               	movlw	0
  6359  00191E  6FF6               	movwf	246,b	;volatile
  6360                           
  6361                           ;adcc.c: 91: ADPREH = 0x00;
  6362  001920  0E00               	movlw	0
  6363  001922  6FF7               	movwf	247,b	;volatile
  6364                           
  6365                           ;adcc.c: 93: ADCON1 = 0x00;
  6366  001924  0E00               	movlw	0
  6367  001926  6FF9               	movwf	249,b	;volatile
  6368                           
  6369                           ;adcc.c: 95: ADCON2 = 0x00;
  6370  001928  0E00               	movlw	0
  6371  00192A  6FFA               	movwf	250,b	;volatile
  6372                           
  6373                           ;adcc.c: 97: ADCON3 = 0x00;
  6374  00192C  0E00               	movlw	0
  6375  00192E  6FFB               	movwf	251,b	;volatile
  6376                           
  6377                           ;adcc.c: 99: ADSTAT = 0x00;
  6378  001930  0E00               	movlw	0
  6379  001932  6FFC               	movwf	252,b	;volatile
  6380                           
  6381                           ;adcc.c: 101: ADREF = 0x03;
  6382  001934  0E03               	movlw	3
  6383  001936  6FFD               	movwf	253,b	;volatile
  6384                           
  6385                           ;adcc.c: 103: ADACT = 0x00;
  6386  001938  0E00               	movlw	0
  6387  00193A  6FFE               	movwf	254,b	;volatile
  6388                           
  6389                           ;adcc.c: 105: ADCLK = 0x00;
  6390  00193C  0E00               	movlw	0
  6391  00193E  6FFF               	movwf	255,b	;volatile
  6392                           
  6393                           ;adcc.c: 107: ADCON0 = 0x84;
  6394  001940  0E84               	movlw	132
  6395  001942  6FF8               	movwf	248,b	;volatile
  6396  001944                     
  6397                           ; BSR set to: 62
  6398  001944  0012               	return		;funcret
  6399  001946                     __end_of_ADCC_Initialize:
  6400                           	callstack 0
  6401                           
  6402 ;; *************** function _LED_init *****************
  6403 ;; Defined at:
  6404 ;;		line 3 in file "vent.c"
  6405 ;; Parameters:    Size  Location     Type
  6406 ;;		None
  6407 ;; Auto vars:     Size  Location     Type
  6408 ;;		None
  6409 ;; Return value:  Size  Location     Type
  6410 ;;                  1    wreg      void 
  6411 ;; Registers used:
  6412 ;;		None
  6413 ;; Tracked objects:
  6414 ;;		On entry : 0/0
  6415 ;;		On exit  : 0/0
  6416 ;;		Unchanged: 0/0
  6417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6422 ;;Total ram usage:        0 bytes
  6423 ;; Hardware stack levels used: 1
  6424 ;; Hardware stack levels required when called: 5
  6425 ;; This function calls:
  6426 ;;		Nothing
  6427 ;; This function is called by:
  6428 ;;		_main
  6429 ;; This function uses a non-reentrant model
  6430 ;;
  6431                           
  6432                           	psect	text46
  6433  001E18                     __ptext46:
  6434                           	callstack 0
  6435  001E18                     _LED_init:
  6436                           	callstack 25
  6437  001E18                     
  6438                           ;vent.c: 4: TRISC2 = 0;
  6439  001E18  94C4               	bcf	16324,2,c	;volatile
  6440                           
  6441                           ;vent.c: 5: LATC2 = 1;
  6442  001E1A  84BC               	bsf	16316,2,c	;volatile
  6443                           
  6444                           ;vent.c: 7: TRISC3 = 0;
  6445  001E1C  96C4               	bcf	16324,3,c	;volatile
  6446                           
  6447                           ;vent.c: 8: LATC3 = 1;
  6448  001E1E  86BC               	bsf	16316,3,c	;volatile
  6449                           
  6450                           ;vent.c: 10: TRISC4 = 0;
  6451  001E20  98C4               	bcf	16324,4,c	;volatile
  6452                           
  6453                           ;vent.c: 11: LATC4 = 1;
  6454  001E22  88BC               	bsf	16316,4,c	;volatile
  6455  001E24  0012               	return		;funcret
  6456  001E26                     __end_of_LED_init:
  6457                           	callstack 0
  6458                           
  6459 ;; *************** function _ADCC_DisableContinuousConversion *****************
  6460 ;; Defined at:
  6461 ;;		line 274 in file "mcc_generated_files/adcc.c"
  6462 ;; Parameters:    Size  Location     Type
  6463 ;;		None
  6464 ;; Auto vars:     Size  Location     Type
  6465 ;;		None
  6466 ;; Return value:  Size  Location     Type
  6467 ;;                  1    wreg      void 
  6468 ;; Registers used:
  6469 ;;		None
  6470 ;; Tracked objects:
  6471 ;;		On entry : 0/0
  6472 ;;		On exit  : 0/0
  6473 ;;		Unchanged: 0/0
  6474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6479 ;;Total ram usage:        0 bytes
  6480 ;; Hardware stack levels used: 1
  6481 ;; Hardware stack levels required when called: 5
  6482 ;; This function calls:
  6483 ;;		Nothing
  6484 ;; This function is called by:
  6485 ;;		_main
  6486 ;; This function uses a non-reentrant model
  6487 ;;
  6488                           
  6489                           	psect	text47
  6490  001E40                     __ptext47:
  6491                           	callstack 0
  6492  001E40                     _ADCC_DisableContinuousConversion:
  6493                           	callstack 25
  6494  001E40                     
  6495                           ;adcc.c: 277: ADCON0bits.ADCONT = 0;
  6496  001E40  013E               	movlb	62	; () banked
  6497  001E42  9DF8               	bcf	248,6,b	;volatile
  6498  001E44                     
  6499                           ; BSR set to: 62
  6500  001E44  0012               	return		;funcret
  6501  001E46                     __end_of_ADCC_DisableContinuousConversion:
  6502                           	callstack 0
  6503                           
  6504 ;; *************** function _interrupt_handler *****************
  6505 ;; Defined at:
  6506 ;;		line 128 in file "main.c"
  6507 ;; Parameters:    Size  Location     Type
  6508 ;;		None
  6509 ;; Auto vars:     Size  Location     Type
  6510 ;;		None
  6511 ;; Return value:  Size  Location     Type
  6512 ;;                  1    wreg      void 
  6513 ;; Registers used:
  6514 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  6515 ;; Tracked objects:
  6516 ;;		On entry : 0/0
  6517 ;;		On exit  : 0/0
  6518 ;;		Unchanged: 0/0
  6519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6524 ;;Total ram usage:        0 bytes
  6525 ;; Hardware stack levels used: 1
  6526 ;; Hardware stack levels required when called: 4
  6527 ;; This function calls:
  6528 ;;		_can_handle_interrupt
  6529 ;;		_timer0_handle_interrupt
  6530 ;; This function is called by:
  6531 ;;		Interrupt level 2
  6532 ;; This function uses a non-reentrant model
  6533 ;;
  6534                           
  6535                           	psect	text48
  6536  001ABE                     __ptext48:
  6537                           	callstack 0
  6538  001ABE                     _interrupt_handler:
  6539                           	callstack 21
  6540  001ABE                     
  6541                           ;main.c: 129: if (PIR5) {
  6542  001ABE  0139               	movlb	57	; () banked
  6543  001AC0  51A5               	movf	165,w,b	;volatile
  6544  001AC2  B4D8               	btfsc	status,2,c
  6545  001AC4  EF66  F00D         	goto	i2u298_41
  6546  001AC8  EF68  F00D         	goto	i2u298_40
  6547  001ACC                     i2u298_41:
  6548  001ACC  EF6A  F00D         	goto	i2l4743
  6549  001AD0                     i2u298_40:
  6550  001AD0                     
  6551                           ; BSR set to: 57
  6552                           ;main.c: 130: can_handle_interrupt();
  6553  001AD0  EC72  F002         	call	_can_handle_interrupt	;wreg free
  6554  001AD4                     i2l4743:
  6555                           
  6556                           ;main.c: 131: };main.c: 135: if (PIE3bits.TMR0IE == 1 && PIR3bits.TMR0IF == 1) {
  6557  001AD4  0139               	movlb	57	; () banked
  6558  001AD6  AF93               	btfss	147,7,b	;volatile
  6559  001AD8  EF70  F00D         	goto	i2u299_41
  6560  001ADC  EF72  F00D         	goto	i2u299_40
  6561  001AE0                     i2u299_41:
  6562  001AE0  EF7D  F00D         	goto	i2l373
  6563  001AE4                     i2u299_40:
  6564  001AE4                     
  6565                           ; BSR set to: 57
  6566  001AE4  AFA3               	btfss	163,7,b	;volatile
  6567  001AE6  EF77  F00D         	goto	i2u300_41
  6568  001AEA  EF79  F00D         	goto	i2u300_40
  6569  001AEE                     i2u300_41:
  6570  001AEE  EF7D  F00D         	goto	i2l373
  6571  001AF2                     i2u300_40:
  6572  001AF2                     
  6573                           ; BSR set to: 57
  6574                           ;main.c: 136: timer0_handle_interrupt();
  6575  001AF2  EC94  F00E         	call	_timer0_handle_interrupt	;wreg free
  6576  001AF6                     
  6577                           ;main.c: 137: PIR3bits.TMR0IF = 0;
  6578  001AF6  0139               	movlb	57	; () banked
  6579  001AF8  9FA3               	bcf	163,7,b	;volatile
  6580  001AFA                     i2l373:
  6581                           
  6582                           ; BSR set to: 57
  6583  001AFA  0011               	retfie		f
  6584  001AFC                     __end_of_interrupt_handler:
  6585                           	callstack 0
  6586                           
  6587 ;; *************** function _timer0_handle_interrupt *****************
  6588 ;; Defined at:
  6589 ;;		line 47 in file "timer.c"
  6590 ;; Parameters:    Size  Location     Type
  6591 ;;		None
  6592 ;; Auto vars:     Size  Location     Type
  6593 ;;		None
  6594 ;; Return value:  Size  Location     Type
  6595 ;;                  1    wreg      void 
  6596 ;; Registers used:
  6597 ;;		wreg, status,2, status,0
  6598 ;; Tracked objects:
  6599 ;;		On entry : 0/0
  6600 ;;		On exit  : 0/0
  6601 ;;		Unchanged: 0/0
  6602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6607 ;;Total ram usage:        0 bytes
  6608 ;; Hardware stack levels used: 1
  6609 ;; This function calls:
  6610 ;;		Nothing
  6611 ;; This function is called by:
  6612 ;;		_interrupt_handler
  6613 ;; This function uses a non-reentrant model
  6614 ;;
  6615                           
  6616                           	psect	text49
  6617  001D28                     __ptext49:
  6618                           	callstack 0
  6619  001D28                     _timer0_handle_interrupt:
  6620                           	callstack 24
  6621  001D28                     
  6622                           ;timer.c: 51: internal_count += 64;
  6623  001D28  0E40               	movlw	64
  6624  001D2A  2633               	addwf	timer0_handle_interrupt@internal_count^0,f,c
  6625                           
  6626                           ;timer.c: 52: if (internal_count > 125) {
  6627  001D2C  0E7D               	movlw	125
  6628  001D2E  6433               	cpfsgt	timer0_handle_interrupt@internal_count^0,c
  6629  001D30  EF9C  F00E         	goto	i2u97_41
  6630  001D34  EF9E  F00E         	goto	i2u97_40
  6631  001D38                     i2u97_41:
  6632  001D38  EFA6  F00E         	goto	i2l418
  6633  001D3C                     i2u97_40:
  6634  001D3C                     
  6635                           ;timer.c: 53: internal_count -= 125;
  6636  001D3C  0E7D               	movlw	125
  6637  001D3E  5E33               	subwf	timer0_handle_interrupt@internal_count^0,f,c
  6638                           
  6639                           ;timer.c: 54: millis_counter++;
  6640  001D40  0E01               	movlw	1
  6641  001D42  262D               	addwf	_millis_counter^0,f,c
  6642  001D44  0E00               	movlw	0
  6643  001D46  222E               	addwfc	(_millis_counter+1)^0,f,c
  6644  001D48  222F               	addwfc	(_millis_counter+2)^0,f,c
  6645  001D4A  2230               	addwfc	(_millis_counter+3)^0,f,c
  6646  001D4C                     i2l418:
  6647  001D4C  0012               	return		;funcret
  6648  001D4E                     __end_of_timer0_handle_interrupt:
  6649                           	callstack 0
  6650                           
  6651 ;; *************** function _can_handle_interrupt *****************
  6652 ;; Defined at:
  6653 ;;		line 120 in file "canlib/pic18f26k83/pic18f26k83_can.c"
  6654 ;; Parameters:    Size  Location     Type
  6655 ;;		None
  6656 ;; Auto vars:     Size  Location     Type
  6657 ;;  rcvd_msg       11   33[COMRAM] struct .
  6658 ;;  rcvd_msg       11   22[COMRAM] struct .
  6659 ;; Return value:  Size  Location     Type
  6660 ;;                  1    wreg      void 
  6661 ;; Registers used:
  6662 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
  6663 ;; Tracked objects:
  6664 ;;		On entry : 0/0
  6665 ;;		On exit  : 0/0
  6666 ;;		Unchanged: 0/0
  6667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6669 ;;      Locals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6670 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6671 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6672 ;;Total ram usage:       26 bytes
  6673 ;; Hardware stack levels used: 1
  6674 ;; Hardware stack levels required when called: 3
  6675 ;; This function calls:
  6676 ;;		Absolute function
  6677 ;;		_can_msg_handler
  6678 ;;		i2_memcpy
  6679 ;; This function is called by:
  6680 ;;		_interrupt_handler
  6681 ;; This function uses a non-reentrant model
  6682 ;;
  6683                           
  6684                           	psect	text50
  6685  0004E4                     __ptext50:
  6686                           	callstack 0
  6687  0004E4                     _can_handle_interrupt:
  6688                           	callstack 21
  6689  0004E4                     
  6690                           ;pic18f26k83_can.c: 124: if (COMSTATbits.RXB0OVFL || COMSTATbits.RXB1OVFL) {
  6691  0004E4  BE90               	btfsc	144,7,c	;volatile
  6692  0004E6  EF77  F002         	goto	i2u271_41
  6693  0004EA  EF79  F002         	goto	i2u271_40
  6694  0004EE                     i2u271_41:
  6695  0004EE  EF80  F002         	goto	i2l793
  6696  0004F2                     i2u271_40:
  6697  0004F2  AC90               	btfss	144,6,c	;volatile
  6698  0004F4  EF7E  F002         	goto	i2u272_41
  6699  0004F8  EF80  F002         	goto	i2u272_40
  6700  0004FC                     i2u272_41:
  6701  0004FC  EF82  F002         	goto	i2l791
  6702  000500                     i2u272_40:
  6703  000500                     i2l793:
  6704                           
  6705                           ;pic18f26k83_can.c: 125: COMSTATbits.RXB0OVFL = 0;
  6706  000500  9E90               	bcf	144,7,c	;volatile
  6707                           
  6708                           ;pic18f26k83_can.c: 126: COMSTATbits.RXB1OVFL = 0;
  6709  000502  9C90               	bcf	144,6,c	;volatile
  6710  000504                     i2l791:
  6711                           
  6712                           ;pic18f26k83_can.c: 127: };pic18f26k83_can.c: 131: if (PIR5bits.RXB0IF) {
  6713  000504  0139               	movlb	57	; () banked
  6714  000506  A1A5               	btfss	165,0,b	;volatile
  6715  000508  EF88  F002         	goto	i2u273_41
  6716  00050C  EF8A  F002         	goto	i2u273_40
  6717  000510                     i2u273_41:
  6718  000510  EFD5  F002         	goto	i2l794
  6719  000514                     i2u273_40:
  6720  000514                     
  6721                           ; BSR set to: 57
  6722                           ;pic18f26k83_can.c: 132: can_msg_t rcvd_msg;;pic18f26k83_can.c: 133: rcvd_msg.sid = (((u
      +                          int16_t)RXB0SIDH) << 3) | (RXB0SIDL >> 5);
  6723  000514  006F FE08  F013    	movff	16258,??_can_handle_interrupt	;volatile
  6724  00051A  0E05               	movlw	5
  6725  00051C  6E14               	movwf	(??_can_handle_interrupt+1)^0,c
  6726  00051E                     i2u274_45:
  6727  00051E  90D8               	bcf	status,0,c
  6728  000520  3213               	rrcf	??_can_handle_interrupt^0,f,c
  6729  000522  2E14               	decfsz	(??_can_handle_interrupt+1)^0,f,c
  6730  000524  EF8F  F002         	goto	i2u274_45
  6731  000528  5013               	movf	??_can_handle_interrupt^0,w,c
  6732  00052A  006F FE04  F015    	movff	16257,??_can_handle_interrupt+2	;volatile
  6733  000530  6A16               	clrf	(??_can_handle_interrupt+3)^0,c
  6734  000532  90D8               	bcf	status,0,c
  6735  000534  3615               	rlcf	(??_can_handle_interrupt+2)^0,f,c
  6736  000536  3616               	rlcf	(??_can_handle_interrupt+3)^0,f,c
  6737  000538  90D8               	bcf	status,0,c
  6738  00053A  3615               	rlcf	(??_can_handle_interrupt+2)^0,f,c
  6739  00053C  3616               	rlcf	(??_can_handle_interrupt+3)^0,f,c
  6740  00053E  90D8               	bcf	status,0,c
  6741  000540  3615               	rlcf	(??_can_handle_interrupt+2)^0,f,c
  6742  000542  3616               	rlcf	(??_can_handle_interrupt+3)^0,f,c
  6743  000544  1015               	iorwf	(??_can_handle_interrupt+2)^0,w,c
  6744  000546  6E17               	movwf	can_handle_interrupt@rcvd_msg^0,c
  6745  000548  5016               	movf	(??_can_handle_interrupt+3)^0,w,c
  6746  00054A  6E18               	movwf	(can_handle_interrupt@rcvd_msg+1)^0,c
  6747                           
  6748                           ;pic18f26k83_can.c: 134: rcvd_msg.data_len = RXB0DLCbits.DLC;
  6749  00054C  5085               	movf	133,w,c	;volatile
  6750  00054E  0B0F               	andlw	15
  6751  000550  6E19               	movwf	(can_handle_interrupt@rcvd_msg+2)^0,c
  6752  000552                     
  6753                           ; BSR set to: 57
  6754                           ;pic18f26k83_can.c: 135: memcpy(rcvd_msg.data, (const void *) &RXB0D0, rcvd_msg.data_len
      +                          );
  6755  000552  0E1A               	movlw	low (can_handle_interrupt@rcvd_msg+3)
  6756  000554  6E01               	movwf	i2memcpy@d1^0,c
  6757  000556  0E00               	movlw	high (can_handle_interrupt@rcvd_msg+3)
  6758  000558  6E02               	movwf	(i2memcpy@d1+1)^0,c
  6759  00055A  0E86               	movlw	134
  6760  00055C  6E03               	movwf	i2memcpy@s1^0,c
  6761  00055E  0E3F               	movlw	63
  6762  000560  6E04               	movwf	(i2memcpy@s1+1)^0,c
  6763  000562  C019  F005         	movff	can_handle_interrupt@rcvd_msg+2,i2memcpy@n
  6764  000566  6A06               	clrf	(i2memcpy@n+1)^0,c
  6765  000568  ECA3  F00C         	call	i2_memcpy	;wreg free
  6766  00056C                     
  6767                           ;pic18f26k83_can.c: 138: if ((0) != can_rcv_cb) {
  6768  00056C  5031               	movf	_can_rcv_cb^0,w,c
  6769  00056E  1032               	iorwf	(_can_rcv_cb+1)^0,w,c
  6770  000570  B4D8               	btfsc	status,2,c
  6771  000572  EFBD  F002         	goto	i2u275_41
  6772  000576  EFBF  F002         	goto	i2u275_40
  6773  00057A                     i2u275_41:
  6774  00057A  EFD0  F002         	goto	i2l4595
  6775  00057E                     i2u275_40:
  6776  00057E                     
  6777                           ;pic18f26k83_can.c: 139: can_rcv_cb(&rcvd_msg);
  6778  00057E  0E17               	movlw	low can_handle_interrupt@rcvd_msg
  6779  000580  6E0B               	movwf	can_msg_handler@msg^0,c
  6780  000582  0E00               	movlw	high can_handle_interrupt@rcvd_msg
  6781  000584  6E0C               	movwf	(can_msg_handler@msg+1)^0,c
  6782  000586  D802               	call	i2u276_48
  6783  000588  EFD0  F002         	goto	i2u276_49
  6784  00058C                     i2u276_48:
  6785  00058C  0005               	push	
  6786  00058E  6EFA               	movwf	pclath,c
  6787  000590  5031               	movf	_can_rcv_cb^0,w,c
  6788  000592  6EFD               	movwf	tosl,c
  6789  000594  5032               	movf	(_can_rcv_cb+1)^0,w,c
  6790  000596  6EFE               	movwf	tosh,c
  6791  000598  50F8               	movf	tblptru,w,c
  6792  00059A  6EFF               	movwf	tosu,c
  6793  00059C  50FA               	movf	pclath,w,c
  6794  00059E  0012               	return		;indir
  6795  0005A0                     i2u276_49:
  6796  0005A0                     i2l4595:
  6797                           
  6798                           ;pic18f26k83_can.c: 140: };pic18f26k83_can.c: 142: PIR5bits.RXB0IF = 0;
  6799  0005A0  0139               	movlb	57	; () banked
  6800  0005A2  91A5               	bcf	165,0,b	;volatile
  6801  0005A4                     
  6802                           ; BSR set to: 57
  6803                           ;pic18f26k83_can.c: 143: RXB0CONbits.RXFUL = 0;
  6804  0005A4  9E80               	bcf	128,7,c	;volatile
  6805  0005A6  EF5B  F003         	goto	i2l796
  6806  0005AA                     i2l794:
  6807                           
  6808                           ; BSR set to: 57
  6809  0005AA  A3A5               	btfss	165,1,b	;volatile
  6810  0005AC  EFDA  F002         	goto	i2u277_41
  6811  0005B0  EFDC  F002         	goto	i2u277_40
  6812  0005B4                     i2u277_41:
  6813  0005B4  EF29  F003         	goto	i2l798
  6814  0005B8                     i2u277_40:
  6815  0005B8                     
  6816                           ; BSR set to: 57
  6817                           ;pic18f26k83_can.c: 147: can_msg_t rcvd_msg;;pic18f26k83_can.c: 148: rcvd_msg.sid = (((u
      +                          int16_t)RXB1SIDH) << 3) | (RXB1SIDL >> 5);
  6818  0005B8  006D FFC8  F013    	movff	14322,??_can_handle_interrupt	;volatile
  6819  0005BE  0E05               	movlw	5
  6820  0005C0  6E14               	movwf	(??_can_handle_interrupt+1)^0,c
  6821  0005C2                     i2u278_45:
  6822  0005C2  90D8               	bcf	status,0,c
  6823  0005C4  3213               	rrcf	??_can_handle_interrupt^0,f,c
  6824  0005C6  2E14               	decfsz	(??_can_handle_interrupt+1)^0,f,c
  6825  0005C8  EFE1  F002         	goto	i2u278_45
  6826  0005CC  5013               	movf	??_can_handle_interrupt^0,w,c
  6827  0005CE  006D FFC4  F015    	movff	14321,??_can_handle_interrupt+2	;volatile
  6828  0005D4  6A16               	clrf	(??_can_handle_interrupt+3)^0,c
  6829  0005D6  90D8               	bcf	status,0,c
  6830  0005D8  3615               	rlcf	(??_can_handle_interrupt+2)^0,f,c
  6831  0005DA  3616               	rlcf	(??_can_handle_interrupt+3)^0,f,c
  6832  0005DC  90D8               	bcf	status,0,c
  6833  0005DE  3615               	rlcf	(??_can_handle_interrupt+2)^0,f,c
  6834  0005E0  3616               	rlcf	(??_can_handle_interrupt+3)^0,f,c
  6835  0005E2  90D8               	bcf	status,0,c
  6836  0005E4  3615               	rlcf	(??_can_handle_interrupt+2)^0,f,c
  6837  0005E6  3616               	rlcf	(??_can_handle_interrupt+3)^0,f,c
  6838  0005E8  1015               	iorwf	(??_can_handle_interrupt+2)^0,w,c
  6839  0005EA  6E22               	movwf	can_handle_interrupt@rcvd_msg_2151^0,c
  6840  0005EC  5016               	movf	(??_can_handle_interrupt+3)^0,w,c
  6841  0005EE  6E23               	movwf	(can_handle_interrupt@rcvd_msg_2151+1)^0,c
  6842                           
  6843                           ;pic18f26k83_can.c: 149: rcvd_msg.data_len = RXB1DLCbits.DLC;
  6844  0005F0  0137               	movlb	55	; () banked
  6845  0005F2  51F5               	movf	245,w,b	;volatile
  6846  0005F4  0B0F               	andlw	15
  6847  0005F6  6E24               	movwf	(can_handle_interrupt@rcvd_msg_2151+2)^0,c
  6848  0005F8                     
  6849                           ; BSR set to: 55
  6850                           ;pic18f26k83_can.c: 150: memcpy(rcvd_msg.data, (const void *) &RXB1D0, rcvd_msg.data_len
      +                          );
  6851  0005F8  0E25               	movlw	low (can_handle_interrupt@rcvd_msg_2151+3)
  6852  0005FA  6E01               	movwf	i2memcpy@d1^0,c
  6853  0005FC  0E00               	movlw	high (can_handle_interrupt@rcvd_msg_2151+3)
  6854  0005FE  6E02               	movwf	(i2memcpy@d1+1)^0,c
  6855  000600  0EF6               	movlw	246
  6856  000602  6E03               	movwf	i2memcpy@s1^0,c
  6857  000604  0E37               	movlw	55
  6858  000606  6E04               	movwf	(i2memcpy@s1+1)^0,c
  6859  000608  C024  F005         	movff	can_handle_interrupt@rcvd_msg_2151+2,i2memcpy@n
  6860  00060C  6A06               	clrf	(i2memcpy@n+1)^0,c
  6861  00060E  ECA3  F00C         	call	i2_memcpy	;wreg free
  6862  000612                     
  6863                           ;pic18f26k83_can.c: 153: if ((0) != can_rcv_cb) {
  6864  000612  5031               	movf	_can_rcv_cb^0,w,c
  6865  000614  1032               	iorwf	(_can_rcv_cb+1)^0,w,c
  6866  000616  B4D8               	btfsc	status,2,c
  6867  000618  EF10  F003         	goto	i2u279_41
  6868  00061C  EF12  F003         	goto	i2u279_40
  6869  000620                     i2u279_41:
  6870  000620  EF23  F003         	goto	i2l4611
  6871  000624                     i2u279_40:
  6872  000624                     
  6873                           ;pic18f26k83_can.c: 154: can_rcv_cb(&rcvd_msg);
  6874  000624  0E22               	movlw	low can_handle_interrupt@rcvd_msg_2151
  6875  000626  6E0B               	movwf	can_msg_handler@msg^0,c
  6876  000628  0E00               	movlw	high can_handle_interrupt@rcvd_msg_2151
  6877  00062A  6E0C               	movwf	(can_msg_handler@msg+1)^0,c
  6878  00062C  D802               	call	i2u280_48
  6879  00062E  EF23  F003         	goto	i2u280_49
  6880  000632                     i2u280_48:
  6881  000632  0005               	push	
  6882  000634  6EFA               	movwf	pclath,c
  6883  000636  5031               	movf	_can_rcv_cb^0,w,c
  6884  000638  6EFD               	movwf	tosl,c
  6885  00063A  5032               	movf	(_can_rcv_cb+1)^0,w,c
  6886  00063C  6EFE               	movwf	tosh,c
  6887  00063E  50F8               	movf	tblptru,w,c
  6888  000640  6EFF               	movwf	tosu,c
  6889  000642  50FA               	movf	pclath,w,c
  6890  000644  0012               	return		;indir
  6891  000646                     i2u280_49:
  6892  000646                     i2l4611:
  6893                           
  6894                           ;pic18f26k83_can.c: 155: };pic18f26k83_can.c: 157: PIR5bits.RXB1IF = 0;
  6895  000646  0139               	movlb	57	; () banked
  6896  000648  93A5               	bcf	165,1,b	;volatile
  6897  00064A                     
  6898                           ; BSR set to: 57
  6899                           ;pic18f26k83_can.c: 158: RXB1CONbits.RXFUL = 0;
  6900  00064A  0137               	movlb	55	; () banked
  6901  00064C  9FF0               	bcf	240,7,b	;volatile
  6902                           
  6903                           ;pic18f26k83_can.c: 159: }
  6904  00064E  EF5B  F003         	goto	i2l796
  6905  000652                     i2l798:
  6906                           
  6907                           ; BSR set to: 57
  6908                           ;pic18f26k83_can.c: 163: else if (PIR5bits.TXB0IF) {
  6909  000652  A5A5               	btfss	165,2,b	;volatile
  6910  000654  EF2E  F003         	goto	i2u281_41
  6911  000658  EF30  F003         	goto	i2u281_40
  6912  00065C                     i2u281_41:
  6913  00065C  EF33  F003         	goto	i2l801
  6914  000660                     i2u281_40:
  6915  000660                     
  6916                           ; BSR set to: 57
  6917                           ;pic18f26k83_can.c: 164: PIR5bits.TXB0IF = 0;
  6918  000660  95A5               	bcf	165,2,b	;volatile
  6919                           
  6920                           ;pic18f26k83_can.c: 165: return;
  6921  000662  EF5B  F003         	goto	i2l796
  6922  000666                     i2l801:
  6923                           
  6924                           ; BSR set to: 57
  6925  000666  A7A5               	btfss	165,3,b	;volatile
  6926  000668  EF38  F003         	goto	i2u282_41
  6927  00066C  EF3A  F003         	goto	i2u282_40
  6928  000670                     i2u282_41:
  6929  000670  EF3D  F003         	goto	i2l803
  6930  000674                     i2u282_40:
  6931  000674                     
  6932                           ; BSR set to: 57
  6933                           ;pic18f26k83_can.c: 167: PIR5bits.TXB1IF = 0;
  6934  000674  97A5               	bcf	165,3,b	;volatile
  6935                           
  6936                           ;pic18f26k83_can.c: 168: return;
  6937  000676  EF5B  F003         	goto	i2l796
  6938  00067A                     i2l803:
  6939                           
  6940                           ; BSR set to: 57
  6941  00067A  A9A5               	btfss	165,4,b	;volatile
  6942  00067C  EF42  F003         	goto	i2u283_41
  6943  000680  EF44  F003         	goto	i2u283_40
  6944  000684                     i2u283_41:
  6945  000684  EF47  F003         	goto	i2l805
  6946  000688                     i2u283_40:
  6947  000688                     
  6948                           ; BSR set to: 57
  6949                           ;pic18f26k83_can.c: 170: PIR5bits.TXB2IF = 0;
  6950  000688  99A5               	bcf	165,4,b	;volatile
  6951                           
  6952                           ;pic18f26k83_can.c: 171: return;
  6953  00068A  EF5B  F003         	goto	i2l796
  6954  00068E                     i2l805:
  6955                           
  6956                           ; BSR set to: 57
  6957  00068E  AFA5               	btfss	165,7,b	;volatile
  6958  000690  EF4C  F003         	goto	i2u284_41
  6959  000694  EF4E  F003         	goto	i2u284_40
  6960  000698                     i2u284_41:
  6961  000698  EF51  F003         	goto	i2l807
  6962  00069C                     i2u284_40:
  6963  00069C                     
  6964                           ; BSR set to: 57
  6965                           ;pic18f26k83_can.c: 175: PIR5bits.IRXIF = 0;
  6966  00069C  9FA5               	bcf	165,7,b	;volatile
  6967                           
  6968                           ;pic18f26k83_can.c: 176: return;
  6969  00069E  EF5B  F003         	goto	i2l796
  6970  0006A2                     i2l807:
  6971                           
  6972                           ; BSR set to: 57
  6973  0006A2  ABA5               	btfss	165,5,b	;volatile
  6974  0006A4  EF56  F003         	goto	i2u285_41
  6975  0006A8  EF58  F003         	goto	i2u285_40
  6976  0006AC                     i2u285_41:
  6977  0006AC  EF5B  F003         	goto	i2l804
  6978  0006B0                     i2u285_40:
  6979  0006B0                     
  6980                           ; BSR set to: 57
  6981                           ;pic18f26k83_can.c: 180: PIR5bits.ERRIF = 0;
  6982  0006B0  9BA5               	bcf	165,5,b	;volatile
  6983                           
  6984                           ;pic18f26k83_can.c: 181: return;
  6985  0006B2  EF5B  F003         	goto	i2l796
  6986  0006B6                     i2l804:
  6987  0006B6                     i2l796:
  6988  0006B6  0012               	return		;funcret
  6989  0006B8                     __end_of_can_handle_interrupt:
  6990                           	callstack 0
  6991                           
  6992 ;; *************** function i2_memcpy *****************
  6993 ;; Defined at:
  6994 ;;		line 27 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\memcpy.c"
  6995 ;; Parameters:    Size  Location     Type
  6996 ;;  d1              2    0[COMRAM] PTR void 
  6997 ;;		 -> txb_heartbeat@msg_sent(11), can_handle_interrupt@rcvd_msg_2151(11), can_handle_interrupt@rcvd_msg(11), TXB0D0(1)
      +, 
  6998 ;;		 -> tx_pool(100), 
  6999 ;;  s1              2    2[COMRAM] PTR const void 
  7000 ;;		 -> vent_send_status@stat_msg(11), txb_heartbeat@msg_sent(11), check_bus_current_error@error_msg(11), check_battery_
      +voltage_error@batt_msg(11), 
  7001 ;;		 -> check_battery_voltage_error@error_msg(11), RXB1D0(1), RXB0D0(1), send_status_ok@board_stat_msg(11), 
  7002 ;;		 -> main@error_msg(11), tx_pool(100), 
  7003 ;;  n               2    4[COMRAM] unsigned int 
  7004 ;; Auto vars:     Size  Location     Type
  7005 ;;  s               2    8[COMRAM] PTR const unsigned char 
  7006 ;;		 -> vent_send_status@stat_msg(11), txb_heartbeat@msg_sent(11), check_bus_current_error@error_msg(11), check_battery_
      +voltage_error@batt_msg(11), 
  7007 ;;		 -> check_battery_voltage_error@error_msg(11), RXB1D0(1), RXB0D0(1), send_status_ok@board_stat_msg(11), 
  7008 ;;		 -> main@error_msg(11), tx_pool(100), 
  7009 ;;  d               2    6[COMRAM] PTR unsigned char 
  7010 ;;		 -> txb_heartbeat@msg_sent(11), can_handle_interrupt@rcvd_msg_2151(11), can_handle_interrupt@rcvd_msg(11), TXB0D0(1)
      +, 
  7011 ;;		 -> tx_pool(100), 
  7012 ;;  tmp             1   10[COMRAM] unsigned char 
  7013 ;; Return value:  Size  Location     Type
  7014 ;;                  2    0[COMRAM] PTR void 
  7015 ;; Registers used:
  7016 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7017 ;; Tracked objects:
  7018 ;;		On entry : 0/0
  7019 ;;		On exit  : 0/0
  7020 ;;		Unchanged: 0/0
  7021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7022 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7023 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7025 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7026 ;;Total ram usage:       11 bytes
  7027 ;; Hardware stack levels used: 1
  7028 ;; This function calls:
  7029 ;;		Nothing
  7030 ;; This function is called by:
  7031 ;;		_can_handle_interrupt
  7032 ;; This function uses a non-reentrant model
  7033 ;;
  7034                           
  7035                           	psect	text51
  7036  001946                     __ptext51:
  7037                           	callstack 0
  7038  001946                     i2_memcpy:
  7039                           	callstack 23
  7040  001946  C003  F009         	movff	i2memcpy@s1,i2memcpy@s
  7041  00194A  C004  F00A         	movff	i2memcpy@s1+1,i2memcpy@s+1
  7042  00194E  C001  F007         	movff	i2memcpy@d1,i2memcpy@d
  7043  001952  C002  F008         	movff	i2memcpy@d1+1,i2memcpy@d+1
  7044  001956  EFC2  F00C         	goto	i2l4235
  7045  00195A                     i2l4227:
  7046  00195A  0060  F027  FFD9   	movff	i2memcpy@s,fsr2l
  7047  001960  0060  F02B  FFDA   	movff	i2memcpy@s+1,fsr2h
  7048  001966  50DF               	movf	indf2,w,c
  7049  001968  6E0B               	movwf	i2memcpy@tmp^0,c
  7050  00196A  4A09               	infsnz	i2memcpy@s^0,f,c
  7051  00196C  2A0A               	incf	(i2memcpy@s+1)^0,f,c
  7052  00196E  0060  F01F  FFD9   	movff	i2memcpy@d,fsr2l
  7053  001974  0060  F023  FFDA   	movff	i2memcpy@d+1,fsr2h
  7054  00197A  0060  F02F  FFDF   	movff	i2memcpy@tmp,indf2
  7055  001980  4A07               	infsnz	i2memcpy@d^0,f,c
  7056  001982  2A08               	incf	(i2memcpy@d+1)^0,f,c
  7057  001984                     i2l4235:
  7058  001984  0605               	decf	i2memcpy@n^0,f,c
  7059  001986  A0D8               	btfss	status,0,c
  7060  001988  0606               	decf	(i2memcpy@n+1)^0,f,c
  7061  00198A  2805               	incf	i2memcpy@n^0,w,c
  7062  00198C  E106               	bnz	i2u253_41
  7063  00198E  2806               	incf	(i2memcpy@n+1)^0,w,c
  7064  001990  A4D8               	btfss	status,2,c
  7065  001992  EFCD  F00C         	goto	i2u253_41
  7066  001996  EFCF  F00C         	goto	i2u253_40
  7067  00199A                     i2u253_41:
  7068  00199A  EFAD  F00C         	goto	i2l4227
  7069  00199E                     i2u253_40:
  7070  00199E  0012               	return		;funcret
  7071  0019A0                     __end_ofi2_memcpy:
  7072                           	callstack 0
  7073                           
  7074 ;; *************** function _can_msg_handler *****************
  7075 ;; Defined at:
  7076 ;;		line 141 in file "main.c"
  7077 ;; Parameters:    Size  Location     Type
  7078 ;;  msg             2   10[COMRAM] PTR const struct .
  7079 ;;		 -> can_handle_interrupt@rcvd_msg_2151(11), can_handle_interrupt@rcvd_msg(11), 
  7080 ;; Auto vars:     Size  Location     Type
  7081 ;;  cmd_type        2   16[COMRAM] int 
  7082 ;;  msg_type        2   14[COMRAM] unsigned int 
  7083 ;; Return value:  Size  Location     Type
  7084 ;;                  1    wreg      void 
  7085 ;; Registers used:
  7086 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7087 ;; Tracked objects:
  7088 ;;		On entry : 0/0
  7089 ;;		On exit  : 0/0
  7090 ;;		Unchanged: 0/0
  7091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7092 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7093 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7094 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7095 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7096 ;;Total ram usage:        8 bytes
  7097 ;; Hardware stack levels used: 1
  7098 ;; Hardware stack levels required when called: 2
  7099 ;; This function calls:
  7100 ;;		_get_board_unique_id
  7101 ;;		_get_general_cmd_type
  7102 ;;		_get_message_type
  7103 ;;		_get_req_valve_state
  7104 ;;		i2_millis
  7105 ;; This function is called by:
  7106 ;;		_main
  7107 ;;		_can_handle_interrupt
  7108 ;; This function uses a non-reentrant model
  7109 ;;
  7110                           
  7111                           	psect	text52
  7112  0009B6                     __ptext52:
  7113                           	callstack 0
  7114  0009B6                     _can_msg_handler:
  7115                           	callstack 21
  7116  0009B6                     
  7117                           ;main.c: 142: uint16_t msg_type = get_message_type(msg);
  7118  0009B6  C00B  F001         	movff	can_msg_handler@msg,get_message_type@msg
  7119  0009BA  C00C  F002         	movff	can_msg_handler@msg+1,get_message_type@msg+1
  7120  0009BE  ECFD  F00C         	call	_get_message_type	;wreg free
  7121  0009C2  C001  F00F         	movff	?_get_message_type,can_msg_handler@msg_type
  7122  0009C6  C002  F010         	movff	?_get_message_type+1,can_msg_handler@msg_type+1
  7123  0009CA                     
  7124                           ;main.c: 149: if (get_board_unique_id(msg) == 0x0B) {
  7125  0009CA  C00B  F001         	movff	can_msg_handler@msg,get_board_unique_id@msg
  7126  0009CE  C00C  F002         	movff	can_msg_handler@msg+1,get_board_unique_id@msg+1
  7127  0009D2  EC59  F00E         	call	_get_board_unique_id	;wreg free
  7128  0009D6  0A0B               	xorlw	11
  7129  0009D8  A4D8               	btfss	status,2,c
  7130  0009DA  EFF1  F004         	goto	i2u223_41
  7131  0009DE  EFF3  F004         	goto	i2u223_40
  7132  0009E2                     i2u223_41:
  7133  0009E2  EF24  F005         	goto	i2l4001
  7134  0009E6                     i2u223_40:
  7135  0009E6  EF97  F005         	goto	i2l377
  7136  0009EA                     i2l3991:
  7137                           
  7138                           ;main.c: 155: cmd_type = get_general_cmd_type(msg);
  7139  0009EA  C00B  F005         	movff	can_msg_handler@msg,get_general_cmd_type@msg
  7140  0009EE  C00C  F006         	movff	can_msg_handler@msg+1,get_general_cmd_type@msg+1
  7141  0009F2  ECD0  F00C         	call	_get_general_cmd_type	;wreg free
  7142  0009F6  C005  F011         	movff	?_get_general_cmd_type,can_msg_handler@cmd_type
  7143  0009FA  C006  F012         	movff	?_get_general_cmd_type+1,can_msg_handler@cmd_type+1
  7144  0009FE                     
  7145                           ;main.c: 156: if (cmd_type == BUS_DOWN_WARNING) {
  7146  0009FE  5011               	movf	can_msg_handler@cmd_type^0,w,c
  7147  000A00  1012               	iorwf	(can_msg_handler@cmd_type+1)^0,w,c
  7148  000A02  A4D8               	btfss	status,2,c
  7149  000A04  EF06  F005         	goto	i2u224_41
  7150  000A08  EF08  F005         	goto	i2u224_40
  7151  000A0C                     i2u224_41:
  7152  000A0C  EF8D  F005         	goto	i2l4003
  7153  000A10                     i2u224_40:
  7154  000A10                     
  7155                           ;main.c: 157: requested_valve_state = VALVE_OPEN;
  7156  000A10  0E00               	movlw	0
  7157  000A12  0100               	movlb	0	; () banked
  7158  000A14  6FDA               	movwf	_requested_valve_state& (0+255),b
  7159  000A16  EF8D  F005         	goto	i2l4003
  7160  000A1A                     i2l380:
  7161                           
  7162                           ;main.c: 158: };main.c: 159: break;
  7163  000A1A  EF8D  F005         	goto	i2l4003
  7164  000A1E                     i2l3997:
  7165                           
  7166                           ;main.c: 164: requested_valve_state = get_req_valve_state(msg);
  7167  000A1E  C00B  F005         	movff	can_msg_handler@msg,get_req_valve_state@msg
  7168  000A22  C00C  F006         	movff	can_msg_handler@msg+1,get_req_valve_state@msg+1
  7169  000A26  ECFD  F009         	call	_get_req_valve_state	;wreg free
  7170  000A2A  5005               	movf	?_get_req_valve_state^0,w,c
  7171  000A2C  0100               	movlb	0	; () banked
  7172  000A2E  6FDA               	movwf	_requested_valve_state& (0+255),b
  7173                           
  7174                           ;main.c: 165: break;
  7175  000A30  EF8D  F005         	goto	i2l4003
  7176  000A34                     i2l383:
  7177                           
  7178                           ;main.c: 168: (LATC4 = 0);
  7179  000A34  98BC               	bcf	16316,4,c	;volatile
  7180                           
  7181                           ;main.c: 169: (LATC2 = 0);
  7182  000A36  94BC               	bcf	16316,2,c	;volatile
  7183                           
  7184                           ;main.c: 170: (LATC3 = 0);
  7185  000A38  96BC               	bcf	16316,3,c	;volatile
  7186                           
  7187                           ;main.c: 171: break;
  7188  000A3A  EF8D  F005         	goto	i2l4003
  7189  000A3E                     i2l384:
  7190                           
  7191                           ;main.c: 174: (LATC4 = 1);
  7192  000A3E  88BC               	bsf	16316,4,c	;volatile
  7193                           
  7194                           ;main.c: 175: (LATC2 = 1);
  7195  000A40  84BC               	bsf	16316,2,c	;volatile
  7196                           
  7197                           ;main.c: 176: (LATC3 = 1);
  7198  000A42  86BC               	bsf	16316,3,c	;volatile
  7199                           
  7200                           ;main.c: 177: break;
  7201  000A44  EF8D  F005         	goto	i2l4003
  7202  000A48                     i2l4001:
  7203  000A48  C00F  F00D         	movff	can_msg_handler@msg_type,??_can_msg_handler
  7204  000A4C  C010  F00E         	movff	can_msg_handler@msg_type+1,??_can_msg_handler+1
  7205                           
  7206                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 6 sub-sw
      +                          itches
  7207                           ; Switch size 1, requested type "simple"
  7208                           ; Number of cases is 6, Range of values is 0 to 7
  7209                           ; switch strategies available:
  7210                           ; Name         Instructions Cycles
  7211                           ; simple_byte           19    10 (average)
  7212                           ;	Chosen strategy is simple_byte
  7213  000A50  500E               	movf	(??_can_msg_handler+1)^0,w,c
  7214  000A52  0A00               	xorlw	0	; case 0
  7215  000A54  B4D8               	btfsc	status,2,c
  7216  000A56  EF43  F005         	goto	i2l7089
  7217  000A5A  0A01               	xorlw	1	; case 1
  7218  000A5C  B4D8               	btfsc	status,2,c
  7219  000A5E  EF4E  F005         	goto	i2l7091
  7220  000A62  0A05               	xorlw	5	; case 4
  7221  000A64  B4D8               	btfsc	status,2,c
  7222  000A66  EF5D  F005         	goto	i2l7093
  7223  000A6A  0A01               	xorlw	1	; case 5
  7224  000A6C  B4D8               	btfsc	status,2,c
  7225  000A6E  EF68  F005         	goto	i2l7095
  7226  000A72  0A03               	xorlw	3	; case 6
  7227  000A74  B4D8               	btfsc	status,2,c
  7228  000A76  EF77  F005         	goto	i2l7097
  7229  000A7A  0A01               	xorlw	1	; case 7
  7230  000A7C  B4D8               	btfsc	status,2,c
  7231  000A7E  EF82  F005         	goto	i2l7099
  7232  000A82  EF8D  F005         	goto	i2l4003
  7233  000A86                     i2l7089:
  7234                           
  7235                           ; Switch size 1, requested type "simple"
  7236                           ; Number of cases is 2, Range of values is 96 to 192
  7237                           ; switch strategies available:
  7238                           ; Name         Instructions Cycles
  7239                           ; simple_byte            7     4 (average)
  7240                           ;	Chosen strategy is simple_byte
  7241  000A86  500D               	movf	??_can_msg_handler^0,w,c
  7242  000A88  0A60               	xorlw	96	; case 96
  7243  000A8A  B4D8               	btfsc	status,2,c
  7244  000A8C  EFF5  F004         	goto	i2l3991
  7245  000A90  0AA0               	xorlw	160	; case 192
  7246  000A92  B4D8               	btfsc	status,2,c
  7247  000A94  EF0F  F005         	goto	i2l3997
  7248  000A98  EF8D  F005         	goto	i2l4003
  7249  000A9C                     i2l7091:
  7250                           
  7251                           ; Switch size 1, requested type "simple"
  7252                           ; Number of cases is 3, Range of values is 32 to 224
  7253                           ; switch strategies available:
  7254                           ; Name         Instructions Cycles
  7255                           ; simple_byte           10     6 (average)
  7256                           ;	Chosen strategy is simple_byte
  7257  000A9C  500D               	movf	??_can_msg_handler^0,w,c
  7258  000A9E  0A20               	xorlw	32	; case 32
  7259  000AA0  B4D8               	btfsc	status,2,c
  7260  000AA2  EF0D  F005         	goto	i2l380
  7261  000AA6  0AA0               	xorlw	160	; case 128
  7262  000AA8  B4D8               	btfsc	status,2,c
  7263  000AAA  EF0D  F005         	goto	i2l380
  7264  000AAE  0A60               	xorlw	96	; case 224
  7265  000AB0  B4D8               	btfsc	status,2,c
  7266  000AB2  EF8D  F005         	goto	i2l4003
  7267  000AB6  EF8D  F005         	goto	i2l4003
  7268  000ABA                     i2l7093:
  7269                           
  7270                           ; Switch size 1, requested type "simple"
  7271                           ; Number of cases is 2, Range of values is 96 to 192
  7272                           ; switch strategies available:
  7273                           ; Name         Instructions Cycles
  7274                           ; simple_byte            7     4 (average)
  7275                           ;	Chosen strategy is simple_byte
  7276  000ABA  500D               	movf	??_can_msg_handler^0,w,c
  7277  000ABC  0A60               	xorlw	96	; case 96
  7278  000ABE  B4D8               	btfsc	status,2,c
  7279  000AC0  EF8D  F005         	goto	i2l4003
  7280  000AC4  0AA0               	xorlw	160	; case 192
  7281  000AC6  B4D8               	btfsc	status,2,c
  7282  000AC8  EF8D  F005         	goto	i2l4003
  7283  000ACC  EF8D  F005         	goto	i2l4003
  7284  000AD0                     i2l7095:
  7285                           
  7286                           ; Switch size 1, requested type "simple"
  7287                           ; Number of cases is 3, Range of values is 32 to 224
  7288                           ; switch strategies available:
  7289                           ; Name         Instructions Cycles
  7290                           ; simple_byte           10     6 (average)
  7291                           ;	Chosen strategy is simple_byte
  7292  000AD0  500D               	movf	??_can_msg_handler^0,w,c
  7293  000AD2  0A20               	xorlw	32	; case 32
  7294  000AD4  B4D8               	btfsc	status,2,c
  7295  000AD6  EF8D  F005         	goto	i2l4003
  7296  000ADA  0AA0               	xorlw	160	; case 128
  7297  000ADC  B4D8               	btfsc	status,2,c
  7298  000ADE  EF8D  F005         	goto	i2l4003
  7299  000AE2  0A60               	xorlw	96	; case 224
  7300  000AE4  B4D8               	btfsc	status,2,c
  7301  000AE6  EF8D  F005         	goto	i2l4003
  7302  000AEA  EF8D  F005         	goto	i2l4003
  7303  000AEE                     i2l7097:
  7304                           
  7305                           ; Switch size 1, requested type "simple"
  7306                           ; Number of cases is 2, Range of values is 64 to 160
  7307                           ; switch strategies available:
  7308                           ; Name         Instructions Cycles
  7309                           ; simple_byte            7     4 (average)
  7310                           ;	Chosen strategy is simple_byte
  7311  000AEE  500D               	movf	??_can_msg_handler^0,w,c
  7312  000AF0  0A40               	xorlw	64	; case 64
  7313  000AF2  B4D8               	btfsc	status,2,c
  7314  000AF4  EF8D  F005         	goto	i2l4003
  7315  000AF8  0AE0               	xorlw	224	; case 160
  7316  000AFA  B4D8               	btfsc	status,2,c
  7317  000AFC  EF8D  F005         	goto	i2l4003
  7318  000B00  EF8D  F005         	goto	i2l4003
  7319  000B04                     i2l7099:
  7320                           
  7321                           ; Switch size 1, requested type "simple"
  7322                           ; Number of cases is 2, Range of values is 192 to 224
  7323                           ; switch strategies available:
  7324                           ; Name         Instructions Cycles
  7325                           ; simple_byte            7     4 (average)
  7326                           ;	Chosen strategy is simple_byte
  7327  000B04  500D               	movf	??_can_msg_handler^0,w,c
  7328  000B06  0AC0               	xorlw	192	; case 192
  7329  000B08  B4D8               	btfsc	status,2,c
  7330  000B0A  EF1F  F005         	goto	i2l384
  7331  000B0E  0A20               	xorlw	32	; case 224
  7332  000B10  B4D8               	btfsc	status,2,c
  7333  000B12  EF1A  F005         	goto	i2l383
  7334  000B16  EF8D  F005         	goto	i2l4003
  7335  000B1A                     i2l4003:
  7336                           
  7337                           ;main.c: 199: last_can_traffic_timestamp_ms = millis();
  7338  000B1A  ECFB  F00E         	call	i2_millis	;wreg free
  7339  000B1E  C001  F0D1         	movff	?i2_millis,_last_can_traffic_timestamp_ms
  7340  000B22  C002  F0D2         	movff	?i2_millis+1,_last_can_traffic_timestamp_ms+1
  7341  000B26  C003  F0D3         	movff	?i2_millis+2,_last_can_traffic_timestamp_ms+2
  7342  000B2A  C004  F0D4         	movff	?i2_millis+3,_last_can_traffic_timestamp_ms+3
  7343  000B2E                     i2l377:
  7344  000B2E  0012               	return		;funcret
  7345  000B30                     __end_of_can_msg_handler:
  7346                           	callstack 0
  7347                           
  7348 ;; *************** function i2_millis *****************
  7349 ;; Defined at:
  7350 ;;		line 24 in file "timer.c"
  7351 ;; Parameters:    Size  Location     Type
  7352 ;;		None
  7353 ;; Auto vars:     Size  Location     Type
  7354 ;;		None
  7355 ;; Return value:  Size  Location     Type
  7356 ;;                  4    0[COMRAM] unsigned long 
  7357 ;; Registers used:
  7358 ;;		None
  7359 ;; Tracked objects:
  7360 ;;		On entry : 0/0
  7361 ;;		On exit  : 0/0
  7362 ;;		Unchanged: 0/0
  7363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7364 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7367 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7368 ;;Total ram usage:        4 bytes
  7369 ;; Hardware stack levels used: 1
  7370 ;; This function calls:
  7371 ;;		Nothing
  7372 ;; This function is called by:
  7373 ;;		_can_msg_handler
  7374 ;; This function uses a non-reentrant model
  7375 ;;
  7376                           
  7377                           	psect	text53
  7378  001DF6                     __ptext53:
  7379                           	callstack 0
  7380  001DF6                     i2_millis:
  7381                           	callstack 22
  7382  001DF6                     
  7383                           ;timer.c: 25: return millis_counter;
  7384  001DF6  C02D  F001         	movff	_millis_counter,?i2_millis
  7385  001DFA  C02E  F002         	movff	_millis_counter+1,?i2_millis+1
  7386  001DFE  C02F  F003         	movff	_millis_counter+2,?i2_millis+2
  7387  001E02  C030  F004         	movff	_millis_counter+3,?i2_millis+3
  7388  001E06  0012               	return		;funcret
  7389  001E08                     __end_ofi2_millis:
  7390                           	callstack 0
  7391                           
  7392 ;; *************** function _get_req_valve_state *****************
  7393 ;; Defined at:
  7394 ;;		line 467 in file "canlib/can_common.c"
  7395 ;; Parameters:    Size  Location     Type
  7396 ;;  msg             2    4[COMRAM] PTR const struct .
  7397 ;;		 -> can_handle_interrupt@rcvd_msg_2151(11), can_handle_interrupt@rcvd_msg(11), 
  7398 ;; Auto vars:     Size  Location     Type
  7399 ;;  msg_type        2    8[COMRAM] unsigned int 
  7400 ;; Return value:  Size  Location     Type
  7401 ;;                  2    4[COMRAM] int 
  7402 ;; Registers used:
  7403 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7404 ;; Tracked objects:
  7405 ;;		On entry : 0/0
  7406 ;;		On exit  : 0/0
  7407 ;;		Unchanged: 0/0
  7408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7409 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7410 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7411 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7412 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7413 ;;Total ram usage:        6 bytes
  7414 ;; Hardware stack levels used: 1
  7415 ;; Hardware stack levels required when called: 1
  7416 ;; This function calls:
  7417 ;;		_get_message_type
  7418 ;; This function is called by:
  7419 ;;		_can_msg_handler
  7420 ;; This function uses a non-reentrant model
  7421 ;;
  7422                           
  7423                           	psect	text54
  7424  0013FA                     __ptext54:
  7425                           	callstack 0
  7426  0013FA                     _get_req_valve_state:
  7427                           	callstack 21
  7428  0013FA                     
  7429                           ;can_common.c: 469: if (!msg) { return -1; }
  7430  0013FA  5005               	movf	get_req_valve_state@msg^0,w,c
  7431  0013FC  1006               	iorwf	(get_req_valve_state@msg+1)^0,w,c
  7432  0013FE  A4D8               	btfss	status,2,c
  7433  001400  EF04  F00A         	goto	i2u199_41
  7434  001404  EF06  F00A         	goto	i2u199_40
  7435  001408                     i2u199_41:
  7436  001408  EF0A  F00A         	goto	i2l3795
  7437  00140C                     i2u199_40:
  7438  00140C                     i2l3793:
  7439  00140C  6805               	setf	?_get_req_valve_state^0,c
  7440  00140E  6806               	setf	(?_get_req_valve_state+1)^0,c
  7441  001410  EF5C  F00A         	goto	i2l546
  7442  001414                     i2l3795:
  7443                           
  7444                           ;can_common.c: 471: uint16_t msg_type = get_message_type(msg);
  7445  001414  C005  F001         	movff	get_req_valve_state@msg,get_message_type@msg
  7446  001418  C006  F002         	movff	get_req_valve_state@msg+1,get_message_type@msg+1
  7447  00141C  ECFD  F00C         	call	_get_message_type	;wreg free
  7448  001420  C001  F009         	movff	?_get_message_type,get_req_valve_state@msg_type
  7449  001424  C002  F00A         	movff	?_get_message_type+1,get_req_valve_state@msg_type+1
  7450                           
  7451                           ;can_common.c: 472: switch (msg_type) {
  7452  001428  EF30  F00A         	goto	i2l3807
  7453  00142C                     i2l3797:
  7454                           
  7455                           ;can_common.c: 474: case 0x4C0:;can_common.c: 475: return msg->data[4];
  7456  00142C  EE20 F007          	lfsr	2,7
  7457  001430  5005               	movf	get_req_valve_state@msg^0,w,c
  7458  001432  26D9               	addwf	fsr2l,f,c
  7459  001434  5006               	movf	(get_req_valve_state@msg+1)^0,w,c
  7460  001436  22DA               	addwfc	fsr2h,f,c
  7461  001438  50DF               	movf	indf2,w,c
  7462  00143A  6E07               	movwf	??_get_req_valve_state^0,c
  7463  00143C  5007               	movf	??_get_req_valve_state^0,w,c
  7464  00143E  6E05               	movwf	?_get_req_valve_state^0,c
  7465  001440  6A06               	clrf	(?_get_req_valve_state+1)^0,c
  7466  001442  EF5C  F00A         	goto	i2l546
  7467  001446                     i2l3801:
  7468                           
  7469                           ;can_common.c: 478: case 0x0C0:;can_common.c: 479: return msg->data[3];
  7470  001446  EE20 F006          	lfsr	2,6
  7471  00144A  5005               	movf	get_req_valve_state@msg^0,w,c
  7472  00144C  26D9               	addwf	fsr2l,f,c
  7473  00144E  5006               	movf	(get_req_valve_state@msg+1)^0,w,c
  7474  001450  22DA               	addwfc	fsr2h,f,c
  7475  001452  50DF               	movf	indf2,w,c
  7476  001454  6E07               	movwf	??_get_req_valve_state^0,c
  7477  001456  5007               	movf	??_get_req_valve_state^0,w,c
  7478  001458  6E05               	movwf	?_get_req_valve_state^0,c
  7479  00145A  6A06               	clrf	(?_get_req_valve_state+1)^0,c
  7480  00145C  EF5C  F00A         	goto	i2l546
  7481  001460                     i2l3807:
  7482  001460  C009  F007         	movff	get_req_valve_state@msg_type,??_get_req_valve_state
  7483  001464  C00A  F008         	movff	get_req_valve_state@msg_type+1,??_get_req_valve_state+1
  7484                           
  7485                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 3 sub-sw
      +                          itches
  7486                           ; Switch size 1, requested type "simple"
  7487                           ; Number of cases is 3, Range of values is 0 to 4
  7488                           ; switch strategies available:
  7489                           ; Name         Instructions Cycles
  7490                           ; simple_byte           10     6 (average)
  7491                           ;	Chosen strategy is simple_byte
  7492  001468  5008               	movf	(??_get_req_valve_state+1)^0,w,c
  7493  00146A  0A00               	xorlw	0	; case 0
  7494  00146C  B4D8               	btfsc	status,2,c
  7495  00146E  EF43  F00A         	goto	i2l7101
  7496  001472  0A01               	xorlw	1	; case 1
  7497  001474  B4D8               	btfsc	status,2,c
  7498  001476  EF4A  F00A         	goto	i2l7103
  7499  00147A  0A05               	xorlw	5	; case 4
  7500  00147C  B4D8               	btfsc	status,2,c
  7501  00147E  EF51  F00A         	goto	i2l7105
  7502  001482  EF06  F00A         	goto	i2l3793
  7503  001486                     i2l7101:
  7504                           
  7505                           ; Switch size 1, requested type "simple"
  7506                           ; Number of cases is 1, Range of values is 192 to 192
  7507                           ; switch strategies available:
  7508                           ; Name         Instructions Cycles
  7509                           ; simple_byte            4     3 (average)
  7510                           ;	Chosen strategy is simple_byte
  7511  001486  5007               	movf	??_get_req_valve_state^0,w,c
  7512  001488  0AC0               	xorlw	192	; case 192
  7513  00148A  B4D8               	btfsc	status,2,c
  7514  00148C  EF23  F00A         	goto	i2l3801
  7515  001490  EF06  F00A         	goto	i2l3793
  7516  001494                     i2l7103:
  7517                           
  7518                           ; Switch size 1, requested type "simple"
  7519                           ; Number of cases is 1, Range of values is 32 to 32
  7520                           ; switch strategies available:
  7521                           ; Name         Instructions Cycles
  7522                           ; simple_byte            4     3 (average)
  7523                           ;	Chosen strategy is simple_byte
  7524  001494  5007               	movf	??_get_req_valve_state^0,w,c
  7525  001496  0A20               	xorlw	32	; case 32
  7526  001498  B4D8               	btfsc	status,2,c
  7527  00149A  EF23  F00A         	goto	i2l3801
  7528  00149E  EF06  F00A         	goto	i2l3793
  7529  0014A2                     i2l7105:
  7530                           
  7531                           ; Switch size 1, requested type "simple"
  7532                           ; Number of cases is 2, Range of values is 96 to 192
  7533                           ; switch strategies available:
  7534                           ; Name         Instructions Cycles
  7535                           ; simple_byte            7     4 (average)
  7536                           ;	Chosen strategy is simple_byte
  7537  0014A2  5007               	movf	??_get_req_valve_state^0,w,c
  7538  0014A4  0A60               	xorlw	96	; case 96
  7539  0014A6  B4D8               	btfsc	status,2,c
  7540  0014A8  EF16  F00A         	goto	i2l3797
  7541  0014AC  0AA0               	xorlw	160	; case 192
  7542  0014AE  B4D8               	btfsc	status,2,c
  7543  0014B0  EF16  F00A         	goto	i2l3797
  7544  0014B4  EF06  F00A         	goto	i2l3793
  7545  0014B8                     i2l546:
  7546  0014B8  0012               	return		;funcret
  7547  0014BA                     __end_of_get_req_valve_state:
  7548                           	callstack 0
  7549                           
  7550 ;; *************** function _get_general_cmd_type *****************
  7551 ;; Defined at:
  7552 ;;		line 431 in file "canlib/can_common.c"
  7553 ;; Parameters:    Size  Location     Type
  7554 ;;  msg             2    4[COMRAM] PTR const struct .
  7555 ;;		 -> can_handle_interrupt@rcvd_msg_2151(11), can_handle_interrupt@rcvd_msg(11), 
  7556 ;; Auto vars:     Size  Location     Type
  7557 ;;  msg_type        2    7[COMRAM] unsigned int 
  7558 ;; Return value:  Size  Location     Type
  7559 ;;                  2    4[COMRAM] int 
  7560 ;; Registers used:
  7561 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7562 ;; Tracked objects:
  7563 ;;		On entry : 0/0
  7564 ;;		On exit  : 0/0
  7565 ;;		Unchanged: 0/0
  7566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7567 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7568 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7569 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7570 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7571 ;;Total ram usage:        5 bytes
  7572 ;; Hardware stack levels used: 1
  7573 ;; Hardware stack levels required when called: 1
  7574 ;; This function calls:
  7575 ;;		_get_message_type
  7576 ;; This function is called by:
  7577 ;;		_can_msg_handler
  7578 ;; This function uses a non-reentrant model
  7579 ;;
  7580                           
  7581                           	psect	text55
  7582  0019A0                     __ptext55:
  7583                           	callstack 0
  7584  0019A0                     _get_general_cmd_type:
  7585                           	callstack 21
  7586  0019A0                     
  7587                           ;can_common.c: 432: if (!msg) { return -1; }
  7588  0019A0  5005               	movf	get_general_cmd_type@msg^0,w,c
  7589  0019A2  1006               	iorwf	(get_general_cmd_type@msg+1)^0,w,c
  7590  0019A4  A4D8               	btfss	status,2,c
  7591  0019A6  EFD7  F00C         	goto	i2u197_41
  7592  0019AA  EFD9  F00C         	goto	i2u197_40
  7593  0019AE                     i2u197_41:
  7594  0019AE  EFDD  F00C         	goto	i2l3781
  7595  0019B2                     i2u197_40:
  7596  0019B2                     i2l3779:
  7597  0019B2  6805               	setf	?_get_general_cmd_type^0,c
  7598  0019B4  6806               	setf	(?_get_general_cmd_type+1)^0,c
  7599  0019B6  EFFC  F00C         	goto	i2l526
  7600  0019BA                     i2l3781:
  7601                           
  7602                           ;can_common.c: 434: uint16_t msg_type = get_message_type(msg);
  7603  0019BA  C005  F001         	movff	get_general_cmd_type@msg,get_message_type@msg
  7604  0019BE  C006  F002         	movff	get_general_cmd_type@msg+1,get_message_type@msg+1
  7605  0019C2  ECFD  F00C         	call	_get_message_type	;wreg free
  7606  0019C6  C001  F008         	movff	?_get_message_type,get_general_cmd_type@msg_type
  7607  0019CA  C002  F009         	movff	?_get_message_type+1,get_general_cmd_type@msg_type+1
  7608  0019CE                     
  7609                           ;can_common.c: 435: if (msg_type == 0x060) {
  7610  0019CE  0E60               	movlw	96
  7611  0019D0  1808               	xorwf	get_general_cmd_type@msg_type^0,w,c
  7612  0019D2  1009               	iorwf	(get_general_cmd_type@msg_type+1)^0,w,c
  7613  0019D4  A4D8               	btfss	status,2,c
  7614  0019D6  EFEF  F00C         	goto	i2u198_41
  7615  0019DA  EFF1  F00C         	goto	i2u198_40
  7616  0019DE                     i2u198_41:
  7617  0019DE  EFD9  F00C         	goto	i2l3779
  7618  0019E2                     i2u198_40:
  7619  0019E2                     
  7620                           ;can_common.c: 436: return msg->data[3];
  7621  0019E2  EE20 F006          	lfsr	2,6
  7622  0019E6  5005               	movf	get_general_cmd_type@msg^0,w,c
  7623  0019E8  26D9               	addwf	fsr2l,f,c
  7624  0019EA  5006               	movf	(get_general_cmd_type@msg+1)^0,w,c
  7625  0019EC  22DA               	addwfc	fsr2h,f,c
  7626  0019EE  50DF               	movf	indf2,w,c
  7627  0019F0  6E07               	movwf	??_get_general_cmd_type^0,c
  7628  0019F2  5007               	movf	??_get_general_cmd_type^0,w,c
  7629  0019F4  6E05               	movwf	?_get_general_cmd_type^0,c
  7630  0019F6  6A06               	clrf	(?_get_general_cmd_type+1)^0,c
  7631  0019F8                     i2l526:
  7632  0019F8  0012               	return		;funcret
  7633  0019FA                     __end_of_get_general_cmd_type:
  7634                           	callstack 0
  7635                           
  7636 ;; *************** function _get_message_type *****************
  7637 ;; Defined at:
  7638 ;;		line 507 in file "canlib/can_common.c"
  7639 ;; Parameters:    Size  Location     Type
  7640 ;;  msg             2    0[COMRAM] PTR const struct .
  7641 ;;		 -> can_handle_interrupt@rcvd_msg_2151(11), can_handle_interrupt@rcvd_msg(11), 
  7642 ;; Auto vars:     Size  Location     Type
  7643 ;;		None
  7644 ;; Return value:  Size  Location     Type
  7645 ;;                  2    0[COMRAM] unsigned int 
  7646 ;; Registers used:
  7647 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7648 ;; Tracked objects:
  7649 ;;		On entry : 0/0
  7650 ;;		On exit  : 0/0
  7651 ;;		Unchanged: 0/0
  7652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7653 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7655 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7656 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7657 ;;Total ram usage:        4 bytes
  7658 ;; Hardware stack levels used: 1
  7659 ;; This function calls:
  7660 ;;		Nothing
  7661 ;; This function is called by:
  7662 ;;		_can_msg_handler
  7663 ;;		_get_general_cmd_type
  7664 ;;		_get_req_valve_state
  7665 ;;		_get_fill_info
  7666 ;;		_get_reset_board_id
  7667 ;;		_get_curr_valve_state
  7668 ;;		_get_curr_arm_state
  7669 ;;		_get_req_arm_state
  7670 ;;		_get_timestamp
  7671 ;;		_is_sensor_data
  7672 ;;		_get_imu_data
  7673 ;;		_get_analog_data
  7674 ;;		_get_altitude_data
  7675 ;;		_get_pyro_voltage_data
  7676 ;;		_get_gps_time
  7677 ;;		_get_gps_lat
  7678 ;;		_get_gps_lon
  7679 ;;		_get_gps_alt
  7680 ;;		_get_gps_info
  7681 ;;		_get_radi_info
  7682 ;;		_message_debug_level
  7683 ;; This function uses a non-reentrant model
  7684 ;;
  7685                           
  7686                           	psect	text56
  7687  0019FA                     __ptext56:
  7688                           	callstack 0
  7689  0019FA                     _get_message_type:
  7690                           	callstack 21
  7691  0019FA                     
  7692                           ;can_common.c: 510: if (!msg) { return 0; }
  7693  0019FA  5001               	movf	get_message_type@msg^0,w,c
  7694  0019FC  1002               	iorwf	(get_message_type@msg+1)^0,w,c
  7695  0019FE  A4D8               	btfss	status,2,c
  7696  001A00  EF04  F00D         	goto	i2u190_41
  7697  001A04  EF06  F00D         	goto	i2u190_40
  7698  001A08                     i2u190_41:
  7699  001A08  EF0C  F00D         	goto	i2l3725
  7700  001A0C                     i2u190_40:
  7701  001A0C  0E00               	movlw	0
  7702  001A0E  6E02               	movwf	(?_get_message_type+1)^0,c
  7703  001A10  0E00               	movlw	0
  7704  001A12  6E01               	movwf	?_get_message_type^0,c
  7705  001A14  EF1E  F00D         	goto	i2l571
  7706  001A18                     i2l3725:
  7707                           
  7708                           ;can_common.c: 512: return (msg->sid & 0x7E0);
  7709  001A18  0060  F007  FFD9   	movff	get_message_type@msg,fsr2l
  7710  001A1E  0060  F00B  FFDA   	movff	get_message_type@msg+1,fsr2h
  7711  001A24  006F FF78  F003    	movff	postinc2,??_get_message_type
  7712  001A2A  006F FF74  F004    	movff	postdec2,??_get_message_type+1
  7713  001A30  0EE0               	movlw	224
  7714  001A32  1403               	andwf	??_get_message_type^0,w,c
  7715  001A34  6E01               	movwf	?_get_message_type^0,c
  7716  001A36  0E07               	movlw	7
  7717  001A38  1404               	andwf	(??_get_message_type+1)^0,w,c
  7718  001A3A  6E02               	movwf	(?_get_message_type+1)^0,c
  7719  001A3C                     i2l571:
  7720  001A3C  0012               	return		;funcret
  7721  001A3E                     __end_of_get_message_type:
  7722                           	callstack 0
  7723                           
  7724 ;; *************** function _get_board_unique_id *****************
  7725 ;; Defined at:
  7726 ;;		line 515 in file "canlib/can_common.c"
  7727 ;; Parameters:    Size  Location     Type
  7728 ;;  msg             2    0[COMRAM] PTR const struct .
  7729 ;;		 -> can_handle_interrupt@rcvd_msg_2151(11), can_handle_interrupt@rcvd_msg(11), 
  7730 ;; Auto vars:     Size  Location     Type
  7731 ;;		None
  7732 ;; Return value:  Size  Location     Type
  7733 ;;                  1    wreg      unsigned char 
  7734 ;; Registers used:
  7735 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7736 ;; Tracked objects:
  7737 ;;		On entry : 0/0
  7738 ;;		On exit  : 0/0
  7739 ;;		Unchanged: 0/0
  7740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7741 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7744 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7745 ;;Total ram usage:        2 bytes
  7746 ;; Hardware stack levels used: 1
  7747 ;; This function calls:
  7748 ;;		Nothing
  7749 ;; This function is called by:
  7750 ;;		_can_msg_handler
  7751 ;; This function uses a non-reentrant model
  7752 ;;
  7753                           
  7754                           	psect	text57
  7755  001CB2                     __ptext57:
  7756                           	callstack 0
  7757  001CB2                     _get_board_unique_id:
  7758                           	callstack 22
  7759  001CB2                     
  7760                           ;can_common.c: 518: if (!msg) { return 0; }
  7761  001CB2  5001               	movf	get_board_unique_id@msg^0,w,c
  7762  001CB4  1002               	iorwf	(get_board_unique_id@msg+1)^0,w,c
  7763  001CB6  A4D8               	btfss	status,2,c
  7764  001CB8  EF60  F00E         	goto	i2u196_41
  7765  001CBC  EF62  F00E         	goto	i2u196_40
  7766  001CC0                     i2u196_41:
  7767  001CC0  EF65  F00E         	goto	i2l3773
  7768  001CC4                     i2u196_40:
  7769  001CC4  0E00               	movlw	0
  7770  001CC6  EF6D  F00E         	goto	i2l575
  7771  001CCA                     i2l3773:
  7772                           
  7773                           ;can_common.c: 520: return ((uint8_t) (msg->sid & 0x1F));
  7774  001CCA  0060  F007  FFD9   	movff	get_board_unique_id@msg,fsr2l
  7775  001CD0  0060  F00B  FFDA   	movff	get_board_unique_id@msg+1,fsr2h
  7776  001CD6  50DF               	movf	indf2,w,c
  7777  001CD8  0B1F               	andlw	31
  7778  001CDA                     i2l575:
  7779  001CDA  0012               	return		;funcret
  7780  001CDC                     __end_of_get_board_unique_id:
  7781                           	callstack 0
  7782                           
  7783                           ;
  7784                           ; Interrupt Vector Table @ 0x8
  7785                           ;
  7786                           
  7787                           	psect	ivt0x8
  7788  000008                     __pivt0x8:
  7789                           	callstack 0
  7790  000008                     ivt0x8_base:
  7791                           	callstack 0
  7792                           
  7793                           ; high-priority vector
  7794  000008  EF5F  F00D         	goto	_interrupt_handler
  7795  000018                     	org	16
  7796                           
  7797                           ; low-priority vector
  7798  000018  00FF               	reset	
  7799  0000                     
  7800                           	psect	text58
  7801  000000                     __ptext58:
  7802                           	callstack 0
  7803  000000                     
  7804                           	psect	rparam
  7805  0000                     
  7806                           	psect	idloc
  7807                           
  7808                           ;Config register IDLOC0 @ 0x200000
  7809                           ;	unspecified, using default values
  7810  200000                     	org	2097152
  7811  200000  0FFF               	dw	4095
  7812                           
  7813                           ;Config register IDLOC1 @ 0x200002
  7814                           ;	unspecified, using default values
  7815  200002                     	org	2097154
  7816  200002  0FFF               	dw	4095
  7817                           
  7818                           ;Config register IDLOC2 @ 0x200004
  7819                           ;	unspecified, using default values
  7820  200004                     	org	2097156
  7821  200004  0FFF               	dw	4095
  7822                           
  7823                           ;Config register IDLOC3 @ 0x200006
  7824                           ;	unspecified, using default values
  7825  200006                     	org	2097158
  7826  200006  0FFF               	dw	4095
  7827                           
  7828                           ;Config register IDLOC4 @ 0x200008
  7829                           ;	unspecified, using default values
  7830  200008                     	org	2097160
  7831  200008  0FFF               	dw	4095
  7832                           
  7833                           ;Config register IDLOC5 @ 0x20000A
  7834                           ;	unspecified, using default values
  7835  20000A                     	org	2097162
  7836  20000A  0FFF               	dw	4095
  7837                           
  7838                           ;Config register IDLOC6 @ 0x20000C
  7839                           ;	unspecified, using default values
  7840  20000C                     	org	2097164
  7841  20000C  0FFF               	dw	4095
  7842                           
  7843                           ;Config register IDLOC7 @ 0x20000E
  7844                           ;	unspecified, using default values
  7845  20000E                     	org	2097166
  7846  20000E  0FFF               	dw	4095
  7847                           
  7848                           	psect	config
  7849                           
  7850                           ;Config register CONFIG1L @ 0x300000
  7851                           ;	External Oscillator Selection
  7852                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  7853                           ;	Reset Oscillator Selection
  7854                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC with HFFRQ = 4 MHz and CDIV = 4:1
  7855  300000                     	org	3145728
  7856  300000  EA                 	db	234
  7857                           
  7858                           ;Config register CONFIG1H @ 0x300001
  7859                           ;	Clock out Enable bit
  7860                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  7861                           ;	PRLOCKED One-Way Set Enable bit
  7862                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  7863                           ;	Clock Switch Enable bit
  7864                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  7865                           ;	Fail-Safe Clock Monitor Enable bit
  7866                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  7867  300001                     	org	3145729
  7868  300001  FF                 	db	255
  7869                           
  7870                           ;Config register CONFIG2L @ 0x300002
  7871                           ;	MCLR Enable bit
  7872                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  7873                           ;	Power-up timer selection bits
  7874                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  7875                           ;	Multi-vector enable bit
  7876                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
  7877                           ;	IVTLOCK bit One-way set enable bit
  7878                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  7879                           ;	Low Power BOR Enable bit
  7880                           ;	LPBOREN = OFF, ULPBOR disabled
  7881                           ;	Brown-out Reset Enable bits
  7882                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  7883  300002                     	org	3145730
  7884  300002  F7                 	db	247
  7885                           
  7886                           ;Config register CONFIG2H @ 0x300003
  7887                           ;	Brown-out Reset Voltage Selection bits
  7888                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  7889                           ;	ZCD Disable bit
  7890                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  7891                           ;	PPSLOCK bit One-Way Set Enable bit
  7892                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  7893                           ;	Stack Full/Underflow Reset Enable bit
  7894                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7895                           ;	Debugger Enable bit
  7896                           ;	DEBUG = OFF, Background debugger disabled
  7897                           ;	Extended Instruction Set Enable bit
  7898                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  7899  300003                     	org	3145731
  7900  300003  FF                 	db	255
  7901                           
  7902                           ;Config register CONFIG3L @ 0x300004
  7903                           ;	WDT Period selection bits
  7904                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  7905                           ;	WDT operating mode
  7906                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  7907  300004                     	org	3145732
  7908  300004  9F                 	db	159
  7909                           
  7910                           ;Config register CONFIG3H @ 0x300005
  7911                           ;	WDT Window Select bits
  7912                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  7913                           ;	WDT input clock selector
  7914                           ;	WDTCCS = SC, Software Control
  7915  300005                     	org	3145733
  7916  300005  FF                 	db	255
  7917                           
  7918                           ;Config register CONFIG4L @ 0x300006
  7919                           ;	Boot Block Size selection bits
  7920                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  7921                           ;	Boot Block enable bit
  7922                           ;	BBEN = OFF, Boot block disabled
  7923                           ;	Storage Area Flash enable bit
  7924                           ;	SAFEN = OFF, SAF disabled
  7925                           ;	Application Block write protection bit
  7926                           ;	WRTAPP = OFF, Application Block not write protected
  7927  300006                     	org	3145734
  7928  300006  FF                 	db	255
  7929                           
  7930                           ;Config register CONFIG4H @ 0x300007
  7931                           ;	Configuration Register Write Protection bit
  7932                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
  7933                           ;	Boot Block Write Protection bit
  7934                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
  7935                           ;	Data EEPROM Write Protection bit
  7936                           ;	WRTD = OFF, Data EEPROM not write-protected
  7937                           ;	SAF Write protection bit
  7938                           ;	WRTSAF = OFF, SAF not Write Protected
  7939                           ;	Low Voltage Programming Enable bit
  7940                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  7941  300007                     	org	3145735
  7942  300007  FF                 	db	255
  7943                           
  7944                           ;Config register CONFIG5L @ 0x300008
  7945                           ;	PFM and Data EEPROM Code Protection bit
  7946                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  7947  300008                     	org	3145736
  7948  300008  FF                 	db	255
  7949                           
  7950                           ;Config register CONFIG5H @ 0x300009
  7951                           ;	unspecified, using default values
  7952  300009                     	org	3145737
  7953  300009  FF                 	db	255
  7954                           tosu	equ	0x3FFF
  7955                           tosh	equ	0x3FFE
  7956                           tosl	equ	0x3FFD
  7957                           stkptr	equ	0x3FFC
  7958                           pclatu	equ	0x3FFB
  7959                           pclath	equ	0x3FFA
  7960                           pcl	equ	0x3FF9
  7961                           tblptru	equ	0x3FF8
  7962                           tblptrh	equ	0x3FF7
  7963                           tblptrl	equ	0x3FF6
  7964                           tablat	equ	0x3FF5
  7965                           prodh	equ	0x3FF4
  7966                           prodl	equ	0x3FF3
  7967                           indf0	equ	0x3FEF
  7968                           postinc0	equ	0x3FEE
  7969                           postdec0	equ	0x3FED
  7970                           preinc0	equ	0x3FEC
  7971                           plusw0	equ	0x3FEB
  7972                           fsr0h	equ	0x3FEA
  7973                           fsr0l	equ	0x3FE9
  7974                           wreg	equ	0x3FE8
  7975                           indf1	equ	0x3FE7
  7976                           postinc1	equ	0x3FE6
  7977                           postdec1	equ	0x3FE5
  7978                           preinc1	equ	0x3FE4
  7979                           plusw1	equ	0x3FE3
  7980                           fsr1h	equ	0x3FE2
  7981                           fsr1l	equ	0x3FE1
  7982                           bsr	equ	0x3FE0
  7983                           indf2	equ	0x3FDF
  7984                           postinc2	equ	0x3FDE
  7985                           postdec2	equ	0x3FDD
  7986                           preinc2	equ	0x3FDC
  7987                           plusw2	equ	0x3FDB
  7988                           fsr2h	equ	0x3FDA
  7989                           fsr2l	equ	0x3FD9
  7990                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         131
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     44      51
    BANK0           160    109     133
    BANK1           256      0     100
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    Absolute function$0	PTR const struct . size(2) Largest target is 11
		 -> can_handle_interrupt@rcvd_msg_2151(COMRAM[11]), can_handle_interrupt@rcvd_msg(COMRAM[11]), 

    receive_callback$0	PTR const struct . size(2) Largest target is 11
		 -> can_handle_interrupt@rcvd_msg_2151(COMRAM[11]), can_handle_interrupt@rcvd_msg(COMRAM[11]), 

    can_send_fp$0	PTR const struct . size(2) Largest target is 11
		 -> txb_heartbeat@msg_sent(BANK0[11]), 

    S2295$0$0	PTR const struct . size(2) Largest target is 11
		 -> txb_heartbeat@msg_sent(BANK0[11]), 

    can_rcv_cb$0	PTR const struct . size(2) Largest target is 11
		 -> can_handle_interrupt@rcvd_msg_2151(COMRAM[11]), can_handle_interrupt@rcvd_msg(COMRAM[11]), 

    memcpy@d1	PTR void  size(2) Largest target is 100
		 -> txb_heartbeat@msg_sent(BANK0[11]), can_handle_interrupt@rcvd_msg_2151(COMRAM[11]), can_handle_interrupt@rcvd_msg(COMRAM[11]), TXB0D0(SFR[1]), 
		 -> tx_pool(BANK1[100]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 100
		 -> txb_heartbeat@msg_sent(BANK0[11]), can_handle_interrupt@rcvd_msg_2151(COMRAM[11]), can_handle_interrupt@rcvd_msg(COMRAM[11]), TXB0D0(SFR[1]), 
		 -> tx_pool(BANK1[100]), 

    memcpy@s1	PTR const void  size(2) Largest target is 100
		 -> vent_send_status@stat_msg(BANK0[11]), txb_heartbeat@msg_sent(BANK0[11]), check_bus_current_error@error_msg(BANK0[11]), check_battery_voltage_error@batt_msg(BANK0[11]), 
		 -> check_battery_voltage_error@error_msg(BANK0[11]), RXB1D0(SFR[1]), RXB0D0(SFR_9[1]), send_status_ok@board_stat_msg(BANK0[11]), 
		 -> main@error_msg(BANK0[11]), tx_pool(BANK1[100]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 100
		 -> vent_send_status@stat_msg(BANK0[11]), txb_heartbeat@msg_sent(BANK0[11]), check_bus_current_error@error_msg(BANK0[11]), check_battery_voltage_error@batt_msg(BANK0[11]), 
		 -> check_battery_voltage_error@error_msg(BANK0[11]), RXB1D0(SFR[1]), RXB0D0(SFR_9[1]), send_status_ok@board_stat_msg(BANK0[11]), 
		 -> main@error_msg(BANK0[11]), tx_pool(BANK1[100]), 

    srb_peek@ctx.memory_pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK1[100]), 

    srb_pop@element	PTR void  size(2) Largest target is 11
		 -> txb_heartbeat@msg_sent(BANK0[11]), 

    srb_pop@ctx.memory_pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK1[100]), 

    srb_pop@ctx	PTR struct . size(2) Largest target is 11
		 -> buf(BANK0[10]), 

    srb_is_empty@ctx.memory_pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK1[100]), 

    srb_is_empty@ctx	PTR const struct . size(2) Largest target is 11
		 -> buf(BANK0[10]), 

    srb_is_full@ctx.memory_pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK1[100]), 

    srb_is_full@ctx	PTR const struct . size(2) Largest target is 11
		 -> buf(BANK0[10]), 

    srb_push@element	PTR const void  size(2) Largest target is 11
		 -> vent_send_status@stat_msg(BANK0[11]), check_bus_current_error@error_msg(BANK0[11]), check_battery_voltage_error@batt_msg(BANK0[11]), check_battery_voltage_error@error_msg(BANK0[11]), 
		 -> send_status_ok@board_stat_msg(BANK0[11]), main@error_msg(BANK0[11]), 

    srb_push@ctx.memory_pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK1[100]), 

    srb_push@ctx	PTR struct . size(2) Largest target is 11
		 -> buf(BANK0[10]), 

    srb_init@ctx.memory_pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK1[100]), 

    srb_init@pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK1[100]), 

    srb_init@ctx	PTR struct . size(2) Largest target is 11
		 -> buf(BANK0[10]), 

    get_offset_bytes@ctx.memory_pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK1[100]), 

    get_offset_bytes@ctx	PTR const struct . size(2) Largest target is 11
		 -> buf(BANK0[10]), 

    txb_enqueue@msg	PTR const struct . size(2) Largest target is 11
		 -> vent_send_status@stat_msg(BANK0[11]), check_bus_current_error@error_msg(BANK0[11]), check_battery_voltage_error@batt_msg(BANK0[11]), check_battery_voltage_error@error_msg(BANK0[11]), 
		 -> send_status_ok@board_stat_msg(BANK0[11]), main@error_msg(BANK0[11]), 

    txb_init@pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK1[100]), 

    txb_init@can_tx_ready	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> can_send_rdy(), 

    txb_init@can_send_fp	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> can_send(), 

    S2295$can_tx_ready	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> can_send_rdy(), 

    ctx.can_tx_ready	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> can_send_rdy(), 

    S2295$can_send_fp	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> can_send(), 

    ctx.can_send_fp	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> can_send(), 

    S2283$memory_pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK1[100]), 

    buf.memory_pool	PTR void  size(2) Largest target is 100
		 -> tx_pool(BANK1[100]), 

    can_generate_timing_params@timing	PTR struct . size(2) Largest target is 7
		 -> main@can_setup(BANK0[7]), 

    sp__memcpy	PTR void  size(2) Largest target is 100
		 -> txb_heartbeat@msg_sent(BANK0[11]), can_handle_interrupt@rcvd_msg_2151(COMRAM[11]), can_handle_interrupt@rcvd_msg(COMRAM[11]), TXB0D0(SFR[1]), 
		 -> tx_pool(BANK1[100]), 

    can_send@message	PTR const struct . size(2) Largest target is 11
		 -> txb_heartbeat@msg_sent(BANK0[11]), 

    can_init@timing	PTR const struct . size(2) Largest target is 7
		 -> main@can_setup(BANK0[7]), 

    can_init@receive_callback	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> can_msg_handler(), 

    can_rcv_cb	PTR FTN(PTR const struct .,)void  size(2) Largest target is 1
		 -> Absolute function(), can_msg_handler(), 

    sp__build_radio_cmd_can_message	PTR const unsigned char  size(2) Largest target is 0

    sp__build_printf_can_message	PTR const unsigned char  size(2) Largest target is 0

    get_board_unique_id@msg	PTR const struct . size(2) Largest target is 11
		 -> can_handle_interrupt@rcvd_msg_2151(COMRAM[11]), can_handle_interrupt@rcvd_msg(COMRAM[11]), 

    get_message_type@msg	PTR const struct . size(2) Largest target is 11
		 -> can_handle_interrupt@rcvd_msg_2151(COMRAM[11]), can_handle_interrupt@rcvd_msg(COMRAM[11]), 

    get_req_valve_state@msg	PTR const struct . size(2) Largest target is 11
		 -> can_handle_interrupt@rcvd_msg_2151(COMRAM[11]), can_handle_interrupt@rcvd_msg(COMRAM[11]), 

    get_general_cmd_type@msg	PTR const struct . size(2) Largest target is 11
		 -> can_handle_interrupt@rcvd_msg_2151(COMRAM[11]), can_handle_interrupt@rcvd_msg(COMRAM[11]), 

    build_analog_data_msg@output	PTR struct . size(2) Largest target is 11
		 -> check_battery_voltage_error@batt_msg(BANK0[11]), 

    build_board_stat_msg@output	PTR struct . size(2) Largest target is 11
		 -> check_bus_current_error@error_msg(BANK0[11]), check_battery_voltage_error@error_msg(BANK0[11]), send_status_ok@board_stat_msg(BANK0[11]), main@error_msg(BANK0[11]), 

    build_board_stat_msg@error_data	PTR unsigned char  size(2) Largest target is 2
		 -> check_bus_current_error@curr_data(BANK0[2]), check_battery_voltage_error@batt_data(BANK0[2]), NULL(NULL[0]), 

    build_valve_stat_msg@output	PTR struct . size(2) Largest target is 11
		 -> vent_send_status@stat_msg(BANK0[11]), 

    write_timestamp_3bytes@output	PTR struct . size(2) Largest target is 11
		 -> vent_send_status@stat_msg(BANK0[11]), check_bus_current_error@error_msg(BANK0[11]), check_battery_voltage_error@error_msg(BANK0[11]), send_status_ok@board_stat_msg(BANK0[11]), 
		 -> main@error_msg(BANK0[11]), 

    write_timestamp_2bytes@output	PTR struct . size(2) Largest target is 11
		 -> check_battery_voltage_error@batt_msg(BANK0[11]), 

    can_msg_handler@msg	PTR const struct . size(2) Largest target is 11
		 -> can_handle_interrupt@rcvd_msg_2151(COMRAM[11]), can_handle_interrupt@rcvd_msg(COMRAM[11]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _interrupt_handler in COMRAM

    _interrupt_handler->_can_handle_interrupt
    _can_handle_interrupt->_can_msg_handler
    _can_msg_handler->_get_req_valve_state
    _get_req_valve_state->_get_message_type
    _get_general_cmd_type->_get_message_type

Critical Paths under _main in BANK0

    _main->_check_battery_voltage_error
    _vent_send_status->_txb_enqueue
    _build_valve_stat_msg->_write_timestamp_3bytes
    _txb_init->_srb_init
    _srb_init->___lwdiv
    _txb_heartbeat->_srb_pop
    _srb_pop->_get_offset_bytes
    _can_send->_memcpy
    _send_status_ok->_txb_enqueue
    _check_bus_current_error->_txb_enqueue
    _check_battery_voltage_error->___fttol
    _txb_enqueue->_srb_push
    _srb_push->_get_offset_bytes
    _get_offset_bytes->___wmul
    _build_board_stat_msg->_write_timestamp_3bytes
    _build_analog_data_msg->_millis
    _build_analog_data_msg->_write_timestamp_2bytes
    ___lwtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___lwtoft

Critical Paths under _interrupt_handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupt_handler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_handler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_handler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupt_handler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupt_handler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interrupt_handler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interrupt_handler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interrupt_handler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interrupt_handler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interrupt_handler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interrupt_handler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interrupt_handler in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _interrupt_handler in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _interrupt_handler in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _interrupt_handler in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                33    28      5   67843
                                             76 BANK0     33    28      5
   _ADCC_DisableContinuousConversion
                    _ADCC_Initialize
                     _FVR_Initialize
                           _LED_init
              _OSCILLATOR_Initialize
                  _SYSTEM_Initialize
               _build_board_stat_msg
         _can_generate_timing_params
                           _can_init
        _check_battery_voltage_error
            _check_bus_current_error
              _check_valve_pin_error
           _is_batt_voltage_critical
                             _millis
                     _send_status_ok
                        _timer0_init
                        _txb_enqueue
                      _txb_heartbeat
                           _txb_init
                         _valve_init
                         _vent_close
                          _vent_open
                   _vent_send_status
 ---------------------------------------------------------------------------------
 (1) _vent_send_status                                    15    15      0    8632
                                             24 BANK0     15    15      0
               _build_valve_stat_msg
             _get_valve_closed_state
               _get_valve_open_state
                             _millis
                        _txb_enqueue
 ---------------------------------------------------------------------------------
 (2) _get_valve_open_state                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _get_valve_closed_state                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _build_valve_stat_msg                                12     2     10    3888
                                              6 BANK0     12     2     10
                             _millis (ARG)
             _write_timestamp_3bytes
 ---------------------------------------------------------------------------------
 (1) _vent_open                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _vent_close                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _valve_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _txb_init                                             8     0      8    1724
                                             15 BANK0      8     0      8
                           _srb_init
 ---------------------------------------------------------------------------------
 (2) _srb_init                                             8     0      8    1240
                                              7 BANK0      8     0      8
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (1) _txb_heartbeat                                       11    11      0    5789
                                             22 BANK0     11    11      0
                           _can_send *
                       _can_send_rdy *
                       _srb_is_empty
                            _srb_pop
 ---------------------------------------------------------------------------------
 (2) _srb_pop                                             10     6      4    3459
                                             12 BANK0     10     6      4
                   _get_offset_bytes
                             _memcpy
                       _srb_is_empty
 ---------------------------------------------------------------------------------
 (3) _srb_is_empty                                         6     4      2     332
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _can_send_rdy                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _can_send                                             4     2      2    1900
                                             11 BANK0      4     2      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _send_status_ok                                      11    11      0    9877
                                             24 BANK0     11    11      0
               _build_board_stat_msg
                             _millis
                        _txb_enqueue
 ---------------------------------------------------------------------------------
 (1) _is_batt_voltage_critical                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_valve_pin_error                                1     1      0       0
 ---------------------------------------------------------------------------------
 (1) _check_bus_current_error                             21    21      0   10750
                                             24 BANK0     21    21      0
           _ADCC_GetSingleConversion
                            ___lwdiv
               _build_board_stat_msg
                             _millis
                        _txb_enqueue
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     601
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _check_battery_voltage_error                         35    35      0   19316
                                             41 BANK0     35    35      0
           _ADCC_GetSingleConversion
                            ___ftmul
                            ___fttol
                           ___lwtoft
              _build_analog_data_msg
               _build_board_stat_msg
                             _millis
                        _txb_enqueue
 ---------------------------------------------------------------------------------
 (2) _txb_enqueue                                          2     0      2    4368
                                             22 BANK0      2     0      2
                        _srb_is_full
                           _srb_push
 ---------------------------------------------------------------------------------
 (3) _srb_push                                            10     6      4    3462
                                             12 BANK0     10     6      4
                   _get_offset_bytes
                             _memcpy
                        _srb_is_full
 ---------------------------------------------------------------------------------
 (4) _srb_is_full                                          6     4      2     335
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              11     5      6    1618
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (4) _get_offset_bytes                                     6     2      4    1016
                                              6 BANK0      6     2      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     352
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _millis                                               4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _build_board_stat_msg                                15     5     10    5399
                                              6 BANK0     15     5     10
                             _millis (ARG)
             _write_timestamp_3bytes
 ---------------------------------------------------------------------------------
 (3) _write_timestamp_3bytes                               6     0      6    3066
                                              0 BANK0      6     0      6
 ---------------------------------------------------------------------------------
 (2) _build_analog_data_msg                                9     0      9    1185
                                              4 BANK0      9     0      9
                             _millis (ARG)
             _write_timestamp_2bytes
 ---------------------------------------------------------------------------------
 (3) _write_timestamp_2bytes                               4     0      4     484
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             3     0      3    3314
                                              8 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     328
                                             26 BANK0     15    11      4
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    4001
                                             11 BANK0     15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    3193
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _ADCC_GetSingleConversion                             5     3      2      31
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _can_init                                             5     1      4     428
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (1) _can_generate_timing_params                          10     4      6    1079
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                    _ADCC_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADCC_DisableContinuousConversion                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _interrupt_handler                                    0     0      0    6134
               _can_handle_interrupt
            _timer0_handle_interrupt
 ---------------------------------------------------------------------------------
 (7) _timer0_handle_interrupt                              0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _can_handle_interrupt                                26    26      0    6134
                                             18 COMRAM    26    26      0
                   Absolute function *
                    _can_msg_handler *
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (8) i2_memcpy                                            11     5      6     299
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (8) _can_msg_handler                                      8     6      2    5633
                                             10 COMRAM     8     6      2
                _get_board_unique_id
               _get_general_cmd_type
                   _get_message_type
                _get_req_valve_state
                           i2_millis
 ---------------------------------------------------------------------------------
 (9) i2_millis                                             4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (9) _get_req_valve_state                                  6     4      2    1827
                                              4 COMRAM     6     4      2
                   _get_message_type
 ---------------------------------------------------------------------------------
 (9) _get_general_cmd_type                                 5     3      2    1805
                                              4 COMRAM     5     3      2
                   _get_message_type
 ---------------------------------------------------------------------------------
 (10) _get_message_type                                    4     2      2    1640
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (9) _get_board_unique_id                                  2     0      2     120
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_DisableContinuousConversion
   _ADCC_Initialize
   _FVR_Initialize
   _LED_init
   _OSCILLATOR_Initialize
   _SYSTEM_Initialize
     _ADCC_Initialize
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _build_board_stat_msg
     _millis (ARG)
     _write_timestamp_3bytes (ARG)
   _can_generate_timing_params
   _can_init
   _check_battery_voltage_error
     _ADCC_GetSingleConversion
     ___ftmul
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
       ___lwtoft (ARG)
     ___lwtoft
     _build_analog_data_msg
       _millis (ARG)
       _write_timestamp_2bytes (ARG)
     _build_board_stat_msg
     _millis
     _txb_enqueue
       _srb_is_full
       _srb_push
         _get_offset_bytes
           ___wmul
         _memcpy
         _srb_is_full
   _check_bus_current_error
     _ADCC_GetSingleConversion
     ___lwdiv
     _build_board_stat_msg
     _millis
     _txb_enqueue
   _check_valve_pin_error
   _is_batt_voltage_critical
   _millis
   _send_status_ok
     _build_board_stat_msg
     _millis
     _txb_enqueue
   _timer0_init
   _txb_enqueue
   _txb_heartbeat
     _can_send *
       _memcpy
     _can_send_rdy *
     _srb_is_empty *
     _srb_pop *
       _get_offset_bytes
       _memcpy
       _srb_is_empty
   _txb_init
     _srb_init
       ___lwdiv
   _valve_init
   _vent_close
   _vent_open
   _vent_send_status
     _build_valve_stat_msg
       _millis (ARG)
       _write_timestamp_3bytes (ARG)
     _get_valve_closed_state
     _get_valve_open_state
     _millis
     _txb_enqueue

 _interrupt_handler (ROOT)
   _can_handle_interrupt
     Absolute function(Fake) *
     _can_msg_handler *
       _get_board_unique_id
       _get_general_cmd_type
         _get_message_type
       _get_message_type
       _get_req_valve_state
         _get_message_type
       i2_millis
     i2_memcpy *
   _timer0_handle_interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK15          100      0       0      35        0.0%
BANK15             100      0       0      36        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      64       8       39.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6D      85       5       83.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2C      33       1       53.7%
BITSFR_9             0      0       0     200        0.0%
SFR_9                0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11C       6        0.0%
DATA                 0      0     11C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Nov 28 13:44:58 2021

                        ??_get_message_type 0003                                srb_init@pool 0069  
         __size_of_is_batt_voltage_critical 0006                   ?_is_batt_voltage_critical 0001  
                                        l35 1B72                                          l80 1CAC  
                                        l81 1CAC                                          l73 1DBA  
                                        l83 1CB0                                          l76 1C8C  
                                        l86 1D70                     ?_get_valve_closed_state 0001  
                    __end_of_FVR_Initialize 1E2E                         ___wmul@multiplicand 0062  
             __size_of_get_general_cmd_type 005A       timer0_handle_interrupt@internal_count 0033  
                    __size_of_txb_heartbeat 0088                       build_board_stat_msg@i 0073  
                                       l180 1ABC                                         l412 1D8E  
                                       l237 1E44                                         l165 1944  
                                       l253 1E2C                                         l423 1D00  
                                       l177 1A92                                         l409 1DF4  
                                       l426 1C20                                         l364 04BE  
                                       l357 03DA                                         l455 13F8  
                                       l483 17B8                                         l468 109A  
                                       l814 02C4                                         l398 1A7E  
                                       l920 161E                                         l913 1262  
                                       l834 1E24                                         l906 188C  
                                       l930 117E                                         l860 083A  
                                       l925 1B36                                         l909 16A8  
                                       l782 0E88                                         l863 1E3E  
                                       l872 1E48                                         l960 1E16  
                                       l778 09B4                                         l963 1E32  
                                       l788 1DA4                                         l972 1DE2  
                                       l893 1BE6                                         l869 156C  
                                       l981 1334                                         l966 1E38  
                                       l984 1C84                                         l889 1C58  
                                       l969 1DCE                                         l898 1730  
            check_valve_pin_error@req_state 0001                                         _buf 00DB  
                                       _ctx 00CD                     __size_of_PMD_Initialize 0024  
              write_timestamp_3bytes@output 0064                                         tosl 003FFD  
                                       wreg 003FE8                        _get_valve_open_state 1DBC  
                               _txb_enqueue 1BAE                              srb_is_full@ctx 0060  
                  ??_write_timestamp_2bytes 002D                    ??_write_timestamp_3bytes 002D  
             check_bus_current_error@F22950 00D5                                        l1256 0F92  
                                      l1337 0C54                                        l1267 0F5C  
                                      l1358 0D76                                        l1470 182E  
                                      l1463 1826                                        l4201 0D0C  
                                      l4211 0D36                                        l4203 0D16  
                                      l4123 1DD0                                        l4213 0D46  
                                      l1485 1D26                                        l4215 0D56  
                                      l4119 1DBC                                        l4241 1DB2  
                                      l6001 0C1A                                        l4217 0D66  
                                      l4209 0D2A                                        l1649 18E8  
                                      l4243 1DB6                                        l6003 0C2A  
                                      l4251 1D7A                                        l4091 1D90  
                                      l4245 1E40                                        l4237 1DA6  
                                      l6021 0052                                        l6013 001E  
                                      l6005 0C30                                        l4181 0C90  
                                      l4253 1D8A                                        l4247 1E18  
                                      l4239 1DAE                                        l6031 0096  
                                      l6023 0062                                        l6015 0022  
                                      l4191 0CDC                                        l4183 0CBC  
                                      l4175 0C56                                        l4255 1D8C  
                                      l6041 00E6                                        l6033 00A6  
                                      l6025 0072                                        l6017 0032  
                                      l6201 0994                                        l4193 0CEA  
                                      l4185 0CBE                                        l4177 0C7C  
                                      l6009 1D02                                        l4249 1D72  
                                      l6051 012A                                        l6043 00F6  
                                      l6035 00B6                                        l6027 0082  
                                      l6019 0042                                        l6203 0996  
                                      l4187 0CCA                                        l6211 1C22  
                                      l6053 013A                                        l6037 00C6  
                                      l6205 0998                                        l4189 0CD8  
                                      l6221 0728                                        l6213 1C32  
                                      l4461 1E2E                                        l6301 12B0  
                                      l3911 1B38                                        l6071 01BE  
                                      l6063 017E                                        l6055 014A  
                                      l6047 010A                                        l6039 00D6  
                                      l6207 099A                                        l6151 0844  
                                      l4199 0D02                                        l6231 0764  
                                      l6223 073E                                        l6215 06B8  
                                      l4535 1E46                                        l6311 12F0  
                                      l6303 12C0                                        l3913 1B44  
                                      l3921 1D4E                                        l6073 01CE  
                                      l6065 018E                                        l6057 015A  
                                      l6049 011A                                        l6081 01F2  
                                      l6209 099E                                        l6161 0892  
                                      l6153 084C                                        l6241 07BE  
                                      l6233 077A                                        l6225 0752  
                                      l6217 06C6                                        l6321 16F6  
                                      l6305 12C8                                        l6313 12F4  
                                      l6401 04C4                                        l3923 1C86  
                                      l3915 1B46                                        l6075 01DE  
                                      l6067 019E                                        l6059 016A  
                                      l6171 094C                                        l6163 08B4  
                                      l6155 0862                                        l6243 07CC  
                                      l6235 0786                                        l6227 075C  
                                      l6219 0710                                        l6323 170C  
                                      l4459 1E08                                        l6315 1326  
                                      l6307 12D8                                        l6403 04D8  
                                      l6331 02D6                                        l3925 1C9A  
                                      l3917 1B52                                        l6069 01AE  
                                      l6181 097A                                        l6173 096E  
                                      l6165 08DA                                        l6157 0866  
                                      l6149 083C                                        l5701 18B6  
                                      l6245 07E4                                        l6237 078E  
                                      l6229 0760                                        l6253 07F6  
                                      l6317 16AA                                        l4573 1E34  
                                      l6309 12E8                                        l6341 02E6  
                                      l6333 02DA                                        l6325 02C6  
                                      l3927 18EA                                        l3919 1B54  
                                      l7071 025A                                        l6191 0988  
                                      l6183 097E                                        l6175 0970  
                                      l6167 0902                                        l6159 086A  
                                      l5703 18C8                                        l5711 15F8  
                                      l6255 0824                                        l6247 07EC  
                                      l6239 0792                                        l6271 1522  
                                      l6263 14BA                                        l6319 16C8  
                                      l6351 0312                                        l6343 02EC  
                                      l6335 02DE                                        l6327 02CE  
                                      l3929 1E26                                        l7073 0276  
                                      l7081 0230                                        l6193 098C  
                                      l6185 0982                                        l6177 0972  
                                      l6169 092A                                        l5705 18CC  
                                      l5713 1616                                        l6257 0832  
                                      l6249 07F0                                        l5801 17C4  
                                      l6273 1526                                        l6265 14E6  
                                      l4569 1E3A                                        l6361 036A  
                                      l6353 0328                                        l6345 02EE  
                                      l6337 02E2                                        l6329 02D2  
                                      l7083 024C                                        l7067 0222  
                                      l7075 0292                                        l6195 098E  
                                      l6187 0984                                        l6179 0976  
                                      l5723 1830                                        l5707 156E  
                                      l6259 0838                                        l5811 17FA  
                                      l5803 17D6                                        l6275 152A  
                                      l6267 1504                                        l6283 156A  
                                      l6291 1268                                        l6371 03BC  
                                      l6363 0370                                        l6355 034E  
                                      l6347 02F0                                        l6339 02E4  
                                      l7085 0268                                        l7069 023E  
                                      l7077 02A8                                        l6197 0990  
                                      l6189 0986                                        l5821 1A84  
                                      l5733 1CDC                                        l5901 174A  
                                      l5725 1854                                        l5709 15B4  
                                      l5741 11A0                                        l5813 1810  
                                      l5805 17DE                                        l6277 1556  
                                      l6269 1518                                        l6293 1278  
                                      l6381 0430                                        l6373 03C6  
                                      l6365 03A8                                        l6357 0362  
                                      l6349 02F4                                        l7087 0284  
                                      l7079 02B6                                        l6199 0992  
                                      l5823 1A8A                                        l5911 17A8  
                                      l5903 175E                                        l5735 1BE8  
                                      l5719 161C                                        l5743 11CE  
                                      l5815 1818                                        l5807 17E6  
                                      l6279 1564                                        l6287 1A3E  
                                      l5751 1AFC                                        l6295 1288  
                                      l6391 0494                                        l6383 0442  
                                      l6375 03D6                                        l6367 03AC  
                                      l6359 0366                                        l5825 1A8E  
                                      l5905 1772                                        l5841 0FBC  
                                      l5833 1DE4                                        l5729 1860  
                                      l5745 1218                                        l5737 1180  
                                      l5817 181A                                        l5809 17F4  
                                      l6289 1A70                                        l5921 0DAA  
                                      l5753 1B2E                                        l6297 1298  
                                      l6393 04A2                                        l6385 044A  
                                      l6377 03E2                                        l6369 03B4  
                                      l5827 1A90                                        l5771 0EC0  
                                      l5763 0E8A                                        l5907 1786  
                                      l5851 0FFA                                        l5835 0F94  
                                      l5691 1C7C                                        l5747 124E  
                                      l5819 1820                                        l5931 0E32  
                                      l5923 0DCE                                        l5915 0D78  
                                      l6299 12A0                                        l6395 04B4  
                                      l6387 045A                                        l6379 041C  
                                      l5829 1AA0                                        l5781 0F34  
                                      l5773 0ECA                                        l5765 0E9C  
                                      l5909 1796                                        l5861 1064  
                                      l5853 1016                                        l5845 0FD2  
                                      l5837 0FA6                                        l5933 0E54  
                                      l5925 0DD4                                        l5941 1652  
                                      l6397 04B6                                        l6389 0462  
                                      l5791 0F74                                        l5783 0F3E  
                                      l5775 0EF4                                        l5767 0EB0  
                                      l5863 1088                                        l5855 102A  
                                      l5695 188E                                        l5871 1BD0  
                                      l5935 0E84                                        l5927 0E06  
                                      l5919 0D8C                                        l5759 1B34  
                                      l5951 10BC                                        l5943 1680  
                                      l6399 04C0                                        l5793 0F84  
                                      l5785 0F4C                                        l5777 0EF6  
                                      l5961 0B30                                        l5857 1036  
                                      l5849 0FE6                                        l5689 1C5A  
                                      l5697 18A2                                        l5929 0E30  
                                      l5953 10EA                                        l5945 1694  
                                      l5937 1620                                        l5881 1366  
                                      l5795 0F86                                        l5787 0F6A  
                                      l5779 0F0A                                        l5963 0B56  
                                      l5859 1060                                        l5699 18B2  
                                      l5867 1BAE                                        l5955 1134  
                                      l5947 109C                                        l5939 1638  
                                      l5891 13D6                                        l5875 1336  
                                      l5789 0F6C                                        l5981 0BB0  
                                      l5973 0B9A                                        l5957 116A  
                                      l5893 13E8                                        l5885 1382  
                                      l5991 0BE6                                        l5983 0BBC  
                                      l5975 0BA0                                        l5967 0B66  
                                      l5799 17BA                                        l5887 13A6  
                                      l5879 134E                                        l5993 0BF6  
                                      l5985 0BC8                                        l5977 0BAC  
                                      l5969 0B8A                                        l5897 1732  
                                      l5889 13C2                                        l5995 0BFC  
                                      l5987 0BCC                                        l5979 0BAE  
                                      l5997 0C00                                        l5989 0BDA  
                                      l5999 0C0E                                        u2140 1C9A  
                                      u2141 1C96                                        _LATA 003FBA  
                                      u2150 1CAC                                        _LATB 003FBB  
                                      u2151 1CA8                                        _LATC 003FBC  
                                      u4000 1366                                        u4001 1362  
                                      u2330 1DA2                                        u4010 137E  
                                      u2331 1D9C                                        u4011 137A  
                                      u4100 0B56                                        u2500 0D26  
                                      u4020 1746                                        u2340 1DA4  
                                      u4101 0B52                                        u2501 0D22  
                                      u4021 1742                                        u2510 0D46  
                                      u4030 0D88                                        u4111 0B76  
                                      u2511 0D42                                        u4031 0D84  
                                      u4120 0B8A                                        u2520 0D56  
                                      u4200 07E4                                        u4040 0DAA  
                                      u4121 0B86                                        u2521 0D52  
                                      u4201 07E0                                        u4041 0DA6  
                                      u4130 0BDA                                        u4210 1504  
                                      u4050 0DCA                                        u2370 1DCC  
                                      u4131 0BD6                                        u2451 0C68  
                                      u4211 1500                                        u4051 0DC6  
                                      u2371 1DC6                                        u4140 0C0E  
                                      u2460 0C7C                                        u4300 16F6  
                                      u2380 1DE0                                        u4220 1288  
                                      u4141 0C0A                                        u2461 0C78  
                                      u4301 16F2                                        u2381 1DDA  
                                      u4221 1284                                        u4150 0862  
                                      u2470 0CB0                                        u4070 10B8  
                                      u4230 1298                                        u4151 085E  
                                      u4071 10B4                                        u4231 1294  
                                      u4160 09B4                                        u2480 0CEA  
                                      u4080 116A                                        u2376 1DCE  
                                      u4240 12B0                                        u4320 03A8  
                                      u4161 09B0                                        u2481 0CE6  
                                      u4065 0E20                                        u4081 1166  
                                      u4241 12AC                                        u4321 03A4  
                                      u2490 0CFE                                        u4170 0728  
                                      u2386 1DE2                                        u4250 12C0  
                                      u4330 03D6                                        u4091 0B42  
                                      u2491 0CFA                                        u2475 0CA8  
                                      u4171 0724                                        u4251 12BC  
                                      u4331 03D2                                        u4180 073E  
                                      u4260 12D8                                        u4340 041C  
                                      u4181 073A                                        u4261 12D4  
                                      u4341 0418                                        u4190 077A  
                                      u4318 171C                                        u4270 12E8  
                                      u4350 0430                                        u4191 0776  
                                      u4319 1730                                        u4271 12E4  
                                      u4351 042C                                        u3800 1B2E  
                                      u4280 16C8                                        u4360 0442  
                                      u3801 1B2A                                        u4281 16C4  
                                      u4361 043E                                        u3810 0E9C  
                                      u3730 18E8                                        u4370 045A  
                                      u3811 0E98                                        u3731 18E4  
                                      u4371 0456                                        u3820 0EB0  
                                      u3740 15B4                                        u3900 17F4  
                                      u4380 04B4                                        _PMD0 0039C0  
                                      u3821 0EAC                                        u3741 15B0  
                                      u3901 17F0                                        u4381 04B0  
                                      _PMD1 0039C1                                        u3830 0EF0  
                                      u3750 15F8                                        u3910 1810  
                                      _PMD2 0039C2                                        u3831 0EEC  
                                      u3751 15F4                                        u3911 180C  
                                      _PMD3 0039C3                                        u3920 1AA0  
                                      u3840 0F30                                        u3760 1616  
                                      _PMD4 0039C4                                        u3921 1A9C  
                                      u3841 0F2C                                        u3761 1612  
                                      _PMD5 0039C5                                        u3850 0F4C  
                                      u3930 0FA6                                        u3770 1854  
                                      u4298 16D2                                        _PMD6 0039C6  
                                      u3851 0F48                                        u3931 0FA2  
                                      u3771 1850                                        u4299 16E6  
                                      _PMD7 0039C7                                        u3860 0F5C  
                                      u3940 0FB8                                        u3780 119C  
                                      u3861 0F58                                        u3941 0FB4  
                                      u3781 1198                                        u3870 0F6A  
                                      u3950 0FCE                                        u3790 124E  
                                      u3871 0F66                                        u3951 0FCA  
                                      u3791 124A                                        u3880 0F84  
                                      u3960 0FE2                                        u3881 0F80  
                                      u3961 0FDE                                        u3970 1088  
                                      u3890 17D6                                        u3971 1084  
                                      u3891 17D2                                        u3980 1BCC  
                                      u3981 1BC8                                        _PIR5 0039A5  
                                      u3990 134A                                        u3991 1346  
                                      _WPUA 003A41                                        _WPUB 003A51  
                                      _WPUC 003A61                                        _WPUE 003A81  
              __end_of_build_board_stat_msg 109C                                        _main 02C6  
                              ___ftpack@arg 0060         check_battery_voltage_error@batt_msg 009F  
       check_battery_voltage_error@batt_raw 008D                                ___ftpack@exp 0063  
                             srb_pop@offset 0074                                        fsr1h 003FE2  
                                      fsr2h 003FDA                                        indf1 003FE7  
                                      indf2 003FDF                                        fsr1l 003FE1  
                                      fsr2l 003FD9                                        prodh 003FF4  
                                      prodl 003FF3                                        start 001A  
                              ___ftmul@cntr 0078                 build_analog_data_msg@output 006B  
                              ___param_bank 000000                                ___ftmul@sign 0079  
                           srb_is_empty@ctx 0060                         get_offset_bytes@ctx 0066  
            __end_of_get_valve_closed_state 1DE4                                ___fttol@exp1 0088  
                              ___fttol@lval 0084                             ?_FVR_Initialize 0001  
            __size_of_OSCILLATOR_Initialize 002C               __end_of_OSCILLATOR_Initialize 1CB2  
                          __end_of_LED_init 1E26                                       _ADCAP 003EF5  
                                     _ADACT 003EFE                                       ?_main 00AC  
                                     _ADCLK 003EFF                                       _ADCNT 003EEB  
                                     _ADPCH 003EF1                                       _ADREF 003EFD  
                                     _ADRPT 003EEC                             __end_of___ftmul 0C56  
                           __end_of___fttol 0D78                                       _LATC2 01FDE2  
                                     _LATC3 01FDE3                                       _LATB5 01FDDD  
                                     _LATC4 01FDE4                             __end_of___lwdiv 1830  
                                     i2l409 1E06                                       i2l418 1D4C  
                                     i2l380 0A1A                                       i2l373 1AFA  
                                     i2l526 19F8                                       i2l383 0A34  
                                     i2l384 0A3E                                       i2l377 0B2E  
                                     i2l801 0666                                       i2l546 14B8  
                                     i2l571 1A3C                                       i2l803 067A  
                                     i2l804 06B6                                       i2l805 068E  
                                     i2l575 1CDA                                       i2l807 06A2  
                                     i2l791 0504                                       i2l793 0500  
                                     i2l794 05AA                                       i2l796 06B6  
                                     i2l798 0652                    __end_of_vent_send_status 1336  
                    ?_build_analog_data_msg 0064                                       _TRISA 003FC2  
                                     _TRISB 003FC3                                       _TRISC 003FC4  
                     ?_get_valve_open_state 0001                                  i2memcpy@d1 0001  
                                i2memcpy@s1 0003                              srb_pop@element 006E  
                            txb_enqueue@msg 0076                               ___ftpack@sign 0064  
       __end_of_check_battery_voltage_error 083C                 _check_battery_voltage_error 06B8  
                                     pclath 003FFA                             __end_of_srb_pop 1180  
                             _txb_heartbeat 16AA                                       status 003FD8  
                   __size_of_send_status_ok 0042                            __end_ofi2_memcpy 19A0  
                          __end_ofi2_millis 1E08                         _get_board_unique_id 1CB2  
             ??_check_battery_voltage_error 002D                             __initialization 1B74  
                             main@can_setup 00C6                                __end_of_main 04E4  
                  ?_check_bus_current_error 0001            can_generate_timing_params@timing 0064  
                                    ??_main 00B1                               ___fttol@sign1 0083  
                             __activetblptr 000002                         get_message_type@msg 0001  
                         srb_init@pool_size 006B                        ?_get_board_unique_id 0001  
                                    _ADACCH 003EE9                                      _ADACCL 003EE8  
                                    _ADACCU 003EEA                                      _ADACQH 003EF4  
                                    _ADACQL 003EF3                       __size_of_can_send_rdy 0016  
                                    _ADCON0 003EF8                                      _ADCON1 003EF9  
                                    _ADCON2 003EFA                                      _ADCON3 003EFB  
                                    _ADERRH 003EE3                                      _ADERRL 003EE2  
                                    _ADLTHH 003EDF                                      _ADLTHL 003EDE  
           __size_of_write_timestamp_2bytes 0026                                      _ADRESH 003EF0  
                                    _ADRESL 003EEF                                      _ADPREH 003EF7  
                                    _ADPREL 003EF6             __size_of_write_timestamp_3bytes 003A  
                                    _ADSTAT 003EFC                                      _ADUTHH 003EE1  
                                    _ADUTHL 003EE0                                      _ANSELA 003A40  
                                    _ANSELB 003A50                                      _ANSELC 003A60  
                          __end_of___ftpack 0F94                                      _RC1PPS 003A11  
                                    _ODCONA 003A42                                      _ODCONB 003A52  
                                    _ODCONC 003A62                                      i2l4001 0A48  
                                    i2l4003 0B1A                                      i2l4231 196E  
                                    i2l1649 199E                                      i2l4233 1980  
                                    i2l4225 1946                                      i2l2633 1D28  
                                    i2l4227 195A                                      i2l4235 1984  
                                    i2l2635 1D3C                                      i2l4229 196A  
                                    i2l3721 1A0C                                      i2l3801 1446  
                                    i2l4611 0646                                      i2l4603 05B8  
                                    i2l3725 1A18                                      i2l7101 1486  
                                    i2l4613 064A                                      i2l4605 05F8  
                                    i2l3719 19FA                                      i2l7103 1494  
                                    i2l3807 1460                                      i2l4631 06B0  
                                    i2l4623 0688                                      i2l4615 0660  
                                    i2l4607 0612                                      i2l7105 14A2  
                                    i2l4609 0624                                      i2l4627 069C  
                                    i2l4619 0674                                      i2l3773 1CCA  
                                    i2l3781 19BA                                      i2l3909 1DF6  
                                    i2l4741 1AD0                                      i2l3767 1CB2  
                                    i2l3783 19CE                                      i2l3791 13FA  
                                    i2l4591 056C                                      i2l4583 04E4  
                                    i2l4743 1AD4                                      i2l3769 1CC4  
                                    i2l3785 19E2                                      i2l3777 19A0  
                                    i2l3793 140C                                      i2l4593 057E  
                                    i2l4585 04F2                                      i2l4745 1AE4  
                                    i2l3779 19B2                                      i2l3795 1414  
                                    i2l7091 0A9C                                      i2l4595 05A0  
                                    i2l4587 0514                                      i2l4747 1AF2  
                                    i2l4739 1ABE                                      i2l3797 142C  
                                    i2l7093 0ABA                                      i2l4597 05A4  
                                    i2l4589 0552                                      i2l4749 1AF6  
                                    i2l7095 0AD0                                      i2l3991 09EA  
                                    i2l7097 0AEE                                      i2l7089 0A86  
                                    i2l3993 09FE                                      i2l3985 09B6  
                                    i2l7099 0B04                                      i2l3995 0A10  
                                    i2l3987 09CA                                      i2l3997 0A1E  
                                    _FVRCON 003EC1                              ?_txb_heartbeat 0001  
                          __end_of___lwtoft 1D28                                      _RXB0D0 003F86  
                                    _RXB1D0 0037F6                                      _TXB0D0 0037E6  
                          __end_of_can_init 09B6                                      _TRISC0 01FE20  
                                    _TRISC1 01FE21                                      _TRISB3 01FE1B  
                                    _TRISC2 01FE22                                      _TRISB4 01FE1C  
                                    _TRISC3 01FE23                                      _TRISB5 01FE1D  
                                    _TRISC4 01FE24                            __end_of_can_send 0E8A  
         can_handle_interrupt@rcvd_msg_2151 0022                               main@error_msg 00BB  
        build_board_stat_msg@error_data_len 006D                  build_valve_stat_msg@output 006E  
                            can_init@timing 0060     can_generate_timing_params@can_frequency 0060  
                               i2memcpy@tmp 000B                                      ___wmul 1C5A  
                                 ??___ftmul 0071                                ?_timer0_init 0001  
                                 ??___fttol 007E                                   ??___lwdiv 002D  
                            srb_push@offset 0074                                      _memcpy 188E  
                                    _millis 1DE4                                      clear_0 1B7A  
                                    clear_1 1B86                                      clear_2 1B92  
                                    isa$std 000001                        _build_board_stat_msg 0F94  
                              _can_send_rdy 1D90                       ___ftmul@f3_as_product 0075  
                     ??_get_board_unique_id 0003                             _ADCC_Initialize 18EA  
                    ??_get_valve_open_state 002D                              _PMD_Initialize 1D4E  
                          __end_of_srb_init 16AA                            __end_of_srb_push 1264  
                                    tblptru 003FF8                                ?_srb_is_full 0060  
                                 ??_srb_pop 0070               __size_of_can_handle_interrupt 01D4  
         __size_of_ADCC_GetSingleConversion 003E                   ?_ADCC_GetSingleConversion 0060  
                          __end_of_txb_init 1C5A                       _check_valve_pin_error 1E46  
                             main@status_ok 00BA                           _SYSTEM_Initialize 1DA6  
               __end_of_get_req_valve_state 14BA                                  __accesstop 0060  
            build_board_stat_msg@error_data 006B                     __end_of__initialization 1BA4  
            build_board_stat_msg@error_code 006A                          ?_SYSTEM_Initialize 0001  
              __end_of_build_valve_stat_msg 13FA                               ___rparam_used 000001  
                                 ?_LED_init 0001                     get_general_cmd_type@msg 0005  
          _check_battery_voltage_error$2260 0090                                  ___ftmul@f1 006B  
                                ___ftmul@f2 006E                                  ___fttol@f1 007A  
                            __pcstackCOMRAM 0001                      _write_timestamp_2bytes 1CDC  
                    _write_timestamp_3bytes 1BE8                         ??_SYSTEM_Initialize 002D  
                              txb_init@pool 006F           check_battery_voltage_error@F22940 00D7  
                vent_send_status@curr_state 0079                    ?_timer0_handle_interrupt 0001  
          check_bus_current_error@curr_data 007E                       ?_build_board_stat_msg 0066  
                    __end_of_PMD_Initialize 1D72            check_bus_current_error@error_msg 0082  
                                ___lwtoft@c 0068                       get_offset_bytes@index 0068  
                 __size_of_get_offset_bytes 005E                   __size_of_get_message_type 0044  
                                 ?i2_memcpy 0001                                   ?i2_millis 0001  
                              ?_txb_enqueue 0076                                  _can_rcv_cb 0031  
                 __end_of_SYSTEM_Initialize 1DBC                             ??_txb_heartbeat 002D  
              __end_of_get_general_cmd_type 19FA                                  __pbssBANK0 00CD  
                                __pbssBANK1 0100                              _send_status_ok 1A3E  
          check_bus_current_error@timestamp 0078                                  ??_LED_init 002D  
                                   IVTBASEH 003FD6                                     IVTBASEL 003FD5  
                                   IVTBASEU 003FD7                      get_board_unique_id@msg 0001  
                          ??_FVR_Initialize 002D                                     ?___wmul 0060  
                   __end_of_ADCC_Initialize 1946                  vent_send_status@valve_open 007A  
                                   _ADFLTRH 003EE7                                     _ADFLTRL 003EE6  
                                   ?_memcpy 0060                                     ?_millis 0060  
                                   _ADPREVH 003EEE                                     _ADPREVL 003EED  
                   ??_build_analog_data_msg 002D                                   ?___ftpack 0060  
                                   _ADSTPTH 003EE5                                     _ADSTPTL 003EE4  
                  __size_of_can_msg_handler 017A                             ?_PMD_Initialize 0001  
                                   _ANSELC0 01D300                                     _ANSELB3 01D283  
                                   _ANSELB4 01D284                          fp__can_msg_handler 0000  
                                 ?___lwtoft 0068                                   ?_can_init 0060  
                                 ?_can_send 006B                           ?_vent_send_status 0001  
                                ??i2_memcpy 0007                                  ??i2_millis 0005  
                                   _OSCCON1 0039D9                                     _OSCCON2 0039DA  
                        __size_of_vent_open 0006                      ?_check_valve_pin_error 0001  
                                   i2u97_40 1D3C                                     i2u97_41 1D38  
                        ??_vent_send_status 002D                      __end_of_send_status_ok 1A80  
                                   __Hparam 0000                    _is_batt_voltage_critical 1E3A  
                                   __Lparam 0000             write_timestamp_3bytes@timestamp 0060  
                                 ?_srb_init 0067                                   ?_srb_push 006C  
                           __size_of___wmul 002C                                     ___ftmul 0B30  
                                   ___fttol 0C56                                     ___lwdiv 17BA  
                    ??_build_board_stat_msg 0070                                   ?_txb_init 006F  
                           srb_push@element 006E                                     __pcinit 1B74  
                           __size_of_memcpy 005C                                  ??___ftpack 0065  
                           __size_of_millis 0012                                     __ramtop 1000  
                      __size_of_timer0_init 001E                                     __ptext0 02C6  
                                   __ptext1 1264                                     __ptext2 1DBC  
                                   __ptext3 1DD0                                     __ptext4 1336  
                                   __ptext5 1E2E                                     __ptext6 1E34  
                                   __ptext7 1E08                                     __ptext8 1C22  
                                   __ptext9 1620                                  ??___lwtoft 002D  
                                ??_can_init 0064                       _OSCILLATOR_Initialize 1C86  
                                ??_can_send 006D                        _build_valve_stat_msg 1336  
                  ??_PIN_MANAGER_Initialize 002D            __size_of_check_bus_current_error 00B4  
                                   _srb_pop 109C                  build_board_stat_msg@output 006E  
                __size_of_SYSTEM_Initialize 0016                                     _tx_pool 0100  
                      end_of_initialization 1BA4                        __size_of_srb_is_full 00B2  
                           ?_send_status_ok 0001                                     memcpy@d 0067  
                                   memcpy@n 0064                                     memcpy@s 0069  
                             __Lmediumconst 0000         __size_of_can_generate_timing_params 02A8  
                             ?_srb_is_empty 0060                           __end_of_vent_open 1E34  
                                ??_srb_init 002D                                     postdec1 003FE5  
                                   postdec2 003FDD                                  ??_srb_push 0070  
                                   postinc0 003FEE                                     postinc1 003FE6  
                                   postinc2 003FDE                            ?_ADCC_Initialize 0001  
                                _valve_init 1E08            __end_of_ADCC_GetSingleConversion 1ABE  
                                ??_txb_init 002D                        _get_general_cmd_type 19A0  
                                 _PORTBbits 003FCB                            _get_offset_bytes 1830  
     check_battery_voltage_error@error_code 008F                            _get_message_type 19FA  
                     ?_build_valve_stat_msg 0066                get_general_cmd_type@msg_type 0008  
                                _vent_close 1E34                                 srb_init@ctx 0067  
                         ??_can_msg_handler 000D                        __size_of_txb_enqueue 003A  
          build_analog_data_msg@sensor_data 0069                    ??_get_valve_closed_state 002D  
                               srb_push@ctx 006C                     ?_write_timestamp_2bytes 0060  
                   ?_write_timestamp_3bytes 0060                    _battery_voltage_critical 00D9  
                            ??_srb_is_empty 0062                __end_of_can_handle_interrupt 06B8  
                               ___ftmul@exp 0074                           __size_of_LED_init 000E  
                   can_msg_handler@cmd_type 0011                 __end_of_get_board_unique_id 1CDC  
                     ?_get_general_cmd_type 0005                              __end_of___wmul 1C86  
                           can_send@message 006B                                   i2memcpy@d 0007  
                                 i2memcpy@n 0005                                   i2memcpy@s 0009  
                               _ECANCONbits 003F91                              __end_of_memcpy 18EA  
                    ?_OSCILLATOR_Initialize 0001                              __end_of_millis 1DF6  
                       start_initialization 1B74                     can_msg_handler@msg_type 000F  
             __size_of_get_valve_open_state 0014             __size_of_PIN_MANAGER_Initialize 003C  
                     _requested_valve_state 00DA                           __size_ofi2_memcpy 005A  
               get_req_valve_state@msg_type 0009                           __size_ofi2_millis 0012  
          __size_of_timer0_handle_interrupt 0026                                  ivt0x8_base 0008  
                               _CANSTATbits 003F8E                          can_msg_handler@msg 000B  
          build_valve_stat_msg@message_type 006C              __end_of_write_timestamp_2bytes 1D02  
            __end_of_write_timestamp_3bytes 1C22                __size_of_get_req_valve_state 00C0  
        __end_of_can_generate_timing_params 02C6                  _can_generate_timing_params 001E  
                          ??_PMD_Initialize 002D                                    ??___wmul 002D  
       check_bus_current_error@curr_draw_mA 0080                                 ?_valve_init 0001  
                                  ??_memcpy 002D                                    ??_millis 002D  
                    ??_build_valve_stat_msg 0070              __size_of_build_analog_data_msg 0088  
             __end_of_build_analog_data_msg 17BA                     ??_check_valve_pin_error 002D  
                  _ADCC_GetSingleConversion 1A80                           __size_of___ftpack 010A  
                   _check_bus_current_error 14BA                                 ?_vent_close 0001  
                               __pbssCOMRAM 002D                           __size_of___lwtoft 0026  
                             __pcstackBANK0 0060                                 _BRGCON1bits 003703  
                         __size_of_can_init 017A                                 _BRGCON2bits 003704  
                               _BRGCON3bits 003705                           __size_of_can_send 0112  
                           main@blue_led_on 00B9               _last_can_traffic_timestamp_ms 00D1  
                ??_is_batt_voltage_critical 002D                ?_check_battery_voltage_error 0001  
                     __end_of_txb_heartbeat 1732                    vent_send_status@stat_msg 007C  
                    get_req_valve_state@msg 0005             __size_of_get_valve_closed_state 0014  
                 __size_of_vent_send_status 00D2    __end_of_ADCC_DisableContinuousConversion 1E46  
 __size_of_ADCC_DisableContinuousConversion 0006          ??_ADCC_DisableContinuousConversion 002D  
         ?_ADCC_DisableContinuousConversion 0001            _ADCC_DisableContinuousConversion 1E40  
             build_board_stat_msg@timestamp 0066                            ___lwdiv@dividend 0060  
                    _PIN_MANAGER_Initialize 1B38                             fp__can_send_rdy 0000  
           ADCC_GetSingleConversion@channel 0064                      ??_get_general_cmd_type 0007  
                                  ?___ftmul 006B                                    ?___fttol 007A  
                                  ?___lwdiv 0060                           __size_of_srb_init 008A  
                         __size_of_srb_push 00E4                           __size_of_txb_init 0038  
                         _interrupt_handler 1ABE                                 _COMSTATbits 003F90  
      check_battery_voltage_error@batt_data 0092  check_battery_voltage_error@batt_voltage_mV 00AA  
                          ??_send_status_ok 002D                          ?_interrupt_handler 0001  
                                  _CANRXPPS 003AED         build_valve_stat_msg@req_valve_state 006B  
                      __end_of_srb_is_empty 1B38                                    ?_srb_pop 006C  
                      _can_handle_interrupt 04E4                            ___lwdiv@quotient 0065  
                       ??_interrupt_handler 002D                         __size_of_valve_init 0010  
                            ___wmul@product 0064                    __end_of_get_offset_bytes 188E  
                                  _LED_init 1E18                                    _PIE3bits 003993  
                                  _PIE5bits 003995                    __end_of_get_message_type 1A3E  
             build_valve_stat_msg@timestamp 0066                                    i2u300_40 1AF2  
                                  i2u300_41 1AEE                                    i2u223_40 09E6  
                                  i2u223_41 09E2                                    i2u224_40 0A10  
                                  i2u224_41 0A0C                                    i2u253_40 199E  
                                  i2u253_41 199A                                    i2u190_40 1A0C  
                                  i2u190_41 1A08                                    i2u271_40 04F2  
                                  i2u271_41 04EE                                    i2u272_40 0500  
                                  i2u272_41 04FC                                    i2u281_40 0660  
                                  i2u280_48 0632                                    i2u273_40 0514  
                                  i2u281_41 065C                                    i2u280_49 0646  
                                  i2u273_41 0510                                    i2u282_40 0674  
                                  i2u282_41 0670                                    i2u274_45 051E  
                                  i2u283_40 0688                                    i2u275_40 057E  
                                  i2u283_41 0684                                    i2u275_41 057A  
                                  i2u196_40 1CC4                                    i2u284_40 069C  
                                  i2u196_41 1CC0                                    i2u284_41 0698  
                       __size_of_vent_close 0006                                    i2u197_40 19B2  
                                  i2u285_40 06B0                                    i2u277_40 05B8  
                                  i2u276_48 058C                                    i2u197_41 19AE  
                                  i2u285_41 06AC                                    i2u277_41 05B4  
                                  i2u276_49 05A0                                    _PIR3bits 0039A3  
                                  i2u198_40 19E2                                    i2u198_41 19DE  
                                  i2u278_45 05C2                                    i2u199_40 140C  
                                  i2u279_40 0624                                    i2u199_41 1408  
                                  i2u279_41 0620                                    _PIR5bits 0039A5  
                                  i2u298_40 1AD0                                    i2u298_41 1ACC  
                                  i2u299_40 1AE4                                    i2u299_41 1AE0  
                                  _RXB0SIDH 003F81                                    _RXB0SIDL 003F82  
                                  _RXB1SIDH 0037F1                                    _RXB1SIDL 0037F2  
                             ??_timer0_init 002D                                    _TXB0SIDH 0037E1  
                                  _TXB0SIDL 0037E2                                    _RXM0SIDH 0037B8  
                                  _RXM0SIDL 0037B9                                    _RXM1SIDH 0037BC  
                                  _RXM1SIDL 0037BD        check_battery_voltage_error@error_msg 0094  
                           main@last_millis 00B5                             _can_msg_handler 09B6  
                 __end_of_interrupt_handler 1AFC                                   _vent_open 1E2E  
                 ??_check_bus_current_error 002D                               ?_can_send_rdy 0001  
                                _ADCON0bits 003EF8                                  _ADCON1bits 003EF9  
                                _ADCON2bits 003EFA               __size_of_build_board_stat_msg 0108  
                                _ADCON3bits 003EFB                           ___wmul@multiplier 0060  
                    _get_valve_closed_state 1DD0                                  srb_pop@ctx 006C  
                   __size_of_FVR_Initialize 0008                                    i2_memcpy 1946  
                                  i2_millis 1DF6                               ??_srb_is_full 0062  
                     ?_can_handle_interrupt 0001                        srb_init@element_size 006D  
                   _timer0_handle_interrupt 1D28                                 _INTCON0bits 003FD2  
                                _CANCONbits 003F8F        check_battery_voltage_error@timestamp 0089  
              send_status_ok@board_stat_msg 0078                                  _ADSTATbits 003EFC  
                                  __Hrparam 0000                                   memcpy@tmp 0066  
                                  __Lrparam 0000                     ??_OSCILLATOR_Initialize 002D  
                                _CIOCONbits 003700                            __size_of___ftmul 0126  
                          __size_of___fttol 0122                            __size_of___lwdiv 0076  
      __size_of_check_battery_voltage_error 0184                                  ?_vent_open 0001  
                            ??_can_send_rdy 002D                                    ___ftpack 0E8A  
              ??_can_generate_timing_params 0066                                    ___lwtoft 1D02  
                         txb_init@pool_size 0071                         __end_of_timer0_init 1D90  
                                  _can_init 083C                                    _can_send 0D78  
                                _T0CON0bits 003FB8                                  _T0CON1bits 003FB9  
                  __size_of_ADCC_Initialize 005C                               ??_txb_enqueue 002D  
                                  __pivt0x8 0008                             ___lwdiv@divisor 0062  
                           ___lwdiv@counter 0064                         _get_req_valve_state 13FA  
                                  __ptext10 16AA                                    __ptext11 109C  
                                  __ptext20 17BA                                    __ptext12 1AFC  
                                  __ptext21 06B8                                    __ptext13 1D90  
                                  __ptext30 1BE8                                    __ptext22 1BAE  
                                  __ptext14 0D78                                    __ptext31 1732  
                                  __ptext23 1180                                    __ptext15 1D72  
                                  __ptext40 1DA6                                    __ptext32 1CDC  
                                  __ptext24 156E                                    __ptext16 1A3E  
                                  __ptext41 1D4E                                    __ptext33 1D02  
                                  __ptext25 188E                                    __ptext17 1E3A  
                                  __ptext50 04E4                                    __ptext42 1B38  
                                  __ptext34 0C56                                    __ptext26 1830  
                                  __ptext18 1E46                                    __ptext51 1946  
                                  __ptext43 1C86                                    __ptext35 0B30  
                                  __ptext27 1C5A                                    __ptext19 14BA  
                                  __ptext52 09B6                                    __ptext44 1E26  
                                  __ptext36 0E8A                                    __ptext28 1DE4  
                                  __ptext53 1DF6                                    __ptext45 18EA  
                                  __ptext37 1A80                                    __ptext29 0F94  
                                  __ptext54 13FA                                    __ptext46 1E18  
                                  __ptext38 083C                                    __ptext55 19A0  
                                  __ptext47 1E40                                    __ptext39 001E  
                                  __ptext56 19FA                                    __ptext48 1ABE  
                                  __ptext57 1CB2                                    __ptext49 1D28  
                                  __ptext58 0000            __end_of_is_batt_voltage_critical 1E40  
                          __size_of_srb_pop 00E4                                 _OSCCON3bits 0039DB  
                     txb_heartbeat@msg_sent 0076             __end_of_check_bus_current_error 156E  
                       __end_of_srb_is_full 1620                               __size_of_main 021E  
       check_bus_current_error@sense_raw_mV 007C                            _vent_send_status 1264  
           write_timestamp_2bytes@timestamp 0060                __end_of_get_valve_open_state 1DD0  
                   __end_of_can_msg_handler 0B30                   vent_send_status@req_state 0078  
                      ?_get_req_valve_state 0005                                    isa$xinst 000000  
                                  _srb_init 1620                    can_init@receive_callback 0062  
               ?_can_generate_timing_params 0060                  ??_ADCC_GetSingleConversion 0062  
                                  _srb_push 1180                                ??_valve_init 002D  
            build_analog_data_msg@sensor_id 0068                                    _txb_init 1C22  
                                  main@argc 00AC                                    main@argv 00AE  
                __size_of_interrupt_handler 003E              build_analog_data_msg@timestamp 0064  
                            _millis_counter 002D                                 _RXB0DLCbits 003F85  
                     __size_of_srb_is_empty 003C                                 _RXB1DLCbits 0037F5  
                               _RXB0CONbits 003F80             build_valve_stat_msg@valve_state 006A  
                 ??_timer0_handle_interrupt 0001                                 _RXB1CONbits 0037F0  
                              ??_vent_close 002D                      ??_can_handle_interrupt 0013  
              __size_of_get_board_unique_id 002A              __size_of_check_valve_pin_error 0004  
                                  memcpy@d1 0060                                  _FVRCONbits 003EC1  
             __end_of_check_valve_pin_error 1E4A                                    memcpy@s1 0062  
                      txb_init@can_tx_ready 0075                                    intlevel2 0000  
              can_handle_interrupt@rcvd_msg 0017                         __end_of_txb_enqueue 1BE8  
                        __end_of_valve_init 1E18                     ?_PIN_MANAGER_Initialize 0001  
                               _TXB0DLCbits 0037E5                                 _TXB0CONbits 0037E0  
                     ??_get_req_valve_state 0007                          __end_of_vent_close 1E3A  
                              _srb_is_empty 1AFC                         txb_init@can_send_fp 0073  
                               _timer0_init 1D72                                 ??_vent_open 002D  
                            _FVR_Initialize 1E26                write_timestamp_2bytes@output 0062  
             __size_of_build_valve_stat_msg 00C4                       _build_analog_data_msg 1732  
              vent_send_status@valve_closed 007B                                 _srb_is_full 156E  
                               fp__can_send 0000              __end_of_PIN_MANAGER_Initialize 1B74  
                         ??_ADCC_Initialize 002D                        __end_of_can_send_rdy 1DA6  
           __end_of_timer0_handle_interrupt 1D4E                           ?_get_offset_bytes 0066  
                         ?_get_message_type 0001                            ?_can_msg_handler 000B  
                        ??_get_offset_bytes 006A  
